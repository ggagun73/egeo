/* The JSTS Topology Suite is a collection of JavaScript classes that
implement the fundamental operations required to validate a given
geo-spatial data set to a known topological specification.

Copyright (C) 2011 The Authors

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA */
jsts_old={version:'0.11.1',algorithm:{distance:{},locate:{}},error:{},geom:{util:{}},geomgraph:{index:{}},index:{bintree:{},chain:{},kdtree:{},quadtree:{},strtree:{}},io:{},noding:{snapround:{}},operation:{buffer:{},distance:{},overlay:{snap:{}},relate:{},union:{},valid:{}},planargraph:{},simplify:{},triangulate:{quadedge:{}},util:{}};jsts_old.abstractFunc=function(){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.error={};jsts_old.error.IllegalArgumentError=function(message){this.name='IllegalArgumentError';this.message=message;};jsts_old.error.IllegalArgumentError.prototype=new Error();jsts_old.error.TopologyError=function(message,pt){this.name='TopologyError';this.message=pt?message+' [ '+pt+' ]':message;};jsts_old.error.TopologyError.prototype=new Error();jsts_old.error.AbstractMethodInvocationError=function(){this.name='AbstractMethodInvocationError';this.message='Abstract method called, should be implemented in subclass.';};jsts_old.error.AbstractMethodInvocationError.prototype=new Error();jsts_old.error.NotImplementedError=function(){this.name='NotImplementedError';this.message='This method has not yet been implemented.';};jsts_old.error.NotImplementedError.prototype=new Error();jsts_old.error.NotRepresentableError=function(message){this.name='NotRepresentableError';this.message=message;};jsts_old.error.NotRepresentableError.prototype=new Error();jsts_old.error.LocateFailureError=function(message){this.name='LocateFailureError';this.message=message;};jsts_old.error.LocateFailureError.prototype=new Error();jsts_old.geom.GeometryFilter=function(){};jsts_old.geom.GeometryFilter.prototype.filter=function(geom){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.geom.util.PolygonExtracter=function(comps){this.comps=comps;};jsts_old.geom.util.PolygonExtracter.prototype=new jsts_old.geom.GeometryFilter();jsts_old.geom.util.PolygonExtracter.prototype.comps=null;jsts_old.geom.util.PolygonExtracter.getPolygons=function(geom,list){if(list===undefined){list=[];}
if(geom instanceof jsts_old.geom.Polygon){list.push(geom);}else if(geom instanceof jsts_old.geom.GeometryCollection){geom.apply(new jsts_old.geom.util.PolygonExtracter(list));}
return list;};jsts_old.geom.util.PolygonExtracter.prototype.filter=function(geom){if(geom instanceof jsts_old.geom.Polygon)
this.comps.push(geom);};jsts_old.io.WKTParser=function(geometryFactory){this.geometryFactory=geometryFactory||new jsts_old.geom.GeometryFactory();this.regExes={'typeStr':/^\s*(\w+)\s*\(\s*(.*)\s*\)\s*$/,'emptyTypeStr':/^\s*(\w+)\s*EMPTY\s*$/,'spaces':/\s+/,'parenComma':/\)\s*,\s*\(/,'doubleParenComma':/\)\s*\)\s*,\s*\(\s*\(/,'trimParens':/^\s*\(?(.*?)\)?\s*$/};};jsts_old.io.WKTParser.prototype.read=function(wkt){var geometry,type,str;wkt=wkt.replace(/[\n\r]/g,' ');var matches=this.regExes.typeStr.exec(wkt);if(wkt.search('EMPTY')!==-1){matches=this.regExes.emptyTypeStr.exec(wkt);matches[2]=undefined;}
if(matches){type=matches[1].toLowerCase();str=matches[2];if(this.parse[type]){geometry=this.parse[type].apply(this,[str]);}}
if(geometry===undefined)
throw new Error('Could not parse WKT '+wkt);return geometry;};jsts_old.io.WKTParser.prototype.write=function(geometry){return this.extractGeometry(geometry);};jsts_old.io.WKTParser.prototype.extractGeometry=function(geometry){var type=geometry.CLASS_NAME.split('.')[2].toLowerCase();if(!this.extract[type]){return null;}
var wktType=type.toUpperCase();var data;if(geometry.isEmpty()){data=wktType+' EMPTY';}else{data=wktType+'('+this.extract[type].apply(this,[geometry])+')';}
return data;};jsts_old.io.WKTParser.prototype.extract={'coordinate':function(coordinate){return coordinate.x+' '+coordinate.y;},'point':function(point){return point.coordinate.x+' '+point.coordinate.y;},'multipoint':function(multipoint){var array=[];for(var i=0,len=multipoint.geometries.length;i<len;++i){array.push('('+
this.extract.point.apply(this,[multipoint.geometries[i]])+')');}
return array.join(',');},'linestring':function(linestring){var array=[];for(var i=0,len=linestring.points.length;i<len;++i){array.push(this.extract.coordinate.apply(this,[linestring.points[i]]));}
return array.join(',');},'multilinestring':function(multilinestring){var array=[];for(var i=0,len=multilinestring.geometries.length;i<len;++i){array.push('('+
this.extract.linestring.apply(this,[multilinestring.geometries[i]])+')');}
return array.join(',');},'polygon':function(polygon){var array=[];array.push('('+this.extract.linestring.apply(this,[polygon.shell])+')');for(var i=0,len=polygon.holes.length;i<len;++i){array.push('('+this.extract.linestring.apply(this,[polygon.holes[i]])+')');}
return array.join(',');},'multipolygon':function(multipolygon){var array=[];for(var i=0,len=multipolygon.geometries.length;i<len;++i){array.push('('+
this.extract.polygon.apply(this,[multipolygon.geometries[i]])+')');}
return array.join(',');},'geometrycollection':function(collection){var array=[];for(var i=0,len=collection.geometries.length;i<len;++i){array.push(this.extractGeometry.apply(this,[collection.geometries[i]]));}
return array.join(',');}};jsts_old.io.WKTParser.prototype.parse={'point':function(str){if(str===undefined){return this.geometryFactory.createPoint(null);}
var coords=str.trim().split(this.regExes.spaces);return this.geometryFactory.createPoint(new jsts_old.geom.Coordinate(coords[0],coords[1]));},'multipoint':function(str){if(str===undefined){return this.geometryFactory.createMultiPoint(null);}
var point;var points=str.trim().split(',');var components=[];for(var i=0,len=points.length;i<len;++i){point=points[i].replace(this.regExes.trimParens,'$1');components.push(this.parse.point.apply(this,[point]));}
return this.geometryFactory.createMultiPoint(components);},'linestring':function(str){if(str===undefined){return this.geometryFactory.createLineString(null);}
var points=str.trim().split(',');var components=[];var coords;for(var i=0,len=points.length;i<len;++i){coords=points[i].trim().split(this.regExes.spaces);components.push(new jsts_old.geom.Coordinate(coords[0],coords[1]));}
return this.geometryFactory.createLineString(components);},'linearring':function(str){if(str===undefined){return this.geometryFactory.createLinearRing(null);}
var points=str.trim().split(',');var components=[];var coords;for(var i=0,len=points.length;i<len;++i){coords=points[i].trim().split(this.regExes.spaces);components.push(new jsts_old.geom.Coordinate(coords[0],coords[1]));}
return this.geometryFactory.createLinearRing(components);},'multilinestring':function(str){if(str===undefined){return this.geometryFactory.createMultiLineString(null);}
var line;var lines=str.trim().split(this.regExes.parenComma);var components=[];for(var i=0,len=lines.length;i<len;++i){line=lines[i].replace(this.regExes.trimParens,'$1');components.push(this.parse.linestring.apply(this,[line]));}
return this.geometryFactory.createMultiLineString(components);},'polygon':function(str){if(str===undefined){return this.geometryFactory.createPolygon(null);}
var ring,linestring,linearring;var rings=str.trim().split(this.regExes.parenComma);var shell;var holes=[];for(var i=0,len=rings.length;i<len;++i){ring=rings[i].replace(this.regExes.trimParens,'$1');linestring=this.parse.linestring.apply(this,[ring]);linearring=this.geometryFactory.createLinearRing(linestring.points);if(i===0){shell=linearring;}else{holes.push(linearring);}}
return this.geometryFactory.createPolygon(shell,holes);},'multipolygon':function(str){if(str===undefined){return this.geometryFactory.createMultiPolygon(null);}
var polygon;var polygons=str.trim().split(this.regExes.doubleParenComma);var components=[];for(var i=0,len=polygons.length;i<len;++i){polygon=polygons[i].replace(this.regExes.trimParens,'$1');components.push(this.parse.polygon.apply(this,[polygon]));}
return this.geometryFactory.createMultiPolygon(components);},'geometrycollection':function(str){if(str===undefined){return this.geometryFactory.createGeometryCollection(null);}
str=str.replace(/,\s*([A-Za-z])/g,'|$1');var wktArray=str.trim().split('|');var components=[];for(var i=0,len=wktArray.length;i<len;++i){components.push(jsts_old.io.WKTParser.prototype.read.apply(this,[wktArray[i]]));}
return this.geometryFactory.createGeometryCollection(components);}};jsts_old.algorithm.HCoordinate=function(){this.x=0.0;this.y=0.0;this.w=1.0;if(arguments.length===1){this.initFrom1Coordinate(arguments[0]);}else if(arguments.length===2&&arguments[0]instanceof jsts_old.geom.Coordinate){this.initFrom2Coordinates(arguments[0],arguments[1]);}else if(arguments.length===2&&arguments[0]instanceof jsts_old.algorithm.HCoordinate){this.initFrom2HCoordinates(arguments[0],arguments[1]);}else if(arguments.length===2){this.initFromXY(arguments[0],arguments[1]);}else if(arguments.length===3){this.initFromXYW(arguments[0],arguments[1],arguments[2]);}else if(arguments.length===4){this.initFromXYW(arguments[0],arguments[1],arguments[2],arguments[3]);}};jsts_old.algorithm.HCoordinate.intersection=function(p1,p2,q1,q2){var px,py,pw,qx,qy,qw,x,y,w,xInt,yInt;px=p1.y-p2.y;py=p2.x-p1.x;pw=p1.x*p2.y-p2.x*p1.y;qx=q1.y-q2.y;qy=q2.x-q1.x;qw=q1.x*q2.y-q2.x*q1.y;x=py*qw-qy*pw;y=qx*pw-px*qw;w=px*qy-qx*py;xInt=x/w;yInt=y/w;if(!isFinite(xInt)||!isFinite(yInt)){throw new jsts_old.error.NotRepresentableError();}
return new jsts_old.geom.Coordinate(xInt,yInt);};jsts_old.algorithm.HCoordinate.prototype.initFrom1Coordinate=function(p){this.x=p.x;this.y=p.y;this.w=1.0;};jsts_old.algorithm.HCoordinate.prototype.initFrom2Coordinates=function(p1,p2){this.x=p1.y-p2.y;this.y=p2.x-p1.x;this.w=p1.x*p2.y-p2.x*p1.y;};jsts_old.algorithm.HCoordinate.prototype.initFrom2HCoordinates=function(p1,p2){this.x=p1.y*p2.w-p2.y*p1.w;this.y=p2.x*p1.w-p1.x*p2.w;this.w=p1.x*p2.y-p2.x*p1.y;};jsts_old.algorithm.HCoordinate.prototype.initFromXYW=function(x,y,w){this.x=x;this.y=y;this.w=w;};jsts_old.algorithm.HCoordinate.prototype.initFromXY=function(x,y){this.x=x;this.y=y;this.w=1.0;};jsts_old.algorithm.HCoordinate.prototype.initFrom4Coordinates=function(p1,p2,q1,q2){var px,py,pw,qx,qy,qw;px=p1.y-p2.y;py=p2.x-p1.x;pw=p1.x*p2.y-p2.x*p1.y;qx=q1.y-q2.y;qy=q2.x-q1.x;qw=q1.x*q2.y-q2.x*q1.y;this.x=py*qw-qy*pw;this.y=qx*pw-px*qw;this.w=px*qy-qx*py;};jsts_old.algorithm.HCoordinate.prototype.getX=function(){var a=this.x/this.w;if(!isFinite(a)){throw new jsts_old.error.NotRepresentableError();}
return a;};jsts_old.algorithm.HCoordinate.prototype.getY=function(){var a=this.y/this.w;if(!isFinite(a)){throw new jsts_old.error.NotRepresentableError();}
return a;};jsts_old.algorithm.HCoordinate.prototype.getCoordinate=function(){var p=new jsts_old.geom.Coordinate();p.x=this.getX();p.y=this.getY();return p;};jsts_old.algorithm.CGAlgorithms=function(){};jsts_old.algorithm.CGAlgorithms.CLOCKWISE=-1;jsts_old.algorithm.CGAlgorithms.RIGHT=jsts_old.algorithm.CGAlgorithms.CLOCKWISE;jsts_old.algorithm.CGAlgorithms.COUNTERCLOCKWISE=1;jsts_old.algorithm.CGAlgorithms.LEFT=jsts_old.algorithm.CGAlgorithms.COUNTERCLOCKWISE;jsts_old.algorithm.CGAlgorithms.COLLINEAR=0;jsts_old.algorithm.CGAlgorithms.STRAIGHT=jsts_old.algorithm.CGAlgorithms.COLLINEAR;jsts_old.algorithm.CGAlgorithms.orientationIndex=function(p1,p2,q){var dx1,dy1,dx2,dy2;dx1=p2.x-p1.x;dy1=p2.y-p1.y;dx2=q.x-p2.x;dy2=q.y-p2.y;return jsts_old.algorithm.RobustDeterminant.signOfDet2x2(dx1,dy1,dx2,dy2);};jsts_old.algorithm.CGAlgorithms.isPointInRing=function(p,ring){return jsts_old.algorithm.CGAlgorithms.locatePointInRing(p,ring)!==jsts_old.geom.Location.EXTERIOR;};jsts_old.algorithm.CGAlgorithms.locatePointInRing=function(p,ring){return jsts_old.algorithm.RayCrossingCounter.locatePointInRing(p,ring);};jsts_old.algorithm.CGAlgorithms.isOnLine=function(p,pt){var lineIntersector,i,il,p0,p1;lineIntersector=new jsts_old.algorithm.RobustLineIntersector();for(i=1,il=pt.length;i<il;i++){p0=pt[i-1];p1=pt[i];lineIntersector.computeIntersection(p,p0,p1);if(lineIntersector.hasIntersection()){return true;}}
return false;};jsts_old.algorithm.CGAlgorithms.isCCW=function(ring){var nPts,hiPt,hiIndex,p,iPrev,iNext,prev,next,i,disc,isCCW;nPts=ring.length-1;if(nPts<3){throw new jsts_old.IllegalArgumentError('Ring has fewer than 3 points, so orientation cannot be determined');}
hiPt=ring[0];hiIndex=0;i=1;for(i;i<=nPts;i++){p=ring[i];if(p.y>hiPt.y){hiPt=p;hiIndex=i;}}
iPrev=hiIndex;do{iPrev=iPrev-1;if(iPrev<0){iPrev=nPts;}}while(ring[iPrev].equals2D(hiPt)&&iPrev!==hiIndex);iNext=hiIndex;do{iNext=(iNext+1)%nPts;}while(ring[iNext].equals2D(hiPt)&&iNext!==hiIndex);prev=ring[iPrev];next=ring[iNext];if(prev.equals2D(hiPt)||next.equals2D(hiPt)||prev.equals2D(next)){return false;}
disc=jsts_old.algorithm.CGAlgorithms.computeOrientation(prev,hiPt,next);isCCW=false;if(disc===0){isCCW=(prev.x>next.x);}else{isCCW=(disc>0);}
return isCCW;};jsts_old.algorithm.CGAlgorithms.computeOrientation=function(p1,p2,q){return jsts_old.algorithm.CGAlgorithms.orientationIndex(p1,p2,q);};jsts_old.algorithm.CGAlgorithms.distancePointLine=function(p,A,B){if(!(A instanceof jsts_old.geom.Coordinate)){jsts_old.algorithm.CGAlgorithms.distancePointLine2.apply(this,arguments);}
if(A.x===B.x&&A.y===B.y){return p.distance(A);}
var r,s;r=((p.x-A.x)*(B.x-A.x)+(p.y-A.y)*(B.y-A.y))/((B.x-A.x)*(B.x-A.x)+(B.y-A.y)*(B.y-A.y));if(r<=0.0){return p.distance(A);}
if(r>=1.0){return p.distance(B);}
s=((A.y-p.y)*(B.x-A.x)-(A.x-p.x)*(B.y-A.y))/((B.x-A.x)*(B.x-A.x)+(B.y-A.y)*(B.y-A.y));return Math.abs(s)*Math.sqrt(((B.x-A.x)*(B.x-A.x)+(B.y-A.y)*(B.y-A.y)));};jsts_old.algorithm.CGAlgorithms.distancePointLinePerpendicular=function(p,A,B){var s=((A.y-p.y)*(B.x-A.x)-(A.x-p.x)*(B.y-A.y))/((B.x-A.x)*(B.x-A.x)+(B.y-A.y)*(B.y-A.y));return Math.abs(s)*Math.sqrt(((B.x-A.x)*(B.x-A.x)+(B.y-A.y)*(B.y-A.y)));};jsts_old.algorithm.CGAlgorithms.distancePointLine2=function(p,line){var minDistance,i,il,dist;if(line.length===0){throw new jsts_old.error.IllegalArgumentError('Line array must contain at least one vertex');}
minDistance=p.distance(line[0]);for(i=0,il=line.length-1;i<il;i++){dist=jsts_old.algorithm.CGAlgorithms.distancePointLine(p,line[i],line[i+1]);if(dist<minDistance){minDistance=dist;}}
return minDistance;};jsts_old.algorithm.CGAlgorithms.distanceLineLine=function(A,B,C,D){if(A.equals(B)){return jsts_old.algorithm.CGAlgorithms.distancePointLine(A,C,D);}
if(C.equals(D)){return jsts_old.algorithm.CGAlgorithms.distancePointLine(D,A,B);}
var r_top,r_bot,s_top,s_bot,s,r;r_top=(A.y-C.y)*(D.x-C.x)-(A.x-C.x)*(D.y-C.y);r_bot=(B.x-A.x)*(D.y-C.y)-(B.y-A.y)*(D.x-C.x);s_top=(A.y-C.y)*(B.x-A.x)-(A.x-C.x)*(B.y-A.y);s_bot=(B.x-A.x)*(D.y-C.y)-(B.y-A.y)*(D.x-C.x);if((r_bot===0)||(s_bot===0)){return Math.min(jsts_old.algorithm.CGAlgorithms.distancePointLine(A,C,D),Math.min(jsts_old.algorithm.CGAlgorithms.distancePointLine(B,C,D),Math.min(jsts_old.algorithm.CGAlgorithms.distancePointLine(C,A,B),jsts_old.algorithm.CGAlgorithms.distancePointLine(D,A,B))));}
s=s_top/s_bot;r=r_top/r_bot;if((r<0)||(r>1)||(s<0)||(s>1)){return Math.min(jsts_old.algorithm.CGAlgorithms.distancePointLine(A,C,D),Math.min(jsts_old.algorithm.CGAlgorithms.distancePointLine(B,C,D),Math.min(jsts_old.algorithm.CGAlgorithms.distancePointLine(C,A,B),jsts_old.algorithm.CGAlgorithms.distancePointLine(D,A,B))));}
return 0.0;};jsts_old.algorithm.CGAlgorithms.signedArea=function(ring){if(ring.length<3){return 0.0;}
var sum,i,il,bx,by,cx,cy;sum=0.0;for(i=0,il=ring.length-1;i<il;i++){bx=ring[i].x;by=ring[i].y;cx=ring[i+1].x;cy=ring[i+1].y;sum+=(bx+cx)*(cy-by);}
return-sum/2.0;};jsts_old.algorithm.CGAlgorithms.signedArea=function(ring){var n,sum,p,bx,by,i,cx,cy;n=ring.length;if(n<3){return 0.0;}
sum=0.0;p=ring[0];bx=p.x;by=p.y;for(i=1;i<n;i++){p=ring[i];cx=p.x;cy=p.y;sum+=(bx+cx)*(cy-by);bx=cx;by=cy;}
return-sum/2.0;};jsts_old.algorithm.CGAlgorithms.computeLength=function(pts){var n=pts.length,len,x0,y0,x1,y1,dx,dy,p,i,il;if(n<=1){return 0.0;}
len=0.0;p=pts[0];x0=p.x;y0=p.y;i=1,il=n;for(i;i<n;i++){p=pts[i];x1=p.x;y1=p.y;dx=x1-x0;dy=y1-y0;len+=Math.sqrt(dx*dx+dy*dy);x0=x1;y0=y1;}
return len;};jsts_old.algorithm.CGAlgorithms.length=function(){};jsts_old.algorithm.Angle=function(){};jsts_old.algorithm.Angle.PI_TIMES_2=2.0*Math.PI;jsts_old.algorithm.Angle.PI_OVER_2=Math.PI/2.0;jsts_old.algorithm.Angle.PI_OVER_4=Math.PI/4.0;jsts_old.algorithm.Angle.COUNTERCLOCKWISE=jsts_old.algorithm.CGAlgorithms.prototype.COUNTERCLOCKWISE;jsts_old.algorithm.Angle.CLOCKWISE=jsts_old.algorithm.CGAlgorithms.prototype.CLOCKWISE;jsts_old.algorithm.Angle.NONE=jsts_old.algorithm.CGAlgorithms.prototype.COLLINEAR;jsts_old.algorithm.Angle.toDegrees=function(radians){return(radians*180)/Math.PI;};jsts_old.algorithm.Angle.toRadians=function(angleDegrees){return(angleDegrees*Math.PI)/180.0;};jsts_old.algorithm.Angle.angle=function(){if(arguments.length===1){return jsts_old.algorithm.Angle.angleFromOrigo(arguments[0]);}else{return jsts_old.algorithm.Angle.angleBetweenCoords(arguments[0],arguments[1]);}};jsts_old.algorithm.Angle.angleBetweenCoords=function(p0,p1){var dx,dy;dx=p1.x-p0.x;dy=p1.y-p0.y;return Math.atan2(dy,dx);};jsts_old.algorithm.Angle.angleFromOrigo=function(p){return Math.atan2(p.y,p.x);};jsts_old.algorithm.Angle.isAcute=function(p0,p1,p2){var dx0,dy0,dx1,dy1,dotprod;dx0=p0.x-p1.x;dy0=p0.y-p1.y;dx1=p2.x-p1.x;dy1=p2.y-p1.y;dotprod=dx0*dx1+dy0*dy1;return dotprod>0;};jsts_old.algorithm.Angle.isObtuse=function(p0,p1,p2){var dx0,dy0,dx1,dy1,dotprod;dx0=p0.x-p1.x;dy0=p0.y-p1.y;dx1=p2.x-p1.x;dy1=p2.y-p1.y;dotprod=dx0*dx1+dy0*dy1;return dotprod<0;};jsts_old.algorithm.Angle.angleBetween=function(tip1,tail,tip2){var a1,a2;a1=jsts_old.algorithm.Angle.angle(tail,tip1);a2=jsts_old.algorithm.Angle.angle(tail,tip2);return jsts_old.algorithm.Angle.diff(a1,a2);};jsts_old.algorithm.Angle.angleBetweenOriented=function(tip1,tail,tip2){var a1,a2,angDel;a1=jsts_old.algorithm.Angle.angle(tail,tip1);a2=jsts_old.algorithm.Angle.angle(tail,tip2);angDel=a2-a1;if(angDel<=-Math.PI){return angDel+jsts_old.algorithm.Angle.PI_TIMES_2;}
if(angDel>Math.PI){return angDel-jsts_old.algorithm.Angle.PI_TIMES_2;}
return angDel;};jsts_old.algorithm.Angle.interiorAngle=function(p0,p1,p2){var anglePrev,angleNext;anglePrev=jsts_old.algorithm.Angle.angle(p1,p0);angleNext=jsts_old.algorithm.Angle.angle(p1,p2);return Math.abs(angleNext-anglePrev);};jsts_old.algorithm.Angle.getTurn=function(ang1,ang2){var crossproduct=Math.sin(ang2-ang1);if(crossproduct>0){return jsts_old.algorithm.Angle.COUNTERCLOCKWISE;}
if(crossproduct<0){return jsts_old.algorithm.Angle.CLOCKWISE;}
return jsts_old.algorithm.Angle.NONE;};jsts_old.algorithm.Angle.normalize=function(angle){while(angle>Math.PI){angle-=jsts_old.algorithm.Angle.PI_TIMES_2;}
while(angle<=-Math.PI){angle+=jsts_old.algorithm.Angle.PI_TIMES_2;}
return angle;};jsts_old.algorithm.Angle.normalizePositive=function(angle){if(angle<0.0){while(angle<0.0){angle+=jsts_old.algorithm.Angle.PI_TIMES_2;}
if(angle>=jsts_old.algorithm.Angle.PI_TIMES_2){angle=0.0;}}
else{while(angle>=jsts_old.algorithm.Angle.PI_TIMES_2){angle-=jsts_old.algorithm.Angle.PI_TIMES_2;}
if(angle<0.0){angle=0.0;}}
return angle;};jsts_old.algorithm.Angle.diff=function(ang1,ang2){var delAngle;if(ang1<ang2){delAngle=ang2-ang1;}else{delAngle=ang1-ang2;}
if(delAngle>Math.PI){delAngle=(2*Math.PI)-delAngle;}
return delAngle;};jsts_old.geom.GeometryComponentFilter=function(){};jsts_old.geom.GeometryComponentFilter.prototype.filter=function(geom){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.geom.util.LinearComponentExtracter=function(lines,isForcedToLineString){this.lines=lines;this.isForcedToLineString=isForcedToLineString;};jsts_old.geom.util.LinearComponentExtracter.prototype=new jsts_old.geom.GeometryComponentFilter();jsts_old.geom.util.LinearComponentExtracter.prototype.lines=null;jsts_old.geom.util.LinearComponentExtracter.prototype.isForcedToLineString=false;jsts_old.geom.util.LinearComponentExtracter.getLines=function(geoms,lines){if(arguments.length==1){return jsts_old.geom.util.LinearComponentExtracter.getLines5.apply(this,arguments);}
else if(arguments.length==2&&typeof lines==='boolean'){return jsts_old.geom.util.LinearComponentExtracter.getLines6.apply(this,arguments);}
else if(arguments.length==2&&geoms instanceof jsts_old.geom.Geometry){return jsts_old.geom.util.LinearComponentExtracter.getLines3.apply(this,arguments);}
else if(arguments.length==3&&geoms instanceof jsts_old.geom.Geometry){return jsts_old.geom.util.LinearComponentExtracter.getLines4.apply(this,arguments);}
else if(arguments.length==3){return jsts_old.geom.util.LinearComponentExtracter.getLines2.apply(this,arguments);}
for(var i=0;i<geoms.length;i++){var g=geoms[i];jsts_old.geom.util.LinearComponentExtracter.getLines3(g,lines);}
return lines;};jsts_old.geom.util.LinearComponentExtracter.getLines2=function(geoms,lines,forceToLineString){for(var i=0;i<geoms.length;i++){var g=geoms[i];jsts_old.geom.util.LinearComponentExtracter.getLines4(g,lines,forceToLineString);}
return lines;};jsts_old.geom.util.LinearComponentExtracter.getLines3=function(geom,lines){if(geom instanceof LineString){lines.add(geom);}else{geom.apply(new jsts_old.geom.util.LinearComponentExtracter(lines));}
return lines;};jsts_old.geom.util.LinearComponentExtracter.getLines4=function(geom,lines,forceToLineString){geom.apply(new jsts_old.geom.util.LinearComponentExtracter(lines,forceToLineString));return lines;};jsts_old.geom.util.LinearComponentExtracter.getLines5=function(geom){return jsts_old.geom.util.LinearComponentExtracter.getLines6(geom,false);};jsts_old.geom.util.LinearComponentExtracter.getLines6=function(geom,forceToLineString){var lines=[];geom.apply(new jsts_old.geom.util.LinearComponentExtracter(lines,forceToLineString));return lines;};jsts_old.geom.util.LinearComponentExtracter.prototype.setForceToLineString=function(isForcedToLineString){this.isForcedToLineString=isForcedToLineString;};jsts_old.geom.util.LinearComponentExtracter.prototype.filter=function(geom){if(this.isForcedToLineString&&geom instanceof jsts_old.geom.LinearRing){var line=geom.getFactory().createLineString(geom.getCoordinateSequence());this.lines.push(line);return;}
if(geom instanceof jsts_old.geom.LineString||geom instanceof jsts_old.geom.LinearRing)
this.lines.push(geom);};jsts_old.index.strtree.Boundable=function(){};jsts_old.index.strtree.Boundable.prototype.getBounds=function(){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.index.strtree.ItemBoundable=function(bounds,item){this.bounds=bounds;this.item=item;};jsts_old.index.strtree.ItemBoundable.prototype=new jsts_old.index.strtree.Boundable();jsts_old.index.strtree.ItemBoundable.constructor=jsts_old.index.strtree.ItemBoundable;jsts_old.index.strtree.ItemBoundable.prototype.bounds=null;jsts_old.index.strtree.ItemBoundable.prototype.item=null;jsts_old.index.strtree.ItemBoundable.prototype.getBounds=function(){return this.bounds;};jsts_old.index.strtree.ItemBoundable.prototype.getItem=function(){return this.item;};jsts_old.geom.Geometry=function(factory){this.factory=factory;};jsts_old.geom.Geometry.prototype.envelope=null;jsts_old.geom.Geometry.prototype.factory=null;jsts_old.geom.Geometry.prototype.getGeometryType=function(){return'Geometry';};jsts_old.geom.Geometry.hasNonEmptyElements=function(geometries){var i;for(i=0;i<geometries.length;i++){if(!geometries[i].isEmpty()){return true;}}
return false;};jsts_old.geom.Geometry.hasNullElements=function(array){var i;for(i=0;i<array.length;i++){if(array[i]===null){return true;}}
return false;};jsts_old.geom.Geometry.prototype.getFactory=function(){if(this.factory===null||this.factory===undefined){this.factory=new jsts_old.geom.GeometryFactory();}
return this.factory;};jsts_old.geom.Geometry.prototype.getNumGeometries=function(){return 1;};jsts_old.geom.Geometry.prototype.getGeometryN=function(n){return this;};jsts_old.geom.Geometry.prototype.getPrecisionModel=function(){return this.getFactory().getPrecisionModel();};jsts_old.geom.Geometry.prototype.getCoordinate=function(){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.geom.Geometry.prototype.getCoordinates=function(){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.geom.Geometry.prototype.getNumPoints=function(){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.geom.Geometry.prototype.isSimple=function(){this.checkNotGeometryCollection(this);var op=new jsts_old.operation.IsSimpleOp(this);return op.isSimple();};jsts_old.geom.Geometry.prototype.isValid=function(){var isValidOp=new jsts_old.operation.valid.IsValidOp(this);return isValidOp.isValid();};jsts_old.geom.Geometry.prototype.isEmpty=function(){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.geom.Geometry.prototype.distance=function(g){return jsts_old.operation.distance.DistanceOp.distance(this,g);};jsts_old.geom.Geometry.prototype.isWithinDistance=function(geom,distance){var envDist=this.getEnvelopeInternal().distance(geom.getEnvelopeInternal());if(envDist>distance){return false;}
return DistanceOp.isWithinDistance(this,geom,distance);};jsts_old.geom.Geometry.prototype.isRectangle=function(){return false;};jsts_old.geom.Geometry.prototype.getArea=function(){return 0.0;};jsts_old.geom.Geometry.prototype.getLength=function(){return 0.0;};jsts_old.geom.Geometry.prototype.getCentroid=function(){if(this.isEmpty()){return null;}
var cent;var centPt=null;var dim=this.getDimension();if(dim===0){cent=new jsts_old.algorithm.CentroidPoint();cent.add(this);centPt=cent.getCentroid();}else if(dim===1){cent=new jsts_old.algorithm.CentroidLine();cent.add(this);centPt=cent.getCentroid();}else{cent=new jsts_old.algorithm.CentroidArea();cent.add(this);centPt=cent.getCentroid();}
return this.createPointFromInternalCoord(centPt,this);};jsts_old.geom.Geometry.prototype.getInteriorPoint=function(){var intPt;var interiorPt=null;var dim=getDimension();if(dim===0){intPt=new InteriorPointPoint(this);interiorPt=intPt.getInteriorPoint();}else if(dim===1){intPt=new InteriorPointLine(this);interiorPt=intPt.getInteriorPoint();}else{intPt=new InteriorPointArea(this);interiorPt=intPt.getInteriorPoint();}
return this.createPointFromInternalCoord(interiorPt,this);};jsts_old.geom.Geometry.prototype.getDimension=function(){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.geom.Geometry.prototype.getBoundary=function(){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.geom.Geometry.prototype.getBoundaryDimension=function(){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.geom.Geometry.prototype.getEnvelope=function(){return this.getFactory().toGeometry(this.getEnvelopeInternal());};jsts_old.geom.Geometry.prototype.getEnvelopeInternal=function(){if(this.envelope===null){this.envelope=this.computeEnvelopeInternal();}
return this.envelope;};jsts_old.geom.Geometry.prototype.disjoint=function(g){return!this.intersects(g);};jsts_old.geom.Geometry.prototype.touches=function(g){if(!this.getEnvelopeInternal().intersects(g.getEnvelopeInternal())){return false;}
return this.relate(g).isTouches(this.getDimension(),g.getDimension());};jsts_old.geom.Geometry.prototype.intersects=function(g){if(!this.getEnvelopeInternal().intersects(g.getEnvelopeInternal())){return false;}
if(this.isRectangle()){return RectangleIntersects.intersects(this,g);}
if(g.isRectangle()){return RectangleIntersects.intersects(g,this);}
return this.relate(g).isIntersects();};jsts_old.geom.Geometry.prototype.crosses=function(g){if(!this.getEnvelopeInternal().intersects(g.getEnvelopeInternal())){return false;}
return this.relate(g).isCrosses(this.getDimension(),g.getDimension());};jsts_old.geom.Geometry.prototype.within=function(g){return g.contains(this);};jsts_old.geom.Geometry.prototype.contains=function(g){if(!this.getEnvelopeInternal().contains(g.getEnvelopeInternal())){return false;}
if(this.isRectangle()){return RectangleContains.contains(this,g);}
return this.relate(g).isContains();};jsts_old.geom.Geometry.prototype.overlaps=function(g){if(!this.getEnvelopeInternal().intersects(g.getEnvelopeInternal())){return false;}
return this.relate(g).isOverlaps(this.getDimension(),g.getDimension());};jsts_old.geom.Geometry.prototype.covers=function(g){if(!this.getEnvelopeInternal().covers(g.getEnvelopeInternal())){return false;}
if(this.isRectangle()){return true;}
return this.relate(g).isCovers();};jsts_old.geom.Geometry.prototype.coveredBy=function(g){return g.covers(this);};jsts_old.geom.Geometry.prototype.relate=function(g,intersectionPattern){if(arguments.length===1){return this.relate2.apply(this,arguments);}
return this.relate2(g).matches(intersectionPattern);};jsts_old.geom.Geometry.prototype.relate2=function(g){this.checkNotGeometryCollection(this);this.checkNotGeometryCollection(g);return jsts_old.operation.relate.RelateOp.relate(this,g);};jsts_old.geom.Geometry.prototype.equalsTopo=function(g){if(!this.getEnvelopeInternal().equals(g.getEnvelopeInternal())){return false;}
return this.relate(g).isEquals(this.getDimension(),g.getDimension());};jsts_old.geom.Geometry.prototype.equals=function(o){if(o instanceof jsts_old.geom.Geometry||o instanceof jsts_old.geom.LinearRing||o instanceof jsts_old.geom.Polygon||o instanceof jsts_old.geom.GeometryCollection||o instanceof jsts_old.geom.MultiPoint||o instanceof jsts_old.geom.MultiLineString||o instanceof jsts_old.geom.MultiPolygon){return this.equalsExact(o);}
return false;};jsts_old.geom.Geometry.prototype.buffer=function(){var args=[this];for(var i=0;i<arguments.length;i++){args[i+1]=arguments[i];}
return jsts_old.operation.buffer.BufferOp.bufferOp.apply(this,args);};jsts_old.geom.Geometry.prototype.convexHull=function(){return new jsts_old.algorithm.ConvexHull(this).getConvexHull();};jsts_old.geom.Geometry.prototype.intersection=function(other){if(this.isEmpty()){return this.getFactory().createGeometryCollection(null);}
if(other.isEmpty()){return this.getFactory().createGeometryCollection(null);}
if(this.isGeometryCollection(this)){var g2=other;}
this.checkNotGeometryCollection(this);this.checkNotGeometryCollection(other);return jsts_old.operation.overlay.snap.SnapIfNeededOverlayOp.overlayOp(this,other,jsts_old.operation.overlay.OverlayOp.INTERSECTION);};jsts_old.geom.Geometry.prototype.union=function(other){if(arguments.length===0){return jsts_old.operation.union.UnaryUnionOp.union(this);}
if(this.isEmpty()){return other.clone();}
if(other.isEmpty()){return this.clone();}
this.checkNotGeometryCollection(this);this.checkNotGeometryCollection(other);return jsts_old.operation.overlay.snap.SnapIfNeededOverlayOp.overlayOp(this,other,jsts_old.operation.overlay.OverlayOp.UNION);};jsts_old.geom.Geometry.prototype.difference=function(other){if(this.isEmpty()){return this.getFactory().createGeometryCollection(null);}
if(other.isEmpty()){return this.clone();}
this.checkNotGeometryCollection(this);this.checkNotGeometryCollection(other);return jsts_old.operation.overlay.snap.SnapIfNeededOverlayOp.overlayOp(this,other,jsts_old.operation.overlay.OverlayOp.DIFFERENCE);};jsts_old.geom.Geometry.prototype.symDifference=function(other){if(this.isEmpty()){return other.clone();}
if(other.isEmpty()){return this.clone();}
this.checkNotGeometryCollection(this);this.checkNotGeometryCollection(other);return jsts_old.operation.overlay.snap.SnapIfNeededOverlayOp.overlayOp(this,other,jsts_old.operation.overlay.OverlayOp.SYMDIFFERENCE);};jsts_old.geom.Geometry.prototype.equalsExact=function(other,tolerance){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.geom.Geometry.prototype.equalsNorm=function(g){if(g===null||g===undefined)
return false;return this.norm().equalsExact(g.norm());};jsts_old.geom.Geometry.prototype.apply=function(filter){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.geom.Geometry.prototype.clone=function(){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.geom.Geometry.prototype.normalize=function(){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.geom.Geometry.prototype.norm=function(){var copy=this.clone();copy.normalize();return copy;};jsts_old.geom.Geometry.prototype.compareTo=function(o){var other=o;if(this.getClassSortIndex()!==other.getClassSortIndex()){return this.getClassSortIndex()-other.getClassSortIndex();}
if(this.isEmpty()&&other.isEmpty()){return 0;}
if(this.isEmpty()){return-1;}
if(other.isEmpty()){return 1;}
return this.compareToSameClass(o);};jsts_old.geom.Geometry.prototype.isEquivalentClass=function(other){if(this instanceof jsts_old.geom.Point&&other instanceof jsts_old.geom.Point){return true;}else if(this instanceof jsts_old.geom.LineString&&(other instanceof jsts_old.geom.LineString|other instanceof jsts_old.geom.LinearRing)){return true;}else if(this instanceof jsts_old.geom.LinearRing&&(other instanceof jsts_old.geom.LineString|other instanceof jsts_old.geom.LinearRing)){return true;}else if(this instanceof jsts_old.geom.Polygon&&(other instanceof jsts_old.geom.Polygon)){return true;}else if(this instanceof jsts_old.geom.MultiPoint&&(other instanceof jsts_old.geom.MultiPoint)){return true;}else if(this instanceof jsts_old.geom.MultiLineString&&(other instanceof jsts_old.geom.MultiLineString)){return true;}else if(this instanceof jsts_old.geom.MultiPolygon&&(other instanceof jsts_old.geom.MultiPolygon)){return true;}else if(this instanceof jsts_old.geom.GeometryCollection&&(other instanceof jsts_old.geom.GeometryCollection)){return true;}
return false;};jsts_old.geom.Geometry.prototype.checkNotGeometryCollection=function(g){if(g.isGeometryCollectionBase()){throw new jsts_old.error.IllegalArgumentError('This method does not support GeometryCollection');}};jsts_old.geom.Geometry.prototype.isGeometryCollection=function(){return(this instanceof jsts_old.geom.GeometryCollection);};jsts_old.geom.Geometry.prototype.isGeometryCollectionBase=function(){return(this.CLASS_NAME==='jsts_old.geom.GeometryCollection');};jsts_old.geom.Geometry.prototype.computeEnvelopeInternal=function(){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.geom.Geometry.prototype.compareToSameClass=function(o){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.geom.Geometry.prototype.compare=function(a,b){var i=a.iterator();var j=b.iterator();while(i.hasNext()&&j.hasNext()){var aElement=i.next();var bElement=j.next();var comparison=aElement.compareTo(bElement);if(comparison!==0){return comparison;}}
if(i.hasNext()){return 1;}
if(j.hasNext()){return-1;}
return 0;};jsts_old.geom.Geometry.prototype.equal=function(a,b,tolerance){if(tolerance===undefined||tolerance===null||tolerance===0){return a.equals(b);}
return a.distance(b)<=tolerance;};jsts_old.geom.Geometry.prototype.getClassSortIndex=function(){var sortedClasses=[jsts_old.geom.Point,jsts_old.geom.MultiPoint,jsts_old.geom.LineString,jsts_old.geom.LinearRing,jsts_old.geom.MultiLineString,jsts_old.geom.Polygon,jsts_old.geom.MultiPolygon,jsts_old.geom.GeometryCollection];for(var i=0;i<sortedClasses.length;i++){if(this instanceof sortedClasses[i])
return i;}
jsts_old.util.Assert.shouldNeverReachHere('Class not supported: '+this);return-1;};jsts_old.geom.Geometry.prototype.toString=function(){return new jsts_old.io.WKTWriter().write(this);};jsts_old.geom.Geometry.prototype.createPointFromInternalCoord=function(coord,exemplar){exemplar.getPrecisionModel().makePrecise(coord);return exemplar.getFactory().createPoint(coord);};(function(){jsts_old.geom.Coordinate=function(x,y){if(typeof x==='number'){this.x=x;this.y=y;}else if(x instanceof jsts_old.geom.Coordinate){this.x=parseFloat(x.x);this.y=parseFloat(x.y);}else if(x===undefined||x===null){this.x=0;this.y=0;}else if(typeof x==='string'){this.x=parseFloat(x);this.y=parseFloat(y);}};jsts_old.geom.Coordinate.prototype.setCoordinate=function(other){this.x=other.x;this.y=other.y;};jsts_old.geom.Coordinate.prototype.clone=function(){return new jsts_old.geom.Coordinate(this.x,this.y);};jsts_old.geom.Coordinate.prototype.distance=function(p){var dx=this.x-p.x;var dy=this.y-p.y;return Math.sqrt(dx*dx+dy*dy);};jsts_old.geom.Coordinate.prototype.equals2D=function(other){if(this.x!==other.x){return false;}
if(this.y!==other.y){return false;}
return true;};jsts_old.geom.Coordinate.prototype.equals=function(other){if(!other instanceof jsts_old.geom.Coordinate||other===undefined){return false;}
return this.equals2D(other);};jsts_old.geom.Coordinate.prototype.compareTo=function(other){if(this.x<other.x){return-1;}
if(this.x>other.x){return 1;}
if(this.y<other.y){return-1;}
if(this.y>other.y){return 1;}
return 0;};jsts_old.geom.Coordinate.prototype.toString=function(){return'('+this.x+', '+this.y+')';};})();jsts_old.geom.Envelope=function(){jsts_old.geom.Envelope.prototype.init.apply(this,arguments);};jsts_old.geom.Envelope.prototype.minx=null;jsts_old.geom.Envelope.prototype.maxx=null;jsts_old.geom.Envelope.prototype.miny=null;jsts_old.geom.Envelope.prototype.maxy=null;jsts_old.geom.Envelope.prototype.init=function(){if(typeof arguments[0]==='number'&&arguments.length===4){this.initFromValues(arguments[0],arguments[1],arguments[2],arguments[3]);}else if(arguments[0]instanceof jsts_old.geom.Coordinate&&arguments.length===1){this.initFromCoordinate(arguments[0]);}else if(arguments[0]instanceof jsts_old.geom.Coordinate&&arguments.length===2){this.initFromCoordinates(arguments[0],arguments[1]);}else if(arguments[0]instanceof jsts_old.geom.Envelope&&arguments.length===1){this.initFromEnvelope(arguments[0]);}else{this.setToNull();}};jsts_old.geom.Envelope.prototype.initFromValues=function(x1,x2,y1,y2){if(x1<x2){this.minx=x1;this.maxx=x2;}else{this.minx=x2;this.maxx=x1;}
if(y1<y2){this.miny=y1;this.maxy=y2;}else{this.miny=y2;this.maxy=y1;}};jsts_old.geom.Envelope.prototype.initFromCoordinates=function(p1,p2){this.initFromValues(p1.x,p2.x,p1.y,p2.y);};jsts_old.geom.Envelope.prototype.initFromCoordinate=function(p){this.initFromValues(p.x,p.x,p.y,p.y);};jsts_old.geom.Envelope.prototype.initFromEnvelope=function(env){this.minx=env.minx;this.maxx=env.maxx;this.miny=env.miny;this.maxy=env.maxy;};jsts_old.geom.Envelope.prototype.setToNull=function(){this.minx=0;this.maxx=-1;this.miny=0;this.maxy=-1;};jsts_old.geom.Envelope.prototype.isNull=function(){return this.maxx<this.minx;};jsts_old.geom.Envelope.prototype.getHeight=function(){if(this.isNull()){return 0;}
return this.maxy-this.miny;};jsts_old.geom.Envelope.prototype.getWidth=function(){if(this.isNull()){return 0;}
return this.maxx-this.minx;};jsts_old.geom.Envelope.prototype.getMinX=function(){return this.minx;};jsts_old.geom.Envelope.prototype.getMaxX=function(){return this.maxx;};jsts_old.geom.Envelope.prototype.getMinY=function(){return this.miny;};jsts_old.geom.Envelope.prototype.getMaxY=function(){return this.maxy;};jsts_old.geom.Envelope.prototype.getArea=function(){return getWidth()*getHeight();};jsts_old.geom.Envelope.prototype.expandToInclude=function(){if(arguments[0]instanceof jsts_old.geom.Coordinate){this.expandToIncludeCoordinate(arguments[0]);}else if(arguments[0]instanceof jsts_old.geom.Envelope){this.expandToIncludeEnvelope(arguments[0]);}else{this.expandToIncludeValues(arguments[0],arguments[1]);}};jsts_old.geom.Envelope.prototype.expandToIncludeCoordinate=function(p){this.expandToIncludeValues(p.x,p.y);};jsts_old.geom.Envelope.prototype.expandToIncludeValues=function(x,y){if(this.isNull()){this.minx=x;this.maxx=x;this.miny=y;this.maxy=y;}else{if(x<this.minx){this.minx=x;}
if(x>this.maxx){this.maxx=x;}
if(y<this.miny){this.miny=y;}
if(y>this.maxy){this.maxy=y;}}};jsts_old.geom.Envelope.prototype.expandToIncludeEnvelope=function(other){if(other.isNull()){return;}
if(this.isNull()){this.minx=other.getMinX();this.maxx=other.getMaxX();this.miny=other.getMinY();this.maxy=other.getMaxY();}else{if(other.minx<this.minx){this.minx=other.minx;}
if(other.maxx>this.maxx){this.maxx=other.maxx;}
if(other.miny<this.miny){this.miny=other.miny;}
if(other.maxy>this.maxy){this.maxy=other.maxy;}}};jsts_old.geom.Envelope.prototype.expandBy=function(){if(arguments.length===1){this.expandByDistance(arguments[0]);}else{this.expandByDistances(arguments[0],arguments[1]);}};jsts_old.geom.Envelope.prototype.expandByDistance=function(distance){this.expandByDistances(distance,distance);};jsts_old.geom.Envelope.prototype.expandByDistances=function(deltaX,deltaY){if(this.isNull()){return;}
this.minx-=deltaX;this.maxx+=deltaX;this.miny-=deltaY;this.maxy+=deltaY;if(this.minx>this.maxx||this.miny>this.maxy){this.setToNull();}};jsts_old.geom.Envelope.prototype.translate=function(transX,transY){if(this.isNull()){return;}
this.init(this.minx+transX,this.maxx+transX,this.miny+transY,this.maxy+transY);};jsts_old.geom.Envelope.prototype.centre=function(){if(this.isNull()){return null;}
return new jsts_old.geom.Coordinate((this.minx+this.maxx)/2.0,(this.miny+this.maxy)/2.0);};jsts_old.geom.Envelope.prototype.intersection=function(env){if(this.isNull()||env.isNull()||!this.intersects(env)){return new jsts_old.geom.Envelope();}
var intMinX=this.minx>env.minx?this.minx:env.minx;var intMinY=this.miny>env.miny?this.miny:env.miny;var intMaxX=this.maxx<env.maxx?this.maxx:env.maxx;var intMaxY=this.maxy<env.maxy?this.maxy:env.maxy;return new jsts_old.geom.Envelope(intMinX,intMaxX,intMinY,intMaxY);};jsts_old.geom.Envelope.prototype.intersects=function(){if(arguments[0]instanceof jsts_old.geom.Envelope){return this.intersectsEnvelope(arguments[0]);}else if(arguments[0]instanceof jsts_old.geom.Coordinate){return this.intersectsCoordinate(arguments[0]);}else{return this.intersectsValues(arguments[0],arguments[1]);}};jsts_old.geom.Envelope.prototype.intersectsEnvelope=function(other){if(this.isNull()||other.isNull()){return false;}
var result=!(other.minx>this.maxx||other.maxx<this.minx||other.miny>this.maxy||other.maxy<this.miny);return result;};jsts_old.geom.Envelope.prototype.intersectsCoordinate=function(p){return this.intersectsValues(p.x,p.y);};jsts_old.geom.Envelope.prototype.intersectsValues=function(x,y){if(this.isNull()){return false;}
return!(x>this.maxx||x<this.minx||y>this.maxy||y<this.miny);};jsts_old.geom.Envelope.prototype.contains=function(){if(arguments[0]instanceof jsts_old.geom.Envelope){return this.containsEnvelope(arguments[0]);}else if(arguments[0]instanceof jsts_old.geom.Coordinate){return this.containsCoordinate(arguments[0]);}else{return this.containsValues(arguments[0],arguments[1]);}};jsts_old.geom.Envelope.prototype.containsEnvelope=function(other){return this.coversEnvelope(other);};jsts_old.geom.Envelope.prototype.containsCoordinate=function(p){return this.coversCoordinate(p);};jsts_old.geom.Envelope.prototype.containsValues=function(x,y){return this.coversValues(x,y);};jsts_old.geom.Envelope.prototype.covers=function(){if(p instanceof jsts_old.geom.Envelope){this.coversEnvelope(arguments[0]);}else if(p instanceof jsts_old.geom.Coordinate){this.coversCoordinate(arguments[0]);}else{this.coversValues(arguments[0],arguments[1]);}};jsts_old.geom.Envelope.prototype.coversValues=function(x,y){if(this.isNull()){return false;}
return x>=this.minx&&x<=this.maxx&&y>=this.miny&&y<=this.maxy;};jsts_old.geom.Envelope.prototype.coversCoordinate=function(p){return this.coversValues(p.x,p.y);};jsts_old.geom.Envelope.prototype.coversEnvelope=function(other){if(this.isNull()||other.isNull()){return false;}
return other.minx>=this.minx&&other.maxx<=this.maxx&&other.miny>=this.miny&&other.maxy<=this.maxy;};jsts_old.geom.Envelope.prototype.distance=function(env){if(this.intersects(env)){return 0;}
var dx=0.0;if(this.maxx<env.minx){dx=env.minx-this.maxx;}
if(this.minx>env.maxx){dx=this.minx-env.maxx;}
var dy=0.0;if(this.maxy<env.miny){dy=env.miny-this.maxy;}
if(this.miny>env.maxy){dy=this.miny-env.maxy;}
if(dx===0.0){return dy;}
if(dy===0.0){return dx;}
return Math.sqrt(dx*dx+dy*dy);};jsts_old.geom.Envelope.prototype.equals=function(other){if(this.isNull()){return other.isNull();}
return this.maxx===other.maxx&&this.maxy===other.maxy&&this.minx===other.minx&&this.miny===other.miny;};jsts_old.geom.Envelope.prototype.toString=function(){return'Env['+this.minx+' : '+this.maxx+', '+this.miny+' : '+
this.maxy+']';};jsts_old.geom.Envelope.intersects=function(p1,p2,q){if(arguments.length===4){return jsts_old.geom.Envelope.intersectsEnvelope(arguments[0],arguments[1],arguments[2],arguments[3]);}
var xc1=p1.x<p2.x?p1.x:p2.x;var xc2=p1.x>p2.x?p1.x:p2.x;var yc1=p1.y<p2.y?p1.y:p2.y;var yc2=p1.y>p2.y?p1.y:p2.y;if(((q.x>=xc1)&&(q.x<=xc2))&&((q.y>=yc1)&&(q.y<=yc2))){return true;}
return false;};jsts_old.geom.Envelope.intersectsEnvelope=function(p1,p2,q1,q2){var minq=Math.min(q1.x,q2.x);var maxq=Math.max(q1.x,q2.x);var minp=Math.min(p1.x,p2.x);var maxp=Math.max(p1.x,p2.x);if(minp>maxq){return false;}
if(maxp<minq){return false;}
minq=Math.min(q1.y,q2.y);maxq=Math.max(q1.y,q2.y);minp=Math.min(p1.y,p2.y);maxp=Math.max(p1.y,p2.y);if(minp>maxq){return false;}
if(maxp<minq){return false;}
return true;};jsts_old.geom.Envelope.prototype.clone=function(){return new jsts_old.geom.Envelope(this.minx,this.miny,this.maxx,this.maxy);};(function(){var Interval=function(){this.min=0.0;this.max=0.0;if(arguments.length===1){var interval=arguments[0];this.init(interval.min,interval.max);}else if(arguments.length===2){this.init(arguments[0],arguments[1]);}};Interval.prototype.init=function(min,max){this.min=min;this.max=max;if(min>max){this.min=max;this.max=min;}};Interval.prototype.getMin=function(){return this.min;};Interval.prototype.getMax=function(){return this.max;};Interval.prototype.getWidth=function(){return(this.max-this.min);};Interval.prototype.expandToInclude=function(interval){if(interval.max>this.max){this.max=interval.max;}
if(interval.min<this.min){this.min=interval.min;}};Interval.prototype.overlaps=function(){if(arguments.length===1){return this.overlapsInterval.apply(this,arguments);}else{return this.overlapsMinMax.apply(this,arguments);}};Interval.prototype.overlapsInterval=function(interval){return this.overlaps(interval.min,interval.max);};Interval.prototype.overlapsMinMax=function(min,max){if(this.min>max||this.max<min){return false;}
return true;};Interval.prototype.contains=function(){var interval;if(arguments[0]instanceof jsts_old.index.bintree.Interval){interval=arguments[0];return this.containsMinMax(interval.min,interval.max);}else if(arguments.length===1){return this.containsPoint(arguments[0]);}else{return this.containsMinMax(arguments[0],arguments[1]);}};Interval.prototype.containsMinMax=function(min,max){return(min>=this.min&&max<=this.max);};Interval.prototype.containsPoint=function(p){return(p>=this.min&&p<=this.max);};jsts_old.index.bintree.Interval=Interval;})();jsts_old.index.DoubleBits=function(){};jsts_old.index.DoubleBits.powerOf2=function(exp){return Math.pow(2,exp);};jsts_old.index.DoubleBits.exponent=function(d){return jsts_old.index.DoubleBits.CVTFWD(64,d)-1023;};jsts_old.index.DoubleBits.CVTFWD=function(NumW,Qty){var Sign,Expo,Mant,Bin,nb01='';var Inf={32:{d:0x7F,c:0x80,b:0,a:0},64:{d:0x7FF0,c:0,b:0,a:0}};var ExW={32:8,64:11}[NumW],MtW=NumW-ExW-1;if(!Bin){Sign=Qty<0||1/Qty<0;if(!isFinite(Qty)){Bin=Inf[NumW];if(Sign){Bin.d+=1<<(NumW/4-1);}
Expo=Math.pow(2,ExW)-1;Mant=0;}}
if(!Bin){Expo={32:127,64:1023}[NumW];Mant=Math.abs(Qty);while(Mant>=2){Expo++;Mant/=2;}
while(Mant<1&&Expo>0){Expo--;Mant*=2;}
if(Expo<=0){Mant/=2;nb01='Zero or Denormal';}
if(NumW===32&&Expo>254){nb01='Too big for Single';Bin={d:Sign?0xFF:0x7F,c:0x80,b:0,a:0};Expo=Math.pow(2,ExW)-1;Mant=0;}}
return Expo;};(function(){var DoubleBits=jsts_old.index.DoubleBits;var Interval=jsts_old.index.bintree.Interval;var Key=function(interval){this.pt=0.0;this.level=0;this.computeKey(interval);};Key.computeLevel=function(interval){var dx=interval.getWidth(),level;level=DoubleBits.exponent(dx)+1;return level;};Key.prototype.getPoint=function(){return this.pt;};Key.prototype.getLevel=function(){return this.level;};Key.prototype.getInterval=function(){return this.interval;};Key.prototype.computeKey=function(itemInterval){this.level=Key.computeLevel(itemInterval);this.interval=new Interval();this.computeInterval(this.level,itemInterval);while(!this.interval.contains(itemInterval)){this.level+=1;this.computeInterval(this.level,itemInterval);}};Key.prototype.computeInterval=function(level,itemInterval){var size=DoubleBits.powerOf2(level);this.pt=Math.floor(itemInterval.getMin()/size)*size;this.interval.init(this.pt,this.pt+size);};jsts_old.index.bintree.Key=Key;})();jsts_old.geom.PrecisionModel=function(modelType){if(typeof modelType==='number'){this.modelType=jsts_old.geom.PrecisionModel.FIXED;this.scale=modelType;return;}
this.modelType=modelType||jsts_old.geom.PrecisionModel.FLOATING;if(this.modelType===jsts_old.geom.PrecisionModel.FIXED){this.scale=1.0;}};jsts_old.geom.PrecisionModel.FLOATING='FLOATING';jsts_old.geom.PrecisionModel.FIXED='FIXED';jsts_old.geom.PrecisionModel.FLOATING_SINGLE='FLOATING_SINGLE';jsts_old.geom.PrecisionModel.prototype.scale=null;jsts_old.geom.PrecisionModel.prototype.modelType=null;jsts_old.geom.PrecisionModel.prototype.isFloating=function(){return this.modelType===jsts_old.geom.PrecisionModel.FLOATING||this.modelType===jsts_old.geom.PrecisionModel.FLOATING_SINLGE;};jsts_old.geom.PrecisionModel.prototype.getScale=function(){return this.scale;};jsts_old.geom.PrecisionModel.prototype.getType=function(){return this.modelType;};jsts_old.geom.PrecisionModel.prototype.equals=function(other){return true;if(!(other instanceof jsts_old.geom.PrecisionModel)){return false;}
var otherPrecisionModel=other;return this.modelType===otherPrecisionModel.modelType&&this.scale===otherPrecisionModel.scale;};jsts_old.geom.PrecisionModel.prototype.makePrecise=function(val){if(val instanceof jsts_old.geom.Coordinate){this.makePrecise2(val);return;}
if(isNaN(val))
return val;if(this.modelType===jsts_old.geom.PrecisionModel.FIXED){return Math.round(val*this.scale)/this.scale;}
return val;};jsts_old.geom.PrecisionModel.prototype.makePrecise2=function(coord){if(this.modelType===jsts_old.geom.PrecisionModel.FLOATING)
return;coord.x=this.makePrecise(coord.x);coord.y=this.makePrecise(coord.y);};jsts_old.geom.PrecisionModel.prototype.compareTo=function(o){var other=o;return 0;};jsts_old.geom.CoordinateFilter=function(){};jsts_old.geom.CoordinateFilter.prototype.filter=function(coord){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.operation.buffer.RightmostEdgeFinder=function(){};jsts_old.operation.buffer.RightmostEdgeFinder.prototype.minIndex=-1;jsts_old.operation.buffer.RightmostEdgeFinder.prototype.minCoord=null;jsts_old.operation.buffer.RightmostEdgeFinder.prototype.minDe=null;jsts_old.operation.buffer.RightmostEdgeFinder.prototype.orientedDe=null;jsts_old.operation.buffer.RightmostEdgeFinder.prototype.getEdge=function(){return this.orientedDe;};jsts_old.operation.buffer.RightmostEdgeFinder.prototype.getCoordinate=function(){return this.minCoord;};jsts_old.operation.buffer.RightmostEdgeFinder.prototype.findEdge=function(dirEdgeList){for(var i=dirEdgeList.iterator();i.hasNext();){var de=i.next();if(!de.isForward())
continue;this.checkForRightmostCoordinate(de);}
jsts_old.util.Assert.isTrue(this.minIndex!==0||this.minCoord.equals(this.minDe.getCoordinate()),'inconsistency in rightmost processing');if(this.minIndex===0){this.findRightmostEdgeAtNode();}else{this.findRightmostEdgeAtVertex();}
this.orientedDe=this.minDe;var rightmostSide=this.getRightmostSide(this.minDe,this.minIndex);if(rightmostSide==jsts_old.geomgraph.Position.LEFT){this.orientedDe=this.minDe.getSym();}};jsts_old.operation.buffer.RightmostEdgeFinder.prototype.findRightmostEdgeAtNode=function(){var node=this.minDe.getNode();var star=node.getEdges();this.minDe=star.getRightmostEdge();if(!this.minDe.isForward()){this.minDe=this.minDe.getSym();this.minIndex=this.minDe.getEdge().getCoordinates().length-1;}};jsts_old.operation.buffer.RightmostEdgeFinder.prototype.findRightmostEdgeAtVertex=function(){var pts=this.minDe.getEdge().getCoordinates();jsts_old.util.Assert.isTrue(this.minIndex>0&&this.minIndex<pts.length,'rightmost point expected to be interior vertex of edge');var pPrev=pts[this.minIndex-1];var pNext=pts[this.minIndex+1];var orientation=jsts_old.algorithm.CGAlgorithms.computeOrientation(this.minCoord,pNext,pPrev);var usePrev=false;if(pPrev.y<this.minCoord.y&&pNext.y<this.minCoord.y&&orientation===jsts_old.algorithm.CGAlgorithms.COUNTERCLOCKWISE){usePrev=true;}else if(pPrev.y>this.minCoord.y&&pNext.y>this.minCoord.y&&orientation===jsts_old.algorithm.CGAlgorithms.CLOCKWISE){usePrev=true;}
if(usePrev){this.minIndex=this.minIndex-1;}};jsts_old.operation.buffer.RightmostEdgeFinder.prototype.checkForRightmostCoordinate=function(de){var coord=de.getEdge().getCoordinates();for(var i=0;i<coord.length-1;i++){if(this.minCoord===null||coord[i].x>this.minCoord.x){this.minDe=de;this.minIndex=i;this.minCoord=coord[i];}}};jsts_old.operation.buffer.RightmostEdgeFinder.prototype.getRightmostSide=function(de,index){var side=this.getRightmostSideOfSegment(de,index);if(side<0)
side=this.getRightmostSideOfSegment(de,index-1);if(side<0){this.minCoord=null;this.checkForRightmostCoordinate(de);}
return side;};jsts_old.operation.buffer.RightmostEdgeFinder.prototype.getRightmostSideOfSegment=function(de,i){var e=de.getEdge();var coord=e.getCoordinates();if(i<0||i+1>=coord.length)
return-1;if(coord[i].y==coord[i+1].y)
return-1;var pos=jsts_old.geomgraph.Position.LEFT;if(coord[i].y<coord[i+1].y)
pos=jsts_old.geomgraph.Position.RIGHT;return pos;};jsts_old.geomgraph.EdgeIntersection=function(coord,segmentIndex,dist){this.coord=new jsts_old.geom.Coordinate(coord);this.segmentIndex=segmentIndex;this.dist=dist;};jsts_old.geomgraph.EdgeIntersection.prototype.coord=null;jsts_old.geomgraph.EdgeIntersection.prototype.segmentIndex=null;jsts_old.geomgraph.EdgeIntersection.prototype.dist=null;jsts_old.geomgraph.EdgeIntersection.prototype.getCoordinate=function(){return this.coord;};jsts_old.geomgraph.EdgeIntersection.prototype.getSegmentIndex=function(){return this.segmentIndex;};jsts_old.geomgraph.EdgeIntersection.prototype.getDistance=function(){return this.dist;};jsts_old.geomgraph.EdgeIntersection.prototype.compareTo=function(other){return this.compare(other.segmentIndex,other.dist);};jsts_old.geomgraph.EdgeIntersection.prototype.compare=function(segmentIndex,dist){if(this.segmentIndex<segmentIndex)
return-1;if(this.segmentIndex>segmentIndex)
return 1;if(this.dist<dist)
return-1;if(this.dist>dist)
return 1;return 0;};jsts_old.geomgraph.EdgeIntersection.prototype.isEndPoint=function(maxSegmentIndex){if(this.segmentIndex===0&&this.dist===0.0)
return true;if(this.segmentIndex===maxSegmentIndex)
return true;return false;};jsts_old.geomgraph.EdgeIntersection.prototype.toString=function(){return''+this.segmentIndex+this.dist;};(function(){var EdgeIntersection=jsts_old.geomgraph.EdgeIntersection;var TreeMap=javascript.util.TreeMap;jsts_old.geomgraph.EdgeIntersectionList=function(edge){this.nodeMap=new TreeMap();this.edge=edge;};jsts_old.geomgraph.EdgeIntersectionList.prototype.nodeMap=null;jsts_old.geomgraph.EdgeIntersectionList.prototype.edge=null;jsts_old.geomgraph.EdgeIntersectionList.prototype.isIntersection=function(pt){for(var it=this.iterator();it.hasNext();){var ei=it.next();if(ei.coord.equals(pt)){return true;}}
return false;};jsts_old.geomgraph.EdgeIntersectionList.prototype.add=function(intPt,segmentIndex,dist){var eiNew=new EdgeIntersection(intPt,segmentIndex,dist);var ei=this.nodeMap.get(eiNew);if(ei!==null){return ei;}
this.nodeMap.put(eiNew,eiNew);return eiNew;};jsts_old.geomgraph.EdgeIntersectionList.prototype.iterator=function(){return this.nodeMap.values().iterator();};jsts_old.geomgraph.EdgeIntersectionList.prototype.addEndpoints=function(){var maxSegIndex=this.edge.pts.length-1;this.add(this.edge.pts[0],0,0.0);this.add(this.edge.pts[maxSegIndex],maxSegIndex,0.0);};jsts_old.geomgraph.EdgeIntersectionList.prototype.addSplitEdges=function(edgeList)
{this.addEndpoints();var it=this.iterator();var eiPrev=it.next();while(it.hasNext()){var ei=it.next();var newEdge=this.createSplitEdge(eiPrev,ei);edgeList.add(newEdge);eiPrev=ei;}};jsts_old.geomgraph.EdgeIntersectionList.prototype.createSplitEdge=function(ei0,ei1){var npts=ei1.segmentIndex-ei0.segmentIndex+2;var lastSegStartPt=this.edge.pts[ei1.segmentIndex];var useIntPt1=ei1.dist>0.0||!ei1.coord.equals2D(lastSegStartPt);if(!useIntPt1){npts--;}
var pts=[];var ipt=0;pts[ipt++]=new jsts_old.geom.Coordinate(ei0.coord);for(var i=ei0.segmentIndex+1;i<=ei1.segmentIndex;i++){pts[ipt++]=this.edge.pts[i];}
if(useIntPt1)pts[ipt]=ei1.coord;return new jsts_old.geomgraph.Edge(pts,new jsts_old.geomgraph.Label(this.edge.label));};})();jsts_old.geom.Location=function(){};jsts_old.geom.Location.INTERIOR=0;jsts_old.geom.Location.BOUNDARY=1;jsts_old.geom.Location.EXTERIOR=2;jsts_old.geom.Location.NONE=-1;jsts_old.geom.Location.toLocationSymbol=function(locationValue){switch(locationValue){case jsts_old.geom.Location.EXTERIOR:return'e';case jsts_old.geom.Location.BOUNDARY:return'b';case jsts_old.geom.Location.INTERIOR:return'i';case jsts_old.geom.Location.NONE:return'-';}
throw new jsts_old.IllegalArgumentError('Unknown location value: '+
locationValue);};(function(){var AssertionFailedException=function(message){this.message=message;};AssertionFailedException.prototype=new Error();AssertionFailedException.prototype.name='AssertionFailedException';jsts_old.util.AssertionFailedException=AssertionFailedException;})();(function(){var AssertionFailedException=jsts_old.util.AssertionFailedException;jsts_old.util.Assert=function(){};jsts_old.util.Assert.isTrue=function(assertion,message){if(!assertion){if(message===null){throw new AssertionFailedException();}else{throw new AssertionFailedException(message);}}};jsts_old.util.Assert.equals=function(expectedValue,actualValue,message){if(!actualValue.equals(expectedValue)){throw new AssertionFailedException('Expected '+expectedValue+' but encountered '+actualValue+
(message!=null?': '+message:''));}};jsts_old.util.Assert.shouldNeverReachHere=function(message){throw new AssertionFailedException('Should never reach here'+
(message!=null?': '+message:''));};})();(function(){var Location=jsts_old.geom.Location;var Assert=jsts_old.util.Assert;var ArrayList=javascript.util.ArrayList;jsts_old.operation.relate.RelateComputer=function(arg){this.li=new jsts_old.algorithm.RobustLineIntersector();this.ptLocator=new jsts_old.algorithm.PointLocator();this.nodes=new jsts_old.geomgraph.NodeMap(new jsts_old.operation.relate.RelateNodeFactory());this.isolatedEdges=new ArrayList();this.arg=arg;};jsts_old.operation.relate.RelateComputer.prototype.li=null;jsts_old.operation.relate.RelateComputer.prototype.ptLocator=null;jsts_old.operation.relate.RelateComputer.prototype.arg=null;jsts_old.operation.relate.RelateComputer.prototype.nodes=null;jsts_old.operation.relate.RelateComputer.prototype.im=null;jsts_old.operation.relate.RelateComputer.prototype.isolatedEdges=null;jsts_old.operation.relate.RelateComputer.prototype.invalidPoint=null;jsts_old.operation.relate.RelateComputer.prototype.computeIM=function(){var im=new jsts_old.geom.IntersectionMatrix();im.set(Location.EXTERIOR,Location.EXTERIOR,2);if(!this.arg[0].getGeometry().getEnvelopeInternal().intersects(this.arg[1].getGeometry().getEnvelopeInternal())){this.computeDisjointIM(im);return im;}
this.arg[0].computeSelfNodes(this.li,false);this.arg[1].computeSelfNodes(this.li,false);var intersector=this.arg[0].computeEdgeIntersections(this.arg[1],this.li,false);this.computeIntersectionNodes(0);this.computeIntersectionNodes(1);this.copyNodesAndLabels(0);this.copyNodesAndLabels(1);this.labelIsolatedNodes();this.computeProperIntersectionIM(intersector,im);var eeBuilder=new jsts_old.operation.relate.EdgeEndBuilder();var ee0=eeBuilder.computeEdgeEnds(this.arg[0].getEdgeIterator());this.insertEdgeEnds(ee0);var ee1=eeBuilder.computeEdgeEnds(this.arg[1].getEdgeIterator());this.insertEdgeEnds(ee1);this.labelNodeEdges();this.labelIsolatedEdges(0,1);this.labelIsolatedEdges(1,0);this.updateIM(im);return im;};jsts_old.operation.relate.RelateComputer.prototype.insertEdgeEnds=function(ee){for(var i=ee.iterator();i.hasNext();){var e=i.next();this.nodes.add(e);}};jsts_old.operation.relate.RelateComputer.prototype.computeProperIntersectionIM=function(intersector,im){var dimA=this.arg[0].getGeometry().getDimension();var dimB=this.arg[1].getGeometry().getDimension();var hasProper=intersector.hasProperIntersection();var hasProperInterior=intersector.hasProperInteriorIntersection();if(dimA===2&&dimB===2){if(hasProper)
im.setAtLeast('212101212');}
else if(dimA===2&&dimB===1){if(hasProper)
im.setAtLeast('FFF0FFFF2');if(hasProperInterior)
im.setAtLeast('1FFFFF1FF');}else if(dimA===1&&dimB===2){if(hasProper)
im.setAtLeast('F0FFFFFF2');if(hasProperInterior)
im.setAtLeast('1F1FFFFFF');}
else if(dimA===1&&dimB===1){if(hasProperInterior)
im.setAtLeast('0FFFFFFFF');}};jsts_old.operation.relate.RelateComputer.prototype.copyNodesAndLabels=function(argIndex){for(var i=this.arg[argIndex].getNodeIterator();i.hasNext();){var graphNode=i.next();var newNode=this.nodes.addNode(graphNode.getCoordinate());newNode.setLabel(argIndex,graphNode.getLabel().getLocation(argIndex));}};jsts_old.operation.relate.RelateComputer.prototype.computeIntersectionNodes=function(argIndex){for(var i=this.arg[argIndex].getEdgeIterator();i.hasNext();){var e=i.next();var eLoc=e.getLabel().getLocation(argIndex);for(var eiIt=e.getEdgeIntersectionList().iterator();eiIt.hasNext();){var ei=eiIt.next();var n=this.nodes.addNode(ei.coord);if(eLoc===Location.BOUNDARY)
n.setLabelBoundary(argIndex);else{if(n.getLabel().isNull(argIndex))
n.setLabel(argIndex,Location.INTERIOR);}}}};jsts_old.operation.relate.RelateComputer.prototype.labelIntersectionNodes=function(argIndex){for(var i=this.arg[argIndex].getEdgeIterator();i.hasNext();){var e=i.next();var eLoc=e.getLabel().getLocation(argIndex);for(var eiIt=e.getEdgeIntersectionList().iterator();eiIt.hasNext();){var ei=eiIt.next();var n=this.nodes.find(ei.coord);if(n.getLabel().isNull(argIndex)){if(eLoc===Location.BOUNDARY)
n.setLabelBoundary(argIndex);else
n.setLabel(argIndex,Location.INTERIOR);}}}};jsts_old.operation.relate.RelateComputer.prototype.computeDisjointIM=function(im){var ga=this.arg[0].getGeometry();if(!ga.isEmpty()){im.set(Location.INTERIOR,Location.EXTERIOR,ga.getDimension());im.set(Location.BOUNDARY,Location.EXTERIOR,ga.getBoundaryDimension());}
var gb=this.arg[1].getGeometry();if(!gb.isEmpty()){im.set(Location.EXTERIOR,Location.INTERIOR,gb.getDimension());im.set(Location.EXTERIOR,Location.BOUNDARY,gb.getBoundaryDimension());}};jsts_old.operation.relate.RelateComputer.prototype.labelNodeEdges=function(){for(var ni=this.nodes.iterator();ni.hasNext();){var node=ni.next();node.getEdges().computeLabelling(this.arg);}};jsts_old.operation.relate.RelateComputer.prototype.updateIM=function(im){for(var ei=this.isolatedEdges.iterator();ei.hasNext();){var e=ei.next();e.updateIM(im);}
for(var ni=this.nodes.iterator();ni.hasNext();){var node=ni.next();node.updateIM(im);node.updateIMFromEdges(im);}};jsts_old.operation.relate.RelateComputer.prototype.labelIsolatedEdges=function(thisIndex,targetIndex){for(var ei=this.arg[thisIndex].getEdgeIterator();ei.hasNext();){var e=ei.next();if(e.isIsolated()){this.labelIsolatedEdge(e,targetIndex,this.arg[targetIndex].getGeometry());this.isolatedEdges.add(e);}}};jsts_old.operation.relate.RelateComputer.prototype.labelIsolatedEdge=function(e,targetIndex,target){if(target.getDimension()>0){var loc=this.ptLocator.locate(e.getCoordinate(),target);e.getLabel().setAllLocations(targetIndex,loc);}else{e.getLabel().setAllLocations(targetIndex,Location.EXTERIOR);}};jsts_old.operation.relate.RelateComputer.prototype.labelIsolatedNodes=function(){for(var ni=this.nodes.iterator();ni.hasNext();){var n=ni.next();var label=n.getLabel();Assert.isTrue(label.getGeometryCount()>0,'node with empty label found');if(n.isIsolated()){if(label.isNull(0))
this.labelIsolatedNode(n,0);else
this.labelIsolatedNode(n,1);}}};jsts_old.operation.relate.RelateComputer.prototype.labelIsolatedNode=function(n,targetIndex){var loc=this.ptLocator.locate(n.getCoordinate(),this.arg[targetIndex].getGeometry());n.getLabel().setAllLocations(targetIndex,loc);};})();(function(){var Assert=jsts_old.util.Assert;jsts_old.geomgraph.GraphComponent=function(label){this.label=label;};jsts_old.geomgraph.GraphComponent.prototype.label=null;jsts_old.geomgraph.GraphComponent.prototype._isInResult=false;jsts_old.geomgraph.GraphComponent.prototype._isCovered=false;jsts_old.geomgraph.GraphComponent.prototype._isCoveredSet=false;jsts_old.geomgraph.GraphComponent.prototype._isVisited=false;jsts_old.geomgraph.GraphComponent.prototype.getLabel=function(){return this.label;};jsts_old.geomgraph.GraphComponent.prototype.setLabel=function(label){if(arguments.length===2){this.setLabel2.apply(this,arguments);return;}
this.label=label;};jsts_old.geomgraph.GraphComponent.prototype.setInResult=function(isInResult){this._isInResult=isInResult;};jsts_old.geomgraph.GraphComponent.prototype.isInResult=function(){return this._isInResult;};jsts_old.geomgraph.GraphComponent.prototype.setCovered=function(isCovered){this._isCovered=isCovered;this._isCoveredSet=true;};jsts_old.geomgraph.GraphComponent.prototype.isCovered=function(){return this._isCovered;};jsts_old.geomgraph.GraphComponent.prototype.isCoveredSet=function(){return this._isCoveredSet;};jsts_old.geomgraph.GraphComponent.prototype.isVisited=function(){return this._isVisited;};jsts_old.geomgraph.GraphComponent.prototype.setVisited=function(isVisited){this._isVisited=isVisited;};jsts_old.geomgraph.GraphComponent.prototype.getCoordinate=function(){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.geomgraph.GraphComponent.prototype.computeIM=function(im){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.geomgraph.GraphComponent.prototype.isIsolated=function(){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.geomgraph.GraphComponent.prototype.updateIM=function(im){Assert.isTrue(this.label.getGeometryCount()>=2,'found partial label');this.computeIM(im);};})();jsts_old.geomgraph.Node=function(coord,edges){this.coord=coord;this.edges=edges;this.label=new jsts_old.geomgraph.Label(0,jsts_old.geom.Location.NONE);};jsts_old.geomgraph.Node.prototype=new jsts_old.geomgraph.GraphComponent();jsts_old.geomgraph.Node.prototype.coord=null;jsts_old.geomgraph.Node.prototype.edges=null;jsts_old.geomgraph.Node.prototype.isIsolated=function(){return(this.label.getGeometryCount()==1);};jsts_old.geomgraph.Node.prototype.setLabel2=function(argIndex,onLocation){if(this.label===null){this.label=new jsts_old.geomgraph.Label(argIndex,onLocation);}else
this.label.setLocation(argIndex,onLocation);};jsts_old.geomgraph.Node.prototype.setLabelBoundary=function(argIndex){var loc=jsts_old.geom.Location.NONE;if(this.label!==null)
loc=this.label.getLocation(argIndex);var newLoc;switch(loc){case jsts_old.geom.Location.BOUNDARY:newLoc=jsts_old.geom.Location.INTERIOR;break;case jsts_old.geom.Location.INTERIOR:newLoc=jsts_old.geom.Location.BOUNDARY;break;default:newLoc=jsts_old.geom.Location.BOUNDARY;break;}
this.label.setLocation(argIndex,newLoc);};jsts_old.geomgraph.Node.prototype.add=function(e){this.edges.insert(e);e.setNode(this);};jsts_old.geomgraph.Node.prototype.getCoordinate=function(){return this.coord;};jsts_old.geomgraph.Node.prototype.getEdges=function(){return this.edges;};jsts_old.geomgraph.Node.prototype.isIncidentEdgeInResult=function(){for(var it=this.getEdges().getEdges().iterator();it.hasNext();){var de=it.next();if(de.getEdge().isInResult())
return true;}
return false;};jsts_old.index.strtree.Interval=function(){var other;if(arguments.length===1){other=arguments[0];return jsts_old.index.strtree.Interval(other.min,other.max);}else if(arguments.length===2){jsts_old.util.Assert.isTrue(this.min<=this.max);this.min=arguments[0];this.max=arguments[1];}};jsts_old.index.strtree.Interval.prototype.min=null;jsts_old.index.strtree.Interval.prototype.max=null;jsts_old.index.strtree.Interval.prototype.getCentre=function(){return(this.min+this.max)/2;};jsts_old.index.strtree.Interval.prototype.expandToInclude=function(other){this.max=Math.max(this.max,other.max);this.min=Math.min(this.min,other.min);return this;};jsts_old.index.strtree.Interval.prototype.intersects=function(other){return!(other.min>this.max||other.max<this.min);};jsts_old.index.strtree.Interval.prototype.equals=function(o){if(!(o instanceof jsts_old.index.strtree.Interval)){return false;}
other=o;return this.min===other.min&&this.max===other.max;};jsts_old.geom.GeometryFactory=function(precisionModel){this.precisionModel=precisionModel||new jsts_old.geom.PrecisionModel();};jsts_old.geom.GeometryFactory.prototype.precisionModel=null;jsts_old.geom.GeometryFactory.prototype.getPrecisionModel=function(){return this.precisionModel;};jsts_old.geom.GeometryFactory.prototype.createPoint=function(coordinate){var point=new jsts_old.geom.Point(coordinate,this);return point;};jsts_old.geom.GeometryFactory.prototype.createLineString=function(coordinates){var lineString=new jsts_old.geom.LineString(coordinates,this);return lineString;};jsts_old.geom.GeometryFactory.prototype.createLinearRing=function(coordinates){var linearRing=new jsts_old.geom.LinearRing(coordinates,this);return linearRing;};jsts_old.geom.GeometryFactory.prototype.createPolygon=function(shell,holes){var polygon=new jsts_old.geom.Polygon(shell,holes,this);return polygon;};jsts_old.geom.GeometryFactory.prototype.createMultiPoint=function(points){if(points&&points[0]instanceof jsts_old.geom.Coordinate){var converted=[];var i;for(i=0;i<points.length;i++){converted.push(this.createPoint(points[i]));}
points=converted;}
return new jsts_old.geom.MultiPoint(points,this);};jsts_old.geom.GeometryFactory.prototype.createMultiLineString=function(lineStrings){return new jsts_old.geom.MultiLineString(lineStrings,this);};jsts_old.geom.GeometryFactory.prototype.createMultiPolygon=function(polygons){return new jsts_old.geom.MultiPolygon(polygons,this);};jsts_old.geom.GeometryFactory.prototype.buildGeometry=function(geomList){var geomClass=null;var isHeterogeneous=false;var hasGeometryCollection=false;for(var i=geomList.iterator();i.hasNext();){var geom=i.next();var partClass=geom.CLASS_NAME;if(geomClass===null){geomClass=partClass;}
if(!(partClass===geomClass)){isHeterogeneous=true;}
if(geom.isGeometryCollectionBase())
hasGeometryCollection=true;}
if(geomClass===null){return this.createGeometryCollection(null);}
if(isHeterogeneous||hasGeometryCollection){return this.createGeometryCollection(geomList.toArray());}
var geom0=geomList.get(0);var isCollection=geomList.size()>1;if(isCollection){if(geom0 instanceof jsts_old.geom.Polygon){return this.createMultiPolygon(geomList.toArray());}else if(geom0 instanceof jsts_old.geom.LineString){return this.createMultiLineString(geomList.toArray());}else if(geom0 instanceof jsts_old.geom.Point){return this.createMultiPoint(geomList.toArray());}
jsts_old.util.Assert.shouldNeverReachHere('Unhandled class: '+geom0);}
return geom0;};jsts_old.geom.GeometryFactory.prototype.createGeometryCollection=function(geometries){return new jsts_old.geom.GeometryCollection(geometries,this);};jsts_old.geom.GeometryFactory.prototype.toGeometry=function(envelope){if(envelope.isNull()){return this.createPoint(null);}
if(envelope.getMinX()===envelope.getMaxX()&&envelope.getMinY()===envelope.getMaxY()){return this.createPoint(new jsts_old.geom.Coordinate(envelope.getMinX(),envelope.getMinY()));}
if(envelope.getMinX()===envelope.getMaxX()||envelope.getMinY()===envelope.getMaxY()){return this.createLineString([new jsts_old.geom.Coordinate(envelope.getMinX(),envelope.getMinY()),new jsts_old.geom.Coordinate(envelope.getMaxX(),envelope.getMaxY())]);}
return this.createPolygon(this.createLinearRing([new jsts_old.geom.Coordinate(envelope.getMinX(),envelope.getMinY()),new jsts_old.geom.Coordinate(envelope.getMinX(),envelope.getMaxY()),new jsts_old.geom.Coordinate(envelope.getMaxX(),envelope.getMaxY()),new jsts_old.geom.Coordinate(envelope.getMaxX(),envelope.getMinY()),new jsts_old.geom.Coordinate(envelope.getMinX(),envelope.getMinY())]),null);};jsts_old.index.quadtree.NodeBase=function(){this.subnode=new Array(4);this.subnode[0]=null;this.subnode[1]=null;this.subnode[2]=null;this.subnode[3]=null;this.items=[];};jsts_old.index.quadtree.NodeBase.prototype.getSubnodeIndex=function(env,centre){var subnodeIndex=-1;if(env.getMinX()>=centre.x){if(env.getMinY()>=centre.y){subnodeIndex=3;}
if(env.getMaxY()<=centre.y){subnodeIndex=1;}}
if(env.getMaxX()<=centre.x){if(env.getMinY()>=centre.y){subnodeIndex=2;}
if(env.getMaxY()<=centre.y){subnodeIndex=0;}}
return subnodeIndex;};jsts_old.index.quadtree.NodeBase.prototype.getItems=function(){return this.items;};jsts_old.index.quadtree.NodeBase.prototype.hasItems=function(){return(this.items.length>0);};jsts_old.index.quadtree.NodeBase.prototype.add=function(item){this.items.push(item);};jsts_old.index.quadtree.NodeBase.prototype.remove=function(itemEnv,item){if(!this.isSearchMatch(itemEnv)){return false;}
var found=false,i=0;for(i;i<4;i++){if(this.subnode[i]!==null){found=this.subnode[i].remove(itemEnv,item);if(found){if(this.subnode[i].isPrunable()){this.subnode[i]=null;}
break;}}}
if(found){return found;}
if(this.items.indexOf(item)!==-1){for(var i=this.items.length-1;i>=0;i--){if(this.items[i]===item){this.items.splice(i,1);}}
found=true;}
return found;};jsts_old.index.quadtree.NodeBase.prototype.isPrunable=function(){return!(this.hasChildren()||this.hasItems());};jsts_old.index.quadtree.NodeBase.prototype.hasChildren=function(){var i=0;for(i;i<4;i++){if(this.subnode[i]!==null){return true;}}
return false;};jsts_old.index.quadtree.NodeBase.prototype.isEmpty=function(){var isEmpty=true;if(this.items.length>0){isEmpty=false;}
var i=0;for(i;i<4;i++){if(this.subnode[i]!==null){if(!this.subnode[i].isEmpty()){isEmpty=false;}}}
return isEmpty;};jsts_old.index.quadtree.NodeBase.prototype.addAllItems=function(resultItems){resultItems=resultItems.concat(this.items);var i=0;for(i;i<4;i++){if(this.subnode[i]!==null){resultItems=this.subnode[i].addAllItems(resultItems);}}
return resultItems;};jsts_old.index.quadtree.NodeBase.prototype.addAllItemsFromOverlapping=function(searchEnv,resultItems){if(!this.isSearchMatch(searchEnv)){return;}
resultItems=resultItems.concat(this.items);var i=0;for(i;i<4;i++){if(this.subnode[i]!==null){resultItems=this.subnode[i].addAllItemsFromOverlapping(searchEnv,resultItems);}}};jsts_old.index.quadtree.NodeBase.prototype.visit=function(searchEnv,visitor){if(!this.isSearchMatch(searchEnv)){return;}
this.visitItems(searchEnv,visitor);var i=0;for(i;i<4;i++){if(this.subnode[i]!==null){this.subnode[i].visit(searchEnv,visitor);}}};jsts_old.index.quadtree.NodeBase.prototype.visitItems=function(env,visitor){var i=0,il=this.items.length;for(i;i<il;i++){visitor.visitItem(this.items[i]);}};jsts_old.index.quadtree.NodeBase.prototype.depth=function(){var maxSubDepth=0,i=0,sqd;for(i;i<4;i++){if(this.subnode[i]!==null){sqd=this.subnode[i].depth();if(sqd>maxSubDepth){maxSubDepth=sqd;}}}
return maxSubDepth+1;};jsts_old.index.quadtree.NodeBase.prototype.size=function(){var subSize=0,i=0;for(i;i<4;i++){if(this.subnode[i]!==null){subSize+=this.subnode[i].size();}}
return subSize+this.items.length;};jsts_old.index.quadtree.NodeBase.prototype.getNodeCount=function(){var subSize=0,i=0;for(i;i<4;i++){if(this.subnode[i]!==null){subSize+=this.subnode[i].size();}}
return subSize+1;};jsts_old.index.quadtree.Node=function(env,level){jsts_old.index.quadtree.NodeBase.prototype.constructor.apply(this,arguments);this.env=env;this.level=level;this.centre=new jsts_old.geom.Coordinate();this.centre.x=(env.getMinX()+env.getMaxX())/2;this.centre.y=(env.getMinY()+env.getMaxY())/2;};jsts_old.index.quadtree.Node.prototype=new jsts_old.index.quadtree.NodeBase();jsts_old.index.quadtree.Node.createNode=function(env){var key,node;key=new jsts_old.index.quadtree.Key(env);node=new jsts_old.index.quadtree.Node(key.getEnvelope(),key.getLevel());return node;};jsts_old.index.quadtree.Node.createExpanded=function(node,addEnv){var expandEnv=new jsts_old.geom.Envelope(addEnv),largerNode;if(node!==null){expandEnv.expandToInclude(node.env);}
largerNode=jsts_old.index.quadtree.Node.createNode(expandEnv);if(node!==null){largerNode.insertNode(node);}
return largerNode;};jsts_old.index.quadtree.Node.prototype.getEnvelope=function(){return this.env;};jsts_old.index.quadtree.Node.prototype.isSearchMatch=function(searchEnv){return this.env.intersects(searchEnv);};jsts_old.index.quadtree.Node.prototype.getNode=function(searchEnv){var subnodeIndex=this.getSubnodeIndex(searchEnv,this.centre),node;if(subnodeIndex!==-1){node=this.getSubnode(subnodeIndex);return node.getNode(searchEnv);}else{return this;}};jsts_old.index.quadtree.Node.prototype.find=function(searchEnv){var subnodeIndex=this.getSubnodeIndex(searchEnv,this.centre),node;if(subnodeIndex===-1){return this;}
if(this.subnode[subnodeIndex]!==null){node=this.subnode[subnodeIndex];return node.find(searchEnv);}
return this;};jsts_old.index.quadtree.Node.prototype.insertNode=function(node){var index=this.getSubnodeIndex(node.env,this.centre),childNode;if(node.level===this.level-1){this.subnode[index]=node;}else{childNode=this.createSubnode(index);childNode.insertNode(node);this.subnode[index]=childNode;}};jsts_old.index.quadtree.Node.prototype.getSubnode=function(index){if(this.subnode[index]===null){this.subnode[index]=this.createSubnode(index);}
return this.subnode[index];};jsts_old.index.quadtree.Node.prototype.createSubnode=function(index){var minx=0.0,maxx=0.0,miny=0.0,maxy=0.0,sqEnv,node;switch(index){case 0:minx=this.env.getMinX();maxx=this.centre.x;miny=this.env.getMinY();maxy=this.centre.y;break;case 1:minx=this.centre.x;maxx=this.env.getMaxX();miny=this.env.getMinY();maxy=this.centre.y;break;case 2:minx=this.env.getMinX();maxx=this.centre.x;miny=this.centre.y;maxy=this.env.getMaxY();break;case 3:minx=this.centre.x;maxx=this.env.getMaxX();miny=this.centre.y;maxy=this.env.getMaxY();break;}
sqEnv=new jsts_old.geom.Envelope(minx,maxx,miny,maxy);node=new jsts_old.index.quadtree.Node(sqEnv,this.level-1);return node;};(function(){jsts_old.geomgraph.Position=function(){};jsts_old.geomgraph.Position.ON=0;jsts_old.geomgraph.Position.LEFT=1;jsts_old.geomgraph.Position.RIGHT=2;jsts_old.geomgraph.Position.opposite=function(position){if(position===jsts_old.geomgraph.Position.LEFT){return jsts_old.geomgraph.Position.RIGHT;}
if(position===jsts_old.geomgraph.Position.RIGHT){return jsts_old.geomgraph.Position.LEFT;}
return position;};})();jsts_old.geomgraph.TopologyLocation=function(){this.location=[];if(arguments.length===3){var on=arguments[0];var left=arguments[1];var right=arguments[2];this.init(3);this.location[jsts_old.geomgraph.Position.ON]=on;this.location[jsts_old.geomgraph.Position.LEFT]=left;this.location[jsts_old.geomgraph.Position.RIGHT]=right;}else if(arguments[0]instanceof jsts_old.geomgraph.TopologyLocation){var gl=arguments[0];this.init(gl.location.length);if(gl!=null){for(var i=0;i<this.location.length;i++){this.location[i]=gl.location[i];}}}else if(typeof arguments[0]==='number'){var on=arguments[0];this.init(1);this.location[jsts_old.geomgraph.Position.ON]=on;}else if(arguments[0]instanceof Array){var location=arguments[0];this.init(location.length);}};jsts_old.geomgraph.TopologyLocation.prototype.location=null;jsts_old.geomgraph.TopologyLocation.prototype.init=function(size){this.location[size-1]=null;this.setAllLocations(jsts_old.geom.Location.NONE);};jsts_old.geomgraph.TopologyLocation.prototype.get=function(posIndex){if(posIndex<this.location.length)
return this.location[posIndex];return jsts_old.geom.Location.NONE;};jsts_old.geomgraph.TopologyLocation.prototype.isNull=function(){for(var i=0;i<this.location.length;i++){if(this.location[i]!==jsts_old.geom.Location.NONE)
return false;}
return true;};jsts_old.geomgraph.TopologyLocation.prototype.isAnyNull=function(){for(var i=0;i<this.location.length;i++){if(this.location[i]===jsts_old.geom.Location.NONE)
return true;}
return false;};jsts_old.geomgraph.TopologyLocation.prototype.isEqualOnSide=function(le,locIndex){return this.location[locIndex]==le.location[locIndex];};jsts_old.geomgraph.TopologyLocation.prototype.isArea=function(){return this.location.length>1;};jsts_old.geomgraph.TopologyLocation.prototype.isLine=function(){return this.location.length===1;};jsts_old.geomgraph.TopologyLocation.prototype.flip=function(){if(this.location.length<=1)
return;var temp=this.location[jsts_old.geomgraph.Position.LEFT];this.location[jsts_old.geomgraph.Position.LEFT]=this.location[jsts_old.geomgraph.Position.RIGHT];this.location[jsts_old.geomgraph.Position.RIGHT]=temp;};jsts_old.geomgraph.TopologyLocation.prototype.setAllLocations=function(locValue){for(var i=0;i<this.location.length;i++){this.location[i]=locValue;}};jsts_old.geomgraph.TopologyLocation.prototype.setAllLocationsIfNull=function(locValue){for(var i=0;i<this.location.length;i++){if(this.location[i]===jsts_old.geom.Location.NONE)
this.location[i]=locValue;}};jsts_old.geomgraph.TopologyLocation.prototype.setLocation=function(locIndex,locValue){if(locValue!==undefined){this.location[locIndex]=locValue;}else{this.setLocation(jsts_old.geomgraph.Position.ON,locIndex);}};jsts_old.geomgraph.TopologyLocation.prototype.getLocations=function(){return location;};jsts_old.geomgraph.TopologyLocation.prototype.setLocations=function(on,left,right){this.location[jsts_old.geomgraph.Position.ON]=on;this.location[jsts_old.geomgraph.Position.LEFT]=left;this.location[jsts_old.geomgraph.Position.RIGHT]=right;};jsts_old.geomgraph.TopologyLocation.prototype.allPositionsEqual=function(loc){for(var i=0;i<this.location.length;i++){if(this.location[i]!==loc)
return false;}
return true;};jsts_old.geomgraph.TopologyLocation.prototype.merge=function(gl){if(gl.location.length>this.location.length){var newLoc=[];newLoc[jsts_old.geomgraph.Position.ON]=this.location[jsts_old.geomgraph.Position.ON];newLoc[jsts_old.geomgraph.Position.LEFT]=jsts_old.geom.Location.NONE;newLoc[jsts_old.geomgraph.Position.RIGHT]=jsts_old.geom.Location.NONE;this.location=newLoc;}
for(var i=0;i<this.location.length;i++){if(this.location[i]===jsts_old.geom.Location.NONE&&i<gl.location.length)
this.location[i]=gl.location[i];}};jsts_old.geomgraph.Label=function(){this.elt=[];var geomIndex,onLoc,leftLoc,lbl,rightLoc;if(arguments.length===4){geomIndex=arguments[0];onLoc=arguments[1];leftLoc=arguments[2];rightLoc=arguments[3];this.elt[0]=new jsts_old.geomgraph.TopologyLocation(jsts_old.geom.Location.NONE,jsts_old.geom.Location.NONE,jsts_old.geom.Location.NONE);this.elt[1]=new jsts_old.geomgraph.TopologyLocation(jsts_old.geom.Location.NONE,jsts_old.geom.Location.NONE,jsts_old.geom.Location.NONE);this.elt[geomIndex].setLocations(onLoc,leftLoc,rightLoc);}else if(arguments.length===3){onLoc=arguments[0];leftLoc=arguments[1];rightLoc=arguments[2];this.elt[0]=new jsts_old.geomgraph.TopologyLocation(onLoc,leftLoc,rightLoc);this.elt[1]=new jsts_old.geomgraph.TopologyLocation(onLoc,leftLoc,rightLoc);}else if(arguments.length===2){geomIndex=arguments[0];onLoc=arguments[1];this.elt[0]=new jsts_old.geomgraph.TopologyLocation(jsts_old.geom.Location.NONE);this.elt[1]=new jsts_old.geomgraph.TopologyLocation(jsts_old.geom.Location.NONE);this.elt[geomIndex].setLocation(onLoc);}else if(arguments[0]instanceof jsts_old.geomgraph.Label){lbl=arguments[0];this.elt[0]=new jsts_old.geomgraph.TopologyLocation(lbl.elt[0]);this.elt[1]=new jsts_old.geomgraph.TopologyLocation(lbl.elt[1]);}else if(typeof arguments[0]==='number'){onLoc=arguments[0];this.elt[0]=new jsts_old.geomgraph.TopologyLocation(onLoc);this.elt[1]=new jsts_old.geomgraph.TopologyLocation(onLoc);}};jsts_old.geomgraph.Label.toLineLabel=function(label){var i,lineLabel=new jsts_old.geomgraph.Label(jsts_old.geom.Location.NONE);for(i=0;i<2;i++){lineLabel.setLocation(i,label.getLocation(i));}
return lineLabel;};jsts_old.geomgraph.Label.prototype.elt=null;jsts_old.geomgraph.Label.prototype.flip=function(){this.elt[0].flip();this.elt[1].flip();};jsts_old.geomgraph.Label.prototype.getLocation=function(geomIndex,posIndex){if(arguments.length==1){return this.getLocation2.apply(this,arguments);}
return this.elt[geomIndex].get(posIndex);};jsts_old.geomgraph.Label.prototype.getLocation2=function(geomIndex){return this.elt[geomIndex].get(jsts_old.geomgraph.Position.ON);};jsts_old.geomgraph.Label.prototype.setLocation=function(geomIndex,posIndex,location){if(arguments.length==2){this.setLocation2.apply(this,arguments);return;}
this.elt[geomIndex].setLocation(posIndex,location);};jsts_old.geomgraph.Label.prototype.setLocation2=function(geomIndex,location){this.elt[geomIndex].setLocation(jsts_old.geomgraph.Position.ON,location);};jsts_old.geomgraph.Label.prototype.setAllLocations=function(geomIndex,location){this.elt[geomIndex].setAllLocations(location);};jsts_old.geomgraph.Label.prototype.setAllLocationsIfNull=function(geomIndex,location){if(arguments.length==1){this.setAllLocationsIfNull2.apply(this,arguments);return;}
this.elt[geomIndex].setAllLocationsIfNull(location);};jsts_old.geomgraph.Label.prototype.setAllLocationsIfNull2=function(location){this.setAllLocationsIfNull(0,location);this.setAllLocationsIfNull(1,location);};jsts_old.geomgraph.Label.prototype.merge=function(lbl){var i;for(i=0;i<2;i++){if(this.elt[i]===null&&lbl.elt[i]!==null){this.elt[i]=new jsts_old.geomgraph.TopologyLocation(lbl.elt[i]);}else{this.elt[i].merge(lbl.elt[i]);}}};jsts_old.geomgraph.Label.prototype.getGeometryCount=function(){var count=0;if(!this.elt[0].isNull()){count++;}
if(!this.elt[1].isNull()){count++;}
return count;};jsts_old.geomgraph.Label.prototype.isNull=function(geomIndex){return this.elt[geomIndex].isNull();};jsts_old.geomgraph.Label.prototype.isAnyNull=function(geomIndex){return this.elt[geomIndex].isAnyNull();};jsts_old.geomgraph.Label.prototype.isArea=function(){if(arguments.length==1){return this.isArea2(arguments[0]);}
return this.elt[0].isArea()||this.elt[1].isArea();};jsts_old.geomgraph.Label.prototype.isArea2=function(geomIndex){return this.elt[geomIndex].isArea();};jsts_old.geomgraph.Label.prototype.isLine=function(geomIndex){return this.elt[geomIndex].isLine();};jsts_old.geomgraph.Label.prototype.isEqualOnSide=function(lbl,side){return this.elt[0].isEqualOnSide(lbl.elt[0],side)&&this.elt[1].isEqualOnSide(lbl.elt[1],side);};jsts_old.geomgraph.Label.prototype.allPositionsEqual=function(geomIndex,loc){return this.elt[geomIndex].allPositionsEqual(loc);};jsts_old.geomgraph.Label.prototype.toLine=function(geomIndex){if(this.elt[geomIndex].isArea()){this.elt[geomIndex]=new jsts_old.geomgraph.TopologyLocation(this.elt[geomIndex].location[0]);}};jsts_old.geomgraph.EdgeRing=function(start,geometryFactory){this.edges=[];this.pts=[];this.holes=[];this.label=new jsts_old.geomgraph.Label(jsts_old.geom.Location.NONE);this.geometryFactory=geometryFactory;if(start){this.computePoints(start);this.computeRing();}};jsts_old.geomgraph.EdgeRing.prototype.startDe=null;jsts_old.geomgraph.EdgeRing.prototype.maxNodeDegree=-1;jsts_old.geomgraph.EdgeRing.prototype.edges=null;jsts_old.geomgraph.EdgeRing.prototype.pts=null;jsts_old.geomgraph.EdgeRing.prototype.label=null;jsts_old.geomgraph.EdgeRing.prototype.ring=null;jsts_old.geomgraph.EdgeRing.prototype._isHole=null;jsts_old.geomgraph.EdgeRing.prototype.shell=null;jsts_old.geomgraph.EdgeRing.prototype.holes=null;jsts_old.geomgraph.EdgeRing.prototype.geometryFactory=null;jsts_old.geomgraph.EdgeRing.prototype.isIsolated=function(){return(this.label.getGeometryCount()==1);};jsts_old.geomgraph.EdgeRing.prototype.isHole=function(){return this._isHole;};jsts_old.geomgraph.EdgeRing.prototype.getCoordinate=function(i){return this.pts[i];};jsts_old.geomgraph.EdgeRing.prototype.getLinearRing=function(){return this.ring;};jsts_old.geomgraph.EdgeRing.prototype.getLabel=function(){return this.label;};jsts_old.geomgraph.EdgeRing.prototype.isShell=function(){return this.shell===null;};jsts_old.geomgraph.EdgeRing.prototype.getShell=function(){return this.shell;};jsts_old.geomgraph.EdgeRing.prototype.setShell=function(shell){this.shell=shell;if(shell!==null)
shell.addHole(this);};jsts_old.geomgraph.EdgeRing.prototype.addHole=function(ring){this.holes.push(ring);};jsts_old.geomgraph.EdgeRing.prototype.toPolygon=function(geometryFactory){var holeLR=[];for(var i=0;i<this.holes.length;i++){holeLR[i]=this.holes[i].getLinearRing();}
var poly=this.geometryFactory.createPolygon(this.getLinearRing(),holeLR);return poly;};jsts_old.geomgraph.EdgeRing.prototype.computeRing=function(){if(this.ring!==null)
return;var coord=[];for(var i=0;i<this.pts.length;i++){coord[i]=this.pts[i];}
this.ring=this.geometryFactory.createLinearRing(coord);this._isHole=jsts_old.algorithm.CGAlgorithms.isCCW(this.ring.getCoordinates());};jsts_old.geomgraph.EdgeRing.prototype.getNext=function(de){throw new jsts_old.error.AbstractInvocationError();};jsts_old.geomgraph.EdgeRing.prototype.setEdgeRing=function(de,er){throw new jsts_old.error.AbstractInvocationError();};jsts_old.geomgraph.EdgeRing.prototype.getEdges=function(){return this.edges;};jsts_old.geomgraph.EdgeRing.prototype.computePoints=function(start){this.startDe=start;var de=start;var isFirstEdge=true;do{if(de===null)
throw new jsts_old.error.TopologyError('Found null DirectedEdge');if(de.getEdgeRing()===this)
throw new jsts_old.error.TopologyError('Directed Edge visited twice during ring-building at '+
de.getCoordinate());this.edges.push(de);var label=de.getLabel();jsts_old.util.Assert.isTrue(label.isArea());this.mergeLabel(label);this.addPoints(de.getEdge(),de.isForward(),isFirstEdge);isFirstEdge=false;this.setEdgeRing(de,this);de=this.getNext(de);}while(de!==this.startDe);};jsts_old.geomgraph.EdgeRing.prototype.getMaxNodeDegree=function(){if(this.maxNodeDegree<0)
this.computeMaxNodeDegree();return this.maxNodeDegree;};jsts_old.geomgraph.EdgeRing.prototype.computeMaxNodeDegree=function(){this.maxNodeDegree=0;var de=this.startDe;do{var node=de.getNode();var degree=node.getEdges().getOutgoingDegree(this);if(degree>this.maxNodeDegree)
this.maxNodeDegree=degree;de=this.getNext(de);}while(de!==this.startDe);this.maxNodeDegree*=2;};jsts_old.geomgraph.EdgeRing.prototype.setInResult=function(){var de=this.startDe;do{de.getEdge().setInResult(true);de=de.getNext();}while(de!=this.startDe);};jsts_old.geomgraph.EdgeRing.prototype.mergeLabel=function(deLabel){this.mergeLabel2(deLabel,0);this.mergeLabel2(deLabel,1);};jsts_old.geomgraph.EdgeRing.prototype.mergeLabel2=function(deLabel,geomIndex){var loc=deLabel.getLocation(geomIndex,jsts_old.geomgraph.Position.RIGHT);if(loc==jsts_old.geom.Location.NONE)
return;if(this.label.getLocation(geomIndex)===jsts_old.geom.Location.NONE){this.label.setLocation(geomIndex,loc);return;}};jsts_old.geomgraph.EdgeRing.prototype.addPoints=function(edge,isForward,isFirstEdge){var edgePts=edge.getCoordinates();if(isForward){var startIndex=1;if(isFirstEdge)
startIndex=0;for(var i=startIndex;i<edgePts.length;i++){this.pts.push(edgePts[i]);}}else{var startIndex=edgePts.length-2;if(isFirstEdge)
startIndex=edgePts.length-1;for(var i=startIndex;i>=0;i--){this.pts.push(edgePts[i]);}}};jsts_old.geomgraph.EdgeRing.prototype.containsPoint=function(p){var shell=this.getLinearRing();var env=shell.getEnvelopeInternal();if(!env.contains(p))
return false;if(!jsts_old.algorithm.CGAlgorithms.isPointInRing(p,shell.getCoordinates()))
return false;for(var i=0;i<this.holes.length;i++){var hole=this.holes[i];if(hole.containsPoint(p))
return false;}
return true;};jsts_old.geom.Dimension=function(){};jsts_old.geom.Dimension.P=0;jsts_old.geom.Dimension.L=1;jsts_old.geom.Dimension.A=2;jsts_old.geom.Dimension.FALSE=-1;jsts_old.geom.Dimension.TRUE=-2;jsts_old.geom.Dimension.DONTCARE=-3;jsts_old.geom.Dimension.toDimensionSymbol=function(dimensionValue){switch(dimensionValue){case jsts_old.geom.Dimension.FALSE:return'F';case jsts_old.geom.Dimension.TRUE:return'T';case jsts_old.geom.Dimension.DONTCARE:return'*';case jsts_old.geom.Dimension.P:return'0';case jsts_old.geom.Dimension.L:return'1';case jsts_old.geom.Dimension.A:return'2';}
throw new jsts_old.IllegalArgumentError('Unknown dimension value: '+
dimensionValue);};jsts_old.geom.Dimension.toDimensionValue=function(dimensionSymbol){switch(dimensionSymbol.toUpperCase()){case'F':return jsts_old.geom.Dimension.FALSE;case'T':return jsts_old.geom.Dimension.TRUE;case'*':return jsts_old.geom.Dimension.DONTCARE;case'0':return jsts_old.geom.Dimension.P;case'1':return jsts_old.geom.Dimension.L;case'2':return jsts_old.geom.Dimension.A;}
throw new jsts_old.error.IllegalArgumentError('Unknown dimension symbol: '+
dimensionSymbol);};(function(){var Dimension=jsts_old.geom.Dimension;jsts_old.geom.LineString=function(points,factory){this.factory=factory;this.points=points||[];};jsts_old.geom.LineString.prototype=new jsts_old.geom.Geometry();jsts_old.geom.LineString.constructor=jsts_old.geom.LineString;jsts_old.geom.LineString.prototype.points=null;jsts_old.geom.LineString.prototype.getCoordinates=function(){return this.points;};jsts_old.geom.LineString.prototype.getCoordinateSequence=function(){return this.points;};jsts_old.geom.LineString.prototype.getCoordinateN=function(n){return this.points[n];};jsts_old.geom.LineString.prototype.getCoordinate=function(){if(this.isEmpty()){return null;}
return this.getCoordinateN(0);};jsts_old.geom.LineString.prototype.getDimension=function(){return 1;};jsts_old.geom.LineString.prototype.getBoundaryDimension=function(){if(this.isClosed()){return Dimension.FALSE;}
return 0;};jsts_old.geom.LineString.prototype.isEmpty=function(){return this.points.length===0;};jsts_old.geom.LineString.prototype.getNumPoints=function(){return this.points.length;};jsts_old.geom.LineString.prototype.getPointN=function(n){return this.getFactory().createPoint(this.points[n]);};jsts_old.geom.LineString.prototype.getStartPoint=function(){if(this.isEmpty()){return null;}
return this.getPointN(0);};jsts_old.geom.LineString.prototype.getEndPoint=function(){if(this.isEmpty()){return null;}
return this.getPointN(this.getNumPoints()-1);};jsts_old.geom.LineString.prototype.isClosed=function(){if(this.isEmpty()){return false;}
return this.getCoordinateN(0).equals2D(this.getCoordinateN(this.points.length-1));};jsts_old.geom.LineString.prototype.isRing=function(){return this.isClosed()&&this.isSimple();};jsts_old.geom.LineString.prototype.getGeometryType=function(){return'LineString';};jsts_old.geom.LineString.prototype.getLength=function(){return jsts_old.algorithm.CGAlgorithms.computeLength(this.points);};jsts_old.geom.LineString.prototype.getBoundary=function(){return(new jsts_old.operation.BoundaryOp(this)).getBoundary();};jsts_old.geom.LineString.prototype.computeEnvelopeInternal=function(){if(this.isEmpty()){return new jsts_old.geom.Envelope();}
var env=new jsts_old.geom.Envelope();this.points.forEach(function(component){env.expandToInclude(component);});return env;};jsts_old.geom.LineString.prototype.equalsExact=function(other,tolerance){if(!this.isEquivalentClass(other)){return false;}
if(this.points.length!==other.points.length){return false;}
if(this.isEmpty()&&other.isEmpty()){return true;}
return this.points.reduce(function(equal,point,i){return equal&&jsts_old.geom.Geometry.prototype.equal(point,other.points[i],tolerance);});};jsts_old.geom.LineString.prototype.isEquivalentClass=function(other){return other instanceof jsts_old.geom.LineString;};jsts_old.geom.LineString.prototype.compareToSameClass=function(o){var line=o;var i=0,il=this.points.length;var j=0,jl=line.points.length;while(i<il&&j<jl){var comparison=this.points[i].compareTo(line.points[j]);if(comparison!==0){return comparison;}
i++;j++;}
if(i<il){return 1;}
if(j<jl){return-1;}
return 0;};jsts_old.geom.LineString.prototype.apply=function(filter){if(filter instanceof jsts_old.geom.GeometryFilter||filter instanceof jsts_old.geom.GeometryComponentFilter){filter.filter(this);}else if(filter instanceof jsts_old.geom.CoordinateFilter){for(var i=0,len=this.points.length;i<len;i++){filter.filter(this.points[i]);}}else if(filter instanceof jsts_old.geom.CoordinateSequenceFilter){this.apply2.apply(this,arguments);}};jsts_old.geom.LineString.prototype.apply2=function(filter){if(this.points.length===0)
return;for(var i=0;i<this.points.length;i++){filter.filter(this.points,i);if(filter.isDone())
break;}
if(filter.isGeometryChanged()){}};jsts_old.geom.LineString.prototype.clone=function(){var points=[];for(var i=0,len=this.points.length;i<len;i++){points.push(this.points[i].clone());}
return this.factory.createLineString(points);};jsts_old.geom.LineString.prototype.normalize=function(){var i,il,j,ci,cj,len;len=this.points.length;il=parseInt(len/2);for(i=0;i<il;i++){j=len-1-i;ci=this.points[i];cj=this.points[j];if(!ci.equals(cj)){if(ci.compareTo(cj)>0){this.points.reverse();}
return;}}};jsts_old.geom.LineString.prototype.CLASS_NAME='jsts_old.geom.LineString';})();(function(){jsts_old.geom.LinearRing=function(points,factory){jsts_old.geom.LineString.apply(this,arguments);};jsts_old.geom.LinearRing.prototype=new jsts_old.geom.LineString();jsts_old.geom.LinearRing.constructor=jsts_old.geom.LinearRing;jsts_old.geom.LinearRing.prototype.getBoundaryDimension=function(){return jsts_old.geom.Dimension.FALSE;};jsts_old.geom.LinearRing.prototype.isSimple=function(){return true;};jsts_old.geom.LinearRing.prototype.getGeometryType=function(){return'LinearRing';};jsts_old.geom.LinearRing.MINIMUM_VALID_SIZE=4;jsts_old.geom.LinearRing.prototype.CLASS_NAME='jsts_old.geom.LinearRing';})();jsts_old.geomgraph.NodeFactory=function(){};jsts_old.geomgraph.NodeFactory.prototype.createNode=function(coord){return new jsts_old.geomgraph.Node(coord,null);};jsts_old.operation.overlay.OverlayNodeFactory=function(){};jsts_old.operation.overlay.OverlayNodeFactory.prototype=new jsts_old.geomgraph.NodeFactory();jsts_old.operation.overlay.OverlayNodeFactory.constructor=jsts_old.operation.overlay.OverlayNodeFactory;jsts_old.operation.overlay.OverlayNodeFactory.prototype.createNode=function(coord){return new jsts_old.geomgraph.Node(coord,new jsts_old.geomgraph.DirectedEdgeStar());};jsts_old.operation.buffer.SubgraphDepthLocater=function(subgraphs){this.subgraphs=[];this.seg=new jsts_old.geom.LineSegment();this.subgraphs=subgraphs;};jsts_old.operation.buffer.SubgraphDepthLocater.prototype.subgraphs=null;jsts_old.operation.buffer.SubgraphDepthLocater.prototype.seg=null;jsts_old.operation.buffer.SubgraphDepthLocater.prototype.getDepth=function(p){var stabbedSegments=this.findStabbedSegments(p);if(stabbedSegments.length===0)
return 0;stabbedSegments.sort();var ds=stabbedSegments[0];return ds.leftDepth;};jsts_old.operation.buffer.SubgraphDepthLocater.prototype.findStabbedSegments=function(stabbingRayLeftPt){if(arguments.length===3){this.findStabbedSegments2.apply(this,arguments);return;}
var stabbedSegments=[];for(var i=0;i<this.subgraphs.length;i++){var bsg=this.subgraphs[i];var env=bsg.getEnvelope();if(stabbingRayLeftPt.y<env.getMinY()||stabbingRayLeftPt.y>env.getMaxY())
continue;this.findStabbedSegments2(stabbingRayLeftPt,bsg.getDirectedEdges(),stabbedSegments);}
return stabbedSegments;};jsts_old.operation.buffer.SubgraphDepthLocater.prototype.findStabbedSegments2=function(stabbingRayLeftPt,dirEdges,stabbedSegments){if(arguments[1]instanceof jsts_old.geomgraph.DirectedEdge){this.findStabbedSegments3(stabbingRayLeftPt,dirEdges,stabbedSegments);return;}
for(var i=dirEdges.iterator();i.hasNext();){var de=i.next();if(!de.isForward())
continue;this.findStabbedSegments3(stabbingRayLeftPt,de,stabbedSegments);}};jsts_old.operation.buffer.SubgraphDepthLocater.prototype.findStabbedSegments3=function(stabbingRayLeftPt,dirEdge,stabbedSegments){var pts=dirEdge.getEdge().getCoordinates();for(var i=0;i<pts.length-1;i++){this.seg.p0=pts[i];this.seg.p1=pts[i+1];if(this.seg.p0.y>this.seg.p1.y)
this.seg.reverse();var maxx=Math.max(this.seg.p0.x,this.seg.p1.x);if(maxx<stabbingRayLeftPt.x)
continue;if(this.seg.isHorizontal())
continue;if(stabbingRayLeftPt.y<this.seg.p0.y||stabbingRayLeftPt.y>this.seg.p1.y)
continue;if(jsts_old.algorithm.CGAlgorithms.computeOrientation(this.seg.p0,this.seg.p1,stabbingRayLeftPt)===jsts_old.algorithm.CGAlgorithms.RIGHT)
continue;var depth=dirEdge.getDepth(jsts_old.geomgraph.Position.LEFT);if(!this.seg.p0.equals(pts[i]))
depth=dirEdge.getDepth(jsts_old.geomgraph.Position.RIGHT);var ds=new jsts_old.operation.buffer.SubgraphDepthLocater.DepthSegment(this.seg,depth);stabbedSegments.push(ds);}};jsts_old.operation.buffer.SubgraphDepthLocater.DepthSegment=function(seg,depth){this.upwardSeg=new jsts_old.geom.LineSegment(seg);this.leftDepth=depth;};jsts_old.operation.buffer.SubgraphDepthLocater.DepthSegment.prototype.upwardSeg=null;jsts_old.operation.buffer.SubgraphDepthLocater.DepthSegment.prototype.leftDepth=null;jsts_old.operation.buffer.SubgraphDepthLocater.DepthSegment.prototype.compareTo=function(obj){var other=obj;var orientIndex=this.upwardSeg.orientationIndex(other.upwardSeg);if(orientIndex===0)
orientIndex=-1*other.upwardSeg.orientationIndex(upwardSeg);if(orientIndex!==0)
return orientIndex;return this.compareX(this.upwardSeg,other.upwardSeg);};jsts_old.operation.buffer.SubgraphDepthLocater.DepthSegment.prototype.compareX=function(seg0,seg1){var compare0=seg0.p0.compareTo(seg1.p0);if(compare0!==0)
return compare0;return seg0.p1.compareTo(seg1.p1);};jsts_old.index.ItemVisitor=function(){};jsts_old.index.ItemVisitor.prototype.visitItem=function(){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.simplify.LineSegmentIndex=function(){this.index=new jsts_old.index.quadtree.Quadtree();};jsts_old.simplify.LineSegmentIndex.prototype.index=null;jsts_old.simplify.LineSegmentIndex.prototype.add=function(line){if(line instanceof jsts_old.geom.LineSegment){this.add2(line);return;}
var segs=line.getSegments();for(var i=0;i<segs.length;i++){var seg=segs[i];this.add2(seg);}};jsts_old.simplify.LineSegmentIndex.prototype.add2=function(seg){this.index.insert(new jsts_old.geom.Envelope(seg.p0,seg.p1),seg);};jsts_old.simplify.LineSegmentIndex.prototype.remove=function(seg){this.index.remove(new jsts_old.geom.Envelope(seg.p0,seg.p1),seg);};jsts_old.simplify.LineSegmentIndex.prototype.query=function(querySeg){var env=new jsts_old.geom.Envelope(querySeg.p0,querySeg.p1);var visitor=new jsts_old.simplify.LineSegmentIndex.LineSegmentVisitor(querySeg);this.index.query(env,visitor);var itemsFound=visitor.getItems();return itemsFound;};jsts_old.simplify.LineSegmentIndex.LineSegmentVisitor=function(querySeg){this.items=[];this.querySeg=querySeg;};jsts_old.simplify.LineSegmentIndex.LineSegmentVisitor.prototype=new jsts_old.index.ItemVisitor();jsts_old.simplify.LineSegmentIndex.LineSegmentVisitor.prototype.querySeg=null;jsts_old.simplify.LineSegmentIndex.LineSegmentVisitor.prototype.items=null;jsts_old.simplify.LineSegmentIndex.LineSegmentVisitor.prototype.visitItem=function(item){var seg=item;if(jsts_old.geom.Envelope.intersects(seg.p0,seg.p1,this.querySeg.p0,this.querySeg.p1))
this.items.push(item);};jsts_old.simplify.LineSegmentIndex.LineSegmentVisitor.prototype.getItems=function(){return this.items;};jsts_old.triangulate.quadedge.LastFoundQuadEdgeLocator=function(subdiv){this.subdiv=subdiv;this.lastEdge=null;this.init();};jsts_old.triangulate.quadedge.LastFoundQuadEdgeLocator.prototype.init=function(){this.lastEdge=this.findEdge();};jsts_old.triangulate.quadedge.LastFoundQuadEdgeLocator.prototype.findEdge=function(){var edges=this.subdiv.getEdges();return edges[0];};jsts_old.triangulate.quadedge.LastFoundQuadEdgeLocator.prototype.locate=function(v){if(!this.lastEdge.isLive()){this.init();}
var e=this.subdiv.locateFromEdge(v,this.lastEdge);this.lastEdge=e;return e;};(function(){jsts_old.geom.Polygon=function(shell,holes,factory){this.shell=shell||factory.createLinearRing(null);this.holes=holes||[];this.factory=factory;};jsts_old.geom.Polygon.prototype=new jsts_old.geom.Geometry();jsts_old.geom.Polygon.constructor=jsts_old.geom.Polygon;jsts_old.geom.Polygon.prototype.getCoordinate=function(){return this.shell.getCoordinate();};jsts_old.geom.Polygon.prototype.isEmpty=function(){return this.shell.isEmpty();};jsts_old.geom.Polygon.prototype.getExteriorRing=function(){return this.shell;};jsts_old.geom.Polygon.prototype.getInteriorRingN=function(n){return this.holes[n];};jsts_old.geom.Polygon.prototype.getNumInteriorRing=function(){return this.holes.length;};jsts_old.geom.Polygon.prototype.getArea=function(){var area=0.0;area+=Math.abs(jsts_old.algorithm.CGAlgorithms.signedArea(this.shell.getCoordinateSequence()));for(var i=0;i<this.holes.length;i++){area-=Math.abs(jsts_old.algorithm.CGAlgorithms.signedArea(this.holes[i].getCoordinateSequence()));}
return area;};jsts_old.geom.Polygon.prototype.getLength=function(){var len=0.0;len+=this.shell.getLength();for(var i=0;i<this.holes.length;i++){len+=this.holes[i].getLength();}
return len;};jsts_old.geom.Polygon.prototype.getBoundary=function(){if(this.isEmpty()){return this.getFactory().createMultiLineString(null);}
var rings=[];rings[0]=this.shell.clone();for(var i=0,len=this.holes.length;i<len;i++){rings[i+1]=this.holes[i].clone();}
if(rings.length<=1)
return rings[0];return this.getFactory().createMultiLineString(rings);};jsts_old.geom.Polygon.prototype.computeEnvelopeInternal=function(){return this.shell.getEnvelopeInternal();};jsts_old.geom.Polygon.prototype.getDimension=function(){return 2;};jsts_old.geom.Polygon.prototype.getBoundaryDimension=function(){return 1;};jsts_old.geom.Polygon.prototype.equalsExact=function(other,tolerance){if(!this.isEquivalentClass(other)){return false;}
if(this.isEmpty()&&other.isEmpty()){return true;}
if(this.isEmpty()!==other.isEmpty()){return false;}
if(!this.shell.equalsExact(other.shell,tolerance)){return false;}
if(this.holes.length!==other.holes.length){return false;}
if(this.holes.length!==other.holes.length){return false;}
for(var i=0;i<this.holes.length;i++){if(!(this.holes[i]).equalsExact(other.holes[i],tolerance)){return false;}}
return true;};jsts_old.geom.Polygon.prototype.compareToSameClass=function(o){return this.shell.compareToSameClass(o.shell);};jsts_old.geom.Polygon.prototype.apply=function(filter){if(filter instanceof jsts_old.geom.GeometryComponentFilter){filter.filter(this);this.shell.apply(filter);for(var i=0,len=this.holes.length;i<len;i++){this.holes[i].apply(filter);}}else if(filter instanceof jsts_old.geom.GeometryFilter){filter.filter(this);}else if(filter instanceof jsts_old.geom.CoordinateFilter){this.shell.apply(filter);for(var i=0,len=this.holes.length;i<len;i++){this.holes[i].apply(filter);}}else if(filter instanceof jsts_old.geom.CoordinateSequenceFilter){this.apply2.apply(this,arguments);}};jsts_old.geom.Polygon.prototype.apply2=function(filter){this.shell.apply(filter);if(!filter.isDone()){for(var i=0;i<this.holes.length;i++){this.holes[i].apply(filter);if(filter.isDone())
break;}}
if(filter.isGeometryChanged()){}};jsts_old.geom.Polygon.prototype.clone=function(){var holes=[];for(var i=0,len=this.holes.length;i<len;i++){holes.push(this.holes[i].clone());}
return this.factory.createPolygon(this.shell.clone(),holes);};jsts_old.geom.Polygon.prototype.normalize=function(){this.normalize2(this.shell,true);for(var i=0,len=this.holes.length;i<len;i++){this.normalize2(this.holes[i],false);}
this.holes.sort();};jsts_old.geom.Polygon.prototype.normalize2=function(ring,clockwise){if(ring.isEmpty()){return;}
var uniqueCoordinates=ring.points.slice(0,ring.points.length-1);var minCoordinate=jsts_old.geom.CoordinateArrays.minCoordinate(ring.points);jsts_old.geom.CoordinateArrays.scroll(uniqueCoordinates,minCoordinate);ring.points=uniqueCoordinates.concat();ring.points[uniqueCoordinates.length]=uniqueCoordinates[0];if(jsts_old.algorithm.CGAlgorithms.isCCW(ring.points)===clockwise){ring.points.reverse();}};jsts_old.geom.Polygon.prototype.CLASS_NAME='jsts_old.geom.Polygon';})();jsts_old.algorithm.distance.DistanceToPoint=function(){};jsts_old.algorithm.distance.DistanceToPoint.computeDistance=function(geom,pt,ptDist){if(geom instanceof jsts_old.geom.LineString){jsts_old.algorithm.distance.DistanceToPoint.computeDistance2(geom,pt,ptDist);}else if(geom instanceof jsts_old.geom.Polygon){jsts_old.algorithm.distance.DistanceToPoint.computeDistance4(geom,pt,ptDist);}else if(geom instanceof jsts_old.geom.GeometryCollection){var gc=geom;for(var i=0;i<gc.getNumGeometries();i++){var g=gc.getGeometryN(i);jsts_old.algorithm.distance.DistanceToPoint.computeDistance(g,pt,ptDist);}}else{ptDist.setMinimum(geom.getCoordinate(),pt);}};jsts_old.algorithm.distance.DistanceToPoint.computeDistance2=function(line,pt,ptDist){var tempSegment=new jsts_old.geom.LineSegment();var coords=line.getCoordinates();for(var i=0;i<coords.length-1;i++){tempSegment.setCoordinates(coords[i],coords[i+1]);var closestPt=tempSegment.closestPoint(pt);ptDist.setMinimum(closestPt,pt);}};jsts_old.algorithm.distance.DistanceToPoint.computeDistance3=function(segment,pt,ptDist){var closestPt=segment.closestPoint(pt);ptDist.setMinimum(closestPt,pt);};jsts_old.algorithm.distance.DistanceToPoint.computeDistance4=function(poly,pt,ptDist){jsts_old.algorithm.distance.DistanceToPoint.computeDistance2(poly.getExteriorRing(),pt,ptDist);for(var i=0;i<poly.getNumInteriorRing();i++){jsts_old.algorithm.distance.DistanceToPoint.computeDistance2(poly.getInteriorRingN(i),pt,ptDist);}};jsts_old.noding.SegmentPointComparator=function(){};jsts_old.noding.SegmentPointComparator.compare=function(octant,p0,p1){if(p0.equals2D(p1))
return 0;var xSign=jsts_old.noding.SegmentPointComparator.relativeSign(p0.x,p1.x);var ySign=jsts_old.noding.SegmentPointComparator.relativeSign(p0.y,p1.y);switch(octant){case 0:return jsts_old.noding.SegmentPointComparator.compareValue(xSign,ySign);case 1:return jsts_old.noding.SegmentPointComparator.compareValue(ySign,xSign);case 2:return jsts_old.noding.SegmentPointComparator.compareValue(ySign,-xSign);case 3:return jsts_old.noding.SegmentPointComparator.compareValue(-xSign,ySign);case 4:return jsts_old.noding.SegmentPointComparator.compareValue(-xSign,-ySign);case 5:return jsts_old.noding.SegmentPointComparator.compareValue(-ySign,-xSign);case 6:return jsts_old.noding.SegmentPointComparator.compareValue(-ySign,xSign);case 7:return jsts_old.noding.SegmentPointComparator.compareValue(xSign,-ySign);}
return 0;};jsts_old.noding.SegmentPointComparator.relativeSign=function(x0,x1){if(x0<x1)
return-1;if(x0>x1)
return 1;return 0;};jsts_old.noding.SegmentPointComparator.compareValue=function(compareSign0,compareSign1){if(compareSign0<0)
return-1;if(compareSign0>0)
return 1;if(compareSign1<0)
return-1;if(compareSign1>0)
return 1;return 0;};jsts_old.operation.IsSimpleOp=function(geom){this.geom=geom;};jsts_old.operation.IsSimpleOp.prototype.geom=null;jsts_old.operation.IsSimpleOp.prototype.isClosedEndpointsInInterior=true;jsts_old.operation.IsSimpleOp.prototype.nonSimpleLocation=null;jsts_old.operation.IsSimpleOp.prototype.IsSimpleOp=function(geom){this.geom=geom;};jsts_old.operation.IsSimpleOp.prototype.isSimple=function(){this.nonSimpleLocation=null;if(this.geom instanceof jsts_old.geom.LineString){return this.isSimpleLinearGeometry(this.geom);}
if(this.geom instanceof jsts_old.geom.MultiLineString){return this.isSimpleLinearGeometry(this.geom);}
if(this.geom instanceof jsts_old.geom.MultiPoint){return this.isSimpleMultiPoint(this.geom);}
return true;};jsts_old.operation.IsSimpleOp.prototype.isSimpleMultiPoint=function(mp){if(mp.isEmpty())
return true;var points=[];for(var i=0;i<mp.getNumGeometries();i++){var pt=mp.getGeometryN(i);var p=pt.getCoordinate();for(var j=0;j<points.length;j++){var point=points[j];if(p.equals2D(point)){this.nonSimpleLocation=p;return false;}}
points.push(p);}
return true;};jsts_old.operation.IsSimpleOp.prototype.isSimpleLinearGeometry=function(geom){if(geom.isEmpty())
return true;var graph=new jsts_old.geomgraph.GeometryGraph(0,geom);var li=new jsts_old.algorithm.RobustLineIntersector();var si=graph.computeSelfNodes(li,true);if(!si.hasIntersection())
return true;if(si.hasProperIntersection()){this.nonSimpleLocation=si.getProperIntersectionPoint();return false;}
if(this.hasNonEndpointIntersection(graph))
return false;if(this.isClosedEndpointsInInterior){if(this.hasClosedEndpointIntersection(graph))
return false;}
return true;};jsts_old.operation.IsSimpleOp.prototype.hasNonEndpointIntersection=function(graph){for(var i=graph.getEdgeIterator();i.hasNext();){var e=i.next();var maxSegmentIndex=e.getMaximumSegmentIndex();for(var eiIt=e.getEdgeIntersectionList().iterator();eiIt.hasNext();){var ei=eiIt.next();if(!ei.isEndPoint(maxSegmentIndex)){this.nonSimpleLocation=ei.getCoordinate();return true;}}}
return false;};jsts_old.operation.IsSimpleOp.prototype.hasClosedEndpointIntersection=function(graph){var endPoints=new javascript.util.TreeMap();for(var i=graph.getEdgeIterator();i.hasNext();){var e=i.next();var maxSegmentIndex=e.getMaximumSegmentIndex();var isClosed=e.isClosed();var p0=e.getCoordinate(0);this.addEndpoint(endPoints,p0,isClosed);var p1=e.getCoordinate(e.getNumPoints()-1);this.addEndpoint(endPoints,p1,isClosed);}
for(var i=endPoints.values().iterator();i.hasNext();){var eiInfo=i.next();if(eiInfo.isClosed&&eiInfo.degree!=2){this.nonSimpleLocation=eiInfo.getCoordinate();return true;}}
return false;};jsts_old.operation.IsSimpleOp.EndpointInfo=function(pt){this.pt=pt;this.isClosed=false;this.degree=0;};jsts_old.operation.IsSimpleOp.EndpointInfo.prototype.pt=null;jsts_old.operation.IsSimpleOp.EndpointInfo.prototype.isClosed=null;jsts_old.operation.IsSimpleOp.EndpointInfo.prototype.degree=null;jsts_old.operation.IsSimpleOp.EndpointInfo.prototype.getCoordinate=function(){return this.pt;};jsts_old.operation.IsSimpleOp.EndpointInfo.prototype.addEndpoint=function(isClosed){this.degree++;this.isClosed=this.isClosed||isClosed;};jsts_old.operation.IsSimpleOp.prototype.addEndpoint=function(endPoints,p,isClosed){var eiInfo=endPoints.get(p);if(eiInfo===null){eiInfo=new jsts_old.operation.IsSimpleOp.EndpointInfo(p);endPoints.put(p,eiInfo);}
eiInfo.addEndpoint(isClosed);};jsts_old.operation.overlay.PolygonBuilder=function(geometryFactory){this.shellList=[];this.geometryFactory=geometryFactory;};jsts_old.operation.overlay.PolygonBuilder.prototype.geometryFactory=null;jsts_old.operation.overlay.PolygonBuilder.prototype.shellList=null;jsts_old.operation.overlay.PolygonBuilder.prototype.add=function(graph){if(arguments.length===2){this.add2.apply(this,arguments);return;}
this.add2(graph.getEdgeEnds(),graph.getNodes());};jsts_old.operation.overlay.PolygonBuilder.prototype.add2=function(dirEdges,nodes){jsts_old.geomgraph.PlanarGraph.linkResultDirectedEdges(nodes);var maxEdgeRings=this.buildMaximalEdgeRings(dirEdges);var freeHoleList=[];var edgeRings=this.buildMinimalEdgeRings(maxEdgeRings,this.shellList,freeHoleList);this.sortShellsAndHoles(edgeRings,this.shellList,freeHoleList);this.placeFreeHoles(this.shellList,freeHoleList);};jsts_old.operation.overlay.PolygonBuilder.prototype.getPolygons=function(){var resultPolyList=this.computePolygons(this.shellList);return resultPolyList;};jsts_old.operation.overlay.PolygonBuilder.prototype.buildMaximalEdgeRings=function(dirEdges){var maxEdgeRings=[];for(var it=dirEdges.iterator();it.hasNext();){var de=it.next();if(de.isInResult()&&de.getLabel().isArea()){if(de.getEdgeRing()==null){var er=new jsts_old.operation.overlay.MaximalEdgeRing(de,this.geometryFactory);maxEdgeRings.push(er);er.setInResult();}}}
return maxEdgeRings;};jsts_old.operation.overlay.PolygonBuilder.prototype.buildMinimalEdgeRings=function(maxEdgeRings,shellList,freeHoleList){var edgeRings=[];for(var i=0;i<maxEdgeRings.length;i++){var er=maxEdgeRings[i];if(er.getMaxNodeDegree()>2){er.linkDirectedEdgesForMinimalEdgeRings();var minEdgeRings=er.buildMinimalRings();var shell=this.findShell(minEdgeRings);if(shell!==null){this.placePolygonHoles(shell,minEdgeRings);shellList.push(shell);}else{freeHoleList=freeHoleList.concat(minEdgeRings);}}else{edgeRings.push(er);}}
return edgeRings;};jsts_old.operation.overlay.PolygonBuilder.prototype.findShell=function(minEdgeRings){var shellCount=0;var shell=null;for(var i=0;i<minEdgeRings.length;i++){var er=minEdgeRings[i];if(!er.isHole()){shell=er;shellCount++;}}
jsts_old.util.Assert.isTrue(shellCount<=1,'found two shells in MinimalEdgeRing list');return shell;};jsts_old.operation.overlay.PolygonBuilder.prototype.placePolygonHoles=function(shell,minEdgeRings){for(var i=0;i<minEdgeRings.length;i++){var er=minEdgeRings[i];if(er.isHole()){er.setShell(shell);}}};jsts_old.operation.overlay.PolygonBuilder.prototype.sortShellsAndHoles=function(edgeRings,shellList,freeHoleList){for(var i=0;i<edgeRings.length;i++){var er=edgeRings[i];if(er.isHole()){freeHoleList.push(er);}else{shellList.push(er);}}};jsts_old.operation.overlay.PolygonBuilder.prototype.placeFreeHoles=function(shellList,freeHoleList){for(var i=0;i<freeHoleList.length;i++){var hole=freeHoleList[i];if(hole.getShell()==null){var shell=this.findEdgeRingContaining(hole,shellList);if(shell===null)
throw new jsts_old.error.TopologyError('unable to assign hole to a shell',hole.getCoordinate(0));hole.setShell(shell);}}};jsts_old.operation.overlay.PolygonBuilder.prototype.findEdgeRingContaining=function(testEr,shellList){var testRing=testEr.getLinearRing();var testEnv=testRing.getEnvelopeInternal();var testPt=testRing.getCoordinateN(0);var minShell=null;var minEnv=null;for(var i=0;i<shellList.length;i++){var tryShell=shellList[i];var tryRing=tryShell.getLinearRing();var tryEnv=tryRing.getEnvelopeInternal();if(minShell!==null)
minEnv=minShell.getLinearRing().getEnvelopeInternal();var isContained=false;if(tryEnv.contains(testEnv)&&jsts_old.algorithm.CGAlgorithms.isPointInRing(testPt,tryRing.getCoordinates()))
isContained=true;if(isContained){if(minShell==null||minEnv.contains(tryEnv)){minShell=tryShell;}}}
return minShell;};jsts_old.operation.overlay.PolygonBuilder.prototype.computePolygons=function(shellList){var resultPolyList=new javascript.util.ArrayList();for(var i=0;i<shellList.length;i++){var er=shellList[i];var poly=er.toPolygon(this.geometryFactory);resultPolyList.add(poly);}
return resultPolyList;};jsts_old.operation.overlay.PolygonBuilder.prototype.containsPoint=function(p){for(var i=0;i<this.shellList.length;i++){var er=this.shellList[i];if(er.containsPoint(p))
return true;}
return false;};jsts_old.operation.buffer.BufferOp=function(g,bufParams){this.argGeom=g;this.bufParams=bufParams?bufParams:new jsts_old.operation.buffer.BufferParameters();};jsts_old.operation.buffer.BufferOp.MAX_PRECISION_DIGITS=12;jsts_old.operation.buffer.BufferOp.precisionScaleFactor=function(g,distance,maxPrecisionDigits){var env=g.getEnvelopeInternal();var envSize=Math.max(env.getHeight(),env.getWidth());var expandByDistance=distance>0.0?distance:0.0;var bufEnvSize=envSize+2*expandByDistance;var bufEnvLog10=(Math.log(bufEnvSize)/Math.log(10)+1.0);var minUnitLog10=bufEnvLog10-maxPrecisionDigits;var scaleFactor=Math.pow(10.0,-minUnitLog10);return scaleFactor;};jsts_old.operation.buffer.BufferOp.bufferOp=function(g,distance){if(arguments.length>2){return jsts_old.operation.buffer.BufferOp.bufferOp2.apply(this,arguments);}
var gBuf=new jsts_old.operation.buffer.BufferOp(g);var geomBuf=gBuf.getResultGeometry(distance);return geomBuf;};jsts_old.operation.buffer.BufferOp.bufferOp2=function(g,distance,params){if(arguments.length>3){return jsts_old.operation.buffer.BufferOp.bufferOp3.apply(this,arguments);}
var bufOp=new jsts_old.operation.buffer.BufferOp(g,params);var geomBuf=bufOp.getResultGeometry(distance);return geomBuf;};jsts_old.operation.buffer.BufferOp.bufferOp3=function(g,distance,quadrantSegments){if(arguments.length>4){return jsts_old.operation.buffer.BufferOp.bufferOp4.apply(this,arguments);}
var bufOp=new jsts_old.operation.buffer.BufferOp(g);bufOp.setQuadrantSegments(quadrantSegments);var geomBuf=bufOp.getResultGeometry(distance);return geomBuf;};jsts_old.operation.buffer.BufferOp.bufferOp4=function(g,distance,quadrantSegments,endCapStyle){var bufOp=new jsts_old.operation.buffer.BufferOp(g);bufOp.setQuadrantSegments(quadrantSegments);bufOp.setEndCapStyle(endCapStyle);var geomBuf=bufOp.getResultGeometry(distance);return geomBuf;};jsts_old.operation.buffer.BufferOp.prototype.argGeom=null;jsts_old.operation.buffer.BufferOp.prototype.distance=null;jsts_old.operation.buffer.BufferOp.prototype.bufParams=null;jsts_old.operation.buffer.BufferOp.prototype.resultGeometry=null;jsts_old.operation.buffer.BufferOp.prototype.setEndCapStyle=function(endCapStyle){this.bufParams.setEndCapStyle(endCapStyle);};jsts_old.operation.buffer.BufferOp.prototype.setQuadrantSegments=function(quadrantSegments){this.bufParams.setQuadrantSegments(quadrantSegments);};jsts_old.operation.buffer.BufferOp.prototype.getResultGeometry=function(dist){this.distance=dist;this.computeGeometry();return this.resultGeometry;};jsts_old.operation.buffer.BufferOp.prototype.computeGeometry=function(){this.bufferOriginalPrecision();if(this.resultGeometry!==null){return;}
var argPM=this.argGeom.getPrecisionModel();if(argPM.getType()===jsts_old.geom.PrecisionModel.FIXED){this.bufferFixedPrecision(argPM);}else{this.bufferReducedPrecision();}};jsts_old.operation.buffer.BufferOp.prototype.bufferReducedPrecision=function(){var precDigits;var saveException=null;for(precDigits=jsts_old.operation.buffer.BufferOp.MAX_PRECISION_DIGITS;precDigits>=0;precDigits--){try{this.bufferReducedPrecision2(precDigits);}catch(ex){saveException=ex;}
if(this.resultGeometry!==null){return;}}
throw saveException;};jsts_old.operation.buffer.BufferOp.prototype.bufferOriginalPrecision=function(){try{var bufBuilder=new jsts_old.operation.buffer.BufferBuilder(this.bufParams);this.resultGeometry=bufBuilder.buffer(this.argGeom,this.distance);}catch(e){}};jsts_old.operation.buffer.BufferOp.prototype.bufferReducedPrecision2=function(precisionDigits){var sizeBasedScaleFactor=jsts_old.operation.buffer.BufferOp.precisionScaleFactor(this.argGeom,this.distance,precisionDigits);var fixedPM=new jsts_old.geom.PrecisionModel(sizeBasedScaleFactor);this.bufferFixedPrecision(fixedPM);};jsts_old.operation.buffer.BufferOp.prototype.bufferFixedPrecision=function(fixedPM){var noder=new jsts_old.noding.ScaledNoder(new jsts_old.noding.snapround.MCIndexSnapRounder(new jsts_old.geom.PrecisionModel(1.0)),fixedPM.getScale());var bufBuilder=new jsts_old.operation.buffer.BufferBuilder(this.bufParams);bufBuilder.setWorkingPrecisionModel(fixedPM);bufBuilder.setNoder(noder);this.resultGeometry=bufBuilder.buffer(this.argGeom,this.distance);};jsts_old.geomgraph.index.EdgeSetIntersector=function(){};jsts_old.geomgraph.index.EdgeSetIntersector.prototype.computeIntersections=function(edges,si,testAllSegments){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.geomgraph.index.EdgeSetIntersector.prototype.computeIntersections2=function(edges0,edges1,si){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.geomgraph.index.SimpleMCSweepLineIntersector=function(){throw new jsts_old.error.NotImplementedError();};jsts_old.geomgraph.index.SimpleMCSweepLineIntersector.prototype=new jsts_old.geomgraph.index.EdgeSetIntersector();jsts_old.algorithm.locate.SimplePointInAreaLocator=function(geom){this.geom=geom;};jsts_old.algorithm.locate.SimplePointInAreaLocator.locate=function(p,geom){if(geom.isEmpty())
return jsts_old.geom.Location.EXTERIOR;if(jsts_old.algorithm.locate.SimplePointInAreaLocator.containsPoint(p,geom))
return jsts_old.geom.Location.INTERIOR;return jsts_old.geom.Location.EXTERIOR;};jsts_old.algorithm.locate.SimplePointInAreaLocator.containsPoint=function(p,geom){if(geom instanceof jsts_old.geom.Polygon){return jsts_old.algorithm.locate.SimplePointInAreaLocator.containsPointInPolygon(p,geom);}else if(geom instanceof jsts_old.geom.GeometryCollection||geom instanceof jsts_old.geom.MultiPoint||geom instanceof jsts_old.geom.MultiLineString||geom instanceof jsts_old.geom.MultiPolygon){for(var i=0;i<geom.geometries.length;i++){var g2=geom.geometries[i];if(g2!==geom)
if(jsts_old.algorithm.locate.SimplePointInAreaLocator.containsPoint(p,g2))
return true;}}
return false;};jsts_old.algorithm.locate.SimplePointInAreaLocator.containsPointInPolygon=function(p,poly){if(poly.isEmpty())
return false;var shell=poly.getExteriorRing();if(!jsts_old.algorithm.locate.SimplePointInAreaLocator.isPointInRing(p,shell))
return false;for(var i=0;i<poly.getNumInteriorRing();i++){var hole=poly.getInteriorRingN(i);if(jsts_old.algorithm.locate.SimplePointInAreaLocator.isPointInRing(p,hole))
return false;}
return true;};jsts_old.algorithm.locate.SimplePointInAreaLocator.isPointInRing=function(p,ring){if(!ring.getEnvelopeInternal().intersects(p))
return false;return jsts_old.algorithm.CGAlgorithms.isPointInRing(p,ring.getCoordinates());};jsts_old.algorithm.locate.SimplePointInAreaLocator.prototype.geom=null;jsts_old.algorithm.locate.SimplePointInAreaLocator.prototype.locate=function(p){return jsts_old.algorithm.locate.SimplePointInAreaLocator.locate(p,geom);};jsts_old.geomgraph.EdgeEndStar=function(){this.edgeMap=new javascript.util.TreeMap();this.edgeList=null;this.ptInAreaLocation=[jsts_old.geom.Location.NONE,jsts_old.geom.Location.NONE];};jsts_old.geomgraph.EdgeEndStar.prototype.edgeMap=null;jsts_old.geomgraph.EdgeEndStar.prototype.edgeList=null;jsts_old.geomgraph.EdgeEndStar.prototype.ptInAreaLocation=null;jsts_old.geomgraph.EdgeEndStar.prototype.insert=function(e){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.geomgraph.EdgeEndStar.prototype.insertEdgeEnd=function(e,obj){this.edgeMap.put(e,obj);this.edgeList=null;};jsts_old.geomgraph.EdgeEndStar.prototype.getCoordinate=function(){var it=this.iterator();if(!it.hasNext())
return null;var e=it.next();return e.getCoordinate();};jsts_old.geomgraph.EdgeEndStar.prototype.getDegree=function(){return this.edgeMap.size();};jsts_old.geomgraph.EdgeEndStar.prototype.iterator=function(){return this.getEdges().iterator();};jsts_old.geomgraph.EdgeEndStar.prototype.getEdges=function(){if(this.edgeList===null){this.edgeList=new javascript.util.ArrayList(this.edgeMap.values());}
return this.edgeList;};jsts_old.geomgraph.EdgeEndStar.prototype.getNextCW=function(ee){this.getEdges();var i=this.edgeList.indexOf(ee);var iNextCW=i-1;if(i===0)
iNextCW=this.edgeList.length-1;return this.edgeList[iNextCW];};jsts_old.geomgraph.EdgeEndStar.prototype.computeLabelling=function(geomGraph){this.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule());this.propagateSideLabels(0);this.propagateSideLabels(1);var hasDimensionalCollapseEdge=[false,false];for(var it=this.iterator();it.hasNext();){var e=it.next();var label=e.getLabel();for(var geomi=0;geomi<2;geomi++){if(label.isLine(geomi)&&label.getLocation(geomi)===jsts_old.geom.Location.BOUNDARY)
hasDimensionalCollapseEdge[geomi]=true;}}
for(var it=this.iterator();it.hasNext();){var e=it.next();var label=e.getLabel();for(var geomi=0;geomi<2;geomi++){if(label.isAnyNull(geomi)){var loc=jsts_old.geom.Location.NONE;if(hasDimensionalCollapseEdge[geomi]){loc=jsts_old.geom.Location.EXTERIOR;}else{var p=e.getCoordinate();loc=this.getLocation(geomi,p,geomGraph);}
label.setAllLocationsIfNull(geomi,loc);}}}};jsts_old.geomgraph.EdgeEndStar.prototype.computeEdgeEndLabels=function(boundaryNodeRule){for(var it=this.iterator();it.hasNext();){var ee=it.next();ee.computeLabel(boundaryNodeRule);}};jsts_old.geomgraph.EdgeEndStar.prototype.getLocation=function(geomIndex,p,geom){if(this.ptInAreaLocation[geomIndex]===jsts_old.geom.Location.NONE){this.ptInAreaLocation[geomIndex]=jsts_old.algorithm.locate.SimplePointInAreaLocator.locate(p,geom[geomIndex].getGeometry());}
return this.ptInAreaLocation[geomIndex];};jsts_old.geomgraph.EdgeEndStar.prototype.isAreaLabelsConsistent=function(geomGraph){this.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule());return this.checkAreaLabelsConsistent(0);};jsts_old.geomgraph.EdgeEndStar.prototype.checkAreaLabelsConsistent=function(geomIndex){var edges=this.getEdges();if(edges.size()<=0)
return true;var lastEdgeIndex=edges.size()-1;var startLabel=edges.get(lastEdgeIndex).getLabel();var startLoc=startLabel.getLocation(geomIndex,jsts_old.geomgraph.Position.LEFT);jsts_old.util.Assert.isTrue(startLoc!=jsts_old.geom.Location.NONE,'Found unlabelled area edge');var currLoc=startLoc;for(var it=this.iterator();it.hasNext();){var e=it.next();var label=e.getLabel();jsts_old.util.Assert.isTrue(label.isArea(geomIndex),'Found non-area edge');var leftLoc=label.getLocation(geomIndex,jsts_old.geomgraph.Position.LEFT);var rightLoc=label.getLocation(geomIndex,jsts_old.geomgraph.Position.RIGHT);if(leftLoc===rightLoc){return false;}
if(rightLoc!==currLoc){return false;}
currLoc=leftLoc;}
return true;};jsts_old.geomgraph.EdgeEndStar.prototype.propagateSideLabels=function(geomIndex){var startLoc=jsts_old.geom.Location.NONE;for(var it=this.iterator();it.hasNext();){var e=it.next();var label=e.getLabel();if(label.isArea(geomIndex)&&label.getLocation(geomIndex,jsts_old.geomgraph.Position.LEFT)!==jsts_old.geom.Location.NONE)
startLoc=label.getLocation(geomIndex,jsts_old.geomgraph.Position.LEFT);}
if(startLoc===jsts_old.geom.Location.NONE)
return;var currLoc=startLoc;for(var it=this.iterator();it.hasNext();){var e=it.next();var label=e.getLabel();if(label.getLocation(geomIndex,jsts_old.geomgraph.Position.ON)===jsts_old.geom.Location.NONE)
label.setLocation(geomIndex,jsts_old.geomgraph.Position.ON,currLoc);if(label.isArea(geomIndex)){var leftLoc=label.getLocation(geomIndex,jsts_old.geomgraph.Position.LEFT);var rightLoc=label.getLocation(geomIndex,jsts_old.geomgraph.Position.RIGHT);if(rightLoc!==jsts_old.geom.Location.NONE){if(rightLoc!==currLoc)
throw new jsts_old.error.TopologyError('side location conflict',e.getCoordinate());if(leftLoc===jsts_old.geom.Location.NONE){jsts_old.util.Assert.shouldNeverReachHere('found single null side (at '+
e.getCoordinate()+')');}
currLoc=leftLoc;}else{jsts_old.util.Assert.isTrue(label.getLocation(geomIndex,jsts_old.geomgraph.Position.LEFT)===jsts_old.geom.Location.NONE,'found single null side');label.setLocation(geomIndex,jsts_old.geomgraph.Position.RIGHT,currLoc);label.setLocation(geomIndex,jsts_old.geomgraph.Position.LEFT,currLoc);}}}};jsts_old.geomgraph.EdgeEndStar.prototype.findIndex=function(eSearch){this.iterator();for(var i=0;i<this.edgeList.size();i++){var e=this.edgeList.get(i);if(e===eSearch)
return i;}
return-1;};(function(){var Location=jsts_old.geom.Location;var Position=jsts_old.geomgraph.Position;var EdgeEndStar=jsts_old.geomgraph.EdgeEndStar;var Assert=jsts_old.util.Assert;jsts_old.geomgraph.DirectedEdgeStar=function(){jsts_old.geomgraph.EdgeEndStar.call(this);};jsts_old.geomgraph.DirectedEdgeStar.prototype=new EdgeEndStar();jsts_old.geomgraph.DirectedEdgeStar.constructor=jsts_old.geomgraph.DirectedEdgeStar;jsts_old.geomgraph.DirectedEdgeStar.prototype.resultAreaEdgeList=null;jsts_old.geomgraph.DirectedEdgeStar.prototype.label=null;jsts_old.geomgraph.DirectedEdgeStar.prototype.insert=function(ee){var de=ee;this.insertEdgeEnd(de,de);};jsts_old.geomgraph.DirectedEdgeStar.prototype.getLabel=function(){return this.label;};jsts_old.geomgraph.DirectedEdgeStar.prototype.getOutgoingDegree=function(){var degree=0;for(var it=this.iterator();it.hasNext();){var de=it.next();if(de.isInResult())
degree++;}
return degree;};jsts_old.geomgraph.DirectedEdgeStar.prototype.getOutgoingDegree=function(er){var degree=0;for(var it=this.iterator();it.hasNext();){var de=it.next();if(de.getEdgeRing()===er)
degree++;}
return degree;};jsts_old.geomgraph.DirectedEdgeStar.prototype.getRightmostEdge=function(){var edges=this.getEdges();var size=edges.size();if(size<1)
return null;var de0=edges.get(0);if(size==1)
return de0;var deLast=edges.get(size-1);var quad0=de0.getQuadrant();var quad1=deLast.getQuadrant();if(jsts_old.geomgraph.Quadrant.isNorthern(quad0)&&jsts_old.geomgraph.Quadrant.isNorthern(quad1))
return de0;else if(!jsts_old.geomgraph.Quadrant.isNorthern(quad0)&&!jsts_old.geomgraph.Quadrant.isNorthern(quad1))
return deLast;else{var nonHorizontalEdge=null;if(de0.getDy()!=0)
return de0;else if(deLast.getDy()!=0)
return deLast;}
Assert.shouldNeverReachHere('found two horizontal edges incident on node');return null;};jsts_old.geomgraph.DirectedEdgeStar.prototype.computeLabelling=function(geom){EdgeEndStar.prototype.computeLabelling.call(this,geom);this.label=new jsts_old.geomgraph.Label(Location.NONE);for(var it=this.iterator();it.hasNext();){var ee=it.next();var e=ee.getEdge();var eLabel=e.getLabel();for(var i=0;i<2;i++){var eLoc=eLabel.getLocation(i);if(eLoc===Location.INTERIOR||eLoc===Location.BOUNDARY)
this.label.setLocation(i,Location.INTERIOR);}}};jsts_old.geomgraph.DirectedEdgeStar.prototype.mergeSymLabels=function(){for(var it=this.iterator();it.hasNext();){var de=it.next();var label=de.getLabel();label.merge(de.getSym().getLabel());}};jsts_old.geomgraph.DirectedEdgeStar.prototype.updateLabelling=function(nodeLabel){for(var it=this.iterator();it.hasNext();){var de=it.next();var label=de.getLabel();label.setAllLocationsIfNull(0,nodeLabel.getLocation(0));label.setAllLocationsIfNull(1,nodeLabel.getLocation(1));}};jsts_old.geomgraph.DirectedEdgeStar.prototype.getResultAreaEdges=function(){if(this.resultAreaEdgeList!==null)
return this.resultAreaEdgeList;this.resultAreaEdgeList=new javascript.util.ArrayList();for(var it=this.iterator();it.hasNext();){var de=it.next();if(de.isInResult()||de.getSym().isInResult())
this.resultAreaEdgeList.add(de);}
return this.resultAreaEdgeList;};jsts_old.geomgraph.DirectedEdgeStar.prototype.SCANNING_FOR_INCOMING=1;jsts_old.geomgraph.DirectedEdgeStar.prototype.LINKING_TO_OUTGOING=2;jsts_old.geomgraph.DirectedEdgeStar.prototype.linkResultDirectedEdges=function(){this.getResultAreaEdges();var firstOut=null;var incoming=null;var state=this.SCANNING_FOR_INCOMING;for(var i=0;i<this.resultAreaEdgeList.size();i++){var nextOut=this.resultAreaEdgeList.get(i);var nextIn=nextOut.getSym();if(!nextOut.getLabel().isArea())
continue;if(firstOut===null&&nextOut.isInResult())
firstOut=nextOut;switch(state){case this.SCANNING_FOR_INCOMING:if(!nextIn.isInResult())
continue;incoming=nextIn;state=this.LINKING_TO_OUTGOING;break;case this.LINKING_TO_OUTGOING:if(!nextOut.isInResult())
continue;incoming.setNext(nextOut);state=this.SCANNING_FOR_INCOMING;break;}}
if(state===this.LINKING_TO_OUTGOING){if(firstOut===null)
throw new jsts_old.error.TopologyError('no outgoing dirEdge found',this.getCoordinate());Assert.isTrue(firstOut.isInResult(),'unable to link last incoming dirEdge');incoming.setNext(firstOut);}};jsts_old.geomgraph.DirectedEdgeStar.prototype.linkMinimalDirectedEdges=function(er){var firstOut=null;var incoming=null;var state=this.SCANNING_FOR_INCOMING;for(var i=this.resultAreaEdgeList.size()-1;i>=0;i--){var nextOut=this.resultAreaEdgeList.get(i);var nextIn=nextOut.getSym();if(firstOut===null&&nextOut.getEdgeRing()===er)
firstOut=nextOut;switch(state){case this.SCANNING_FOR_INCOMING:if(nextIn.getEdgeRing()!=er)
continue;incoming=nextIn;state=this.LINKING_TO_OUTGOING;break;case this.LINKING_TO_OUTGOING:if(nextOut.getEdgeRing()!==er)
continue;incoming.setNextMin(nextOut);state=this.SCANNING_FOR_INCOMING;break;}}
if(state===this.LINKING_TO_OUTGOING){Assert.isTrue(firstOut!==null,'found null for first outgoing dirEdge');Assert.isTrue(firstOut.getEdgeRing()===er,'unable to link last incoming dirEdge');incoming.setNextMin(firstOut);}};jsts_old.geomgraph.DirectedEdgeStar.prototype.linkAllDirectedEdges=function(){this.getEdges();var prevOut=null;var firstIn=null;for(var i=this.edgeList.size()-1;i>=0;i--){var nextOut=this.edgeList.get(i);var nextIn=nextOut.getSym();if(firstIn===null)
firstIn=nextIn;if(prevOut!==null)
nextIn.setNext(prevOut);prevOut=nextOut;}
firstIn.setNext(prevOut);};jsts_old.geomgraph.DirectedEdgeStar.prototype.findCoveredLineEdges=function(){var startLoc=Location.NONE;for(var it=this.iterator();it.hasNext();){var nextOut=it.next();var nextIn=nextOut.getSym();if(!nextOut.isLineEdge()){if(nextOut.isInResult()){startLoc=Location.INTERIOR;break;}
if(nextIn.isInResult()){startLoc=Location.EXTERIOR;break;}}}
if(startLoc===Location.NONE)
return;var currLoc=startLoc;for(var it=this.iterator();it.hasNext();){var nextOut=it.next();var nextIn=nextOut.getSym();if(nextOut.isLineEdge()){nextOut.getEdge().setCovered(currLoc===Location.INTERIOR);}else{if(nextOut.isInResult())
currLoc=Location.EXTERIOR;if(nextIn.isInResult())
currLoc=Location.INTERIOR;}}};jsts_old.geomgraph.DirectedEdgeStar.prototype.computeDepths=function(de){if(arguments.length===2){this.computeDepths2.apply(this,arguments);return;}
var edgeIndex=this.findIndex(de);var label=de.getLabel();var startDepth=de.getDepth(Position.LEFT);var targetLastDepth=de.getDepth(Position.RIGHT);var nextDepth=this.computeDepths2(edgeIndex+1,this.edgeList.size(),startDepth);var lastDepth=this.computeDepths2(0,edgeIndex,nextDepth);if(lastDepth!=targetLastDepth)
throw new jsts_old.error.TopologyError('depth mismatch at '+
de.getCoordinate());};jsts_old.geomgraph.DirectedEdgeStar.prototype.computeDepths2=function(startIndex,endIndex,startDepth){var currDepth=startDepth;for(var i=startIndex;i<endIndex;i++){var nextDe=this.edgeList.get(i);var label=nextDe.getLabel();nextDe.setEdgeDepths(Position.RIGHT,currDepth);currDepth=nextDe.getDepth(Position.LEFT);}
return currDepth;};})();jsts_old.algorithm.CentroidLine=function(){this.centSum=new jsts_old.geom.Coordinate();};jsts_old.algorithm.CentroidLine.prototype.centSum=null;jsts_old.algorithm.CentroidLine.prototype.totalLength=0.0;jsts_old.algorithm.CentroidLine.prototype.add=function(geom){if(geom instanceof Array){this.add2.apply(this,arguments);return;}
if(geom instanceof jsts_old.geom.LineString){this.add(geom.getCoordinates());}else if(geom instanceof jsts_old.geom.Polygon){var poly=geom;this.add(poly.getExteriorRing().getCoordinates());for(var i=0;i<poly.getNumInteriorRing();i++){this.add(poly.getInteriorRingN(i).getCoordinates());}}else if(geom instanceof jsts_old.geom.GeometryCollection||geom instanceof jsts_old.geom.MultiPoint||geom instanceof jsts_old.geom.MultiLineString||geom instanceof jsts_old.geom.MultiPolygon){var gc=geom;for(var i=0;i<gc.getNumGeometries();i++){this.add(gc.getGeometryN(i));}}};jsts_old.algorithm.CentroidLine.prototype.getCentroid=function(){var cent=new jsts_old.geom.Coordinate();cent.x=this.centSum.x/this.totalLength;cent.y=this.centSum.y/this.totalLength;return cent;};jsts_old.algorithm.CentroidLine.prototype.add2=function(pts){for(var i=0;i<pts.length-1;i++){var segmentLen=pts[i].distance(pts[i+1]);this.totalLength+=segmentLen;var midx=(pts[i].x+pts[i+1].x)/2;this.centSum.x+=segmentLen*midx;var midy=(pts[i].y+pts[i+1].y)/2;this.centSum.y+=segmentLen*midy;}};jsts_old.algorithm.PointLocator=function(boundaryRule){this.boundaryRule=boundaryRule?boundaryRule:jsts_old.algorithm.BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;};jsts_old.algorithm.PointLocator.prototype.boundaryRule=null;jsts_old.algorithm.PointLocator.prototype.isIn=null;jsts_old.algorithm.PointLocator.prototype.numBoundaries=null;jsts_old.algorithm.PointLocator.prototype.intersects=function(p,geom){return this.locate(p,geom)!==jsts_old.geom.Location.EXTERIOR;};jsts_old.algorithm.PointLocator.prototype.locate=function(p,geom){if(geom.isEmpty())
return jsts_old.geom.Location.EXTERIOR;if(geom instanceof jsts_old.geom.Point){return this.locate2(p,geom);}else if(geom instanceof jsts_old.geom.LineString){return this.locate3(p,geom);}else if(geom instanceof jsts_old.geom.Polygon){return this.locate4(p,geom);}
this.isIn=false;this.numBoundaries=0;this.computeLocation(p,geom);if(this.boundaryRule.isInBoundary(this.numBoundaries))
return jsts_old.geom.Location.BOUNDARY;if(this.numBoundaries>0||this.isIn)
return jsts_old.geom.Location.INTERIOR;return jsts_old.geom.Location.EXTERIOR;};jsts_old.algorithm.PointLocator.prototype.computeLocation=function(p,geom){if(geom instanceof jsts_old.geom.Point||geom instanceof jsts_old.geom.LineString||geom instanceof jsts_old.geom.Polygon){this.updateLocationInfo(this.locate(p,geom));}else if(geom instanceof jsts_old.geom.MultiLineString){var ml=geom;for(var i=0;i<ml.getNumGeometries();i++){var l=ml.getGeometryN(i);this.updateLocationInfo(this.locate(p,l));}}else if(geom instanceof jsts_old.geom.MultiPolygon){var mpoly=geom;for(var i=0;i<mpoly.getNumGeometries();i++){var poly=mpoly.getGeometryN(i);this.updateLocationInfo(this.locate(p,poly));}}else if(geom instanceof jsts_old.geom.MultiPoint||geom instanceof jsts_old.geom.GeometryCollection){for(var i=0;i<geom.getNumGeometries();i++){var part=geom.getGeometryN(i);if(part!==geom){this.computeLocation(p,part);}}}};jsts_old.algorithm.PointLocator.prototype.updateLocationInfo=function(loc){if(loc===jsts_old.geom.Location.INTERIOR)
this.isIn=true;if(loc===jsts_old.geom.Location.BOUNDARY)
this.numBoundaries++;};jsts_old.algorithm.PointLocator.prototype.locate2=function(p,pt){var ptCoord=pt.getCoordinate();if(ptCoord.equals2D(p))
return jsts_old.geom.Location.INTERIOR;return jsts_old.geom.Location.EXTERIOR;};jsts_old.algorithm.PointLocator.prototype.locate3=function(p,l){if(!l.getEnvelopeInternal().intersects(p))
return jsts_old.geom.Location.EXTERIOR;var pt=l.getCoordinates();if(!l.isClosed()){if(p.equals(pt[0])||p.equals(pt[pt.length-1])){return jsts_old.geom.Location.BOUNDARY;}}
if(jsts_old.algorithm.CGAlgorithms.isOnLine(p,pt))
return jsts_old.geom.Location.INTERIOR;return jsts_old.geom.Location.EXTERIOR;};jsts_old.algorithm.PointLocator.prototype.locateInPolygonRing=function(p,ring){if(!ring.getEnvelopeInternal().intersects(p))
return jsts_old.geom.Location.EXTERIOR;return jsts_old.algorithm.CGAlgorithms.locatePointInRing(p,ring.getCoordinates());};jsts_old.algorithm.PointLocator.prototype.locate4=function(p,poly){if(poly.isEmpty())
return jsts_old.geom.Location.EXTERIOR;var shell=poly.getExteriorRing();var shellLoc=this.locateInPolygonRing(p,shell);if(shellLoc===jsts_old.geom.Location.EXTERIOR)
return jsts_old.geom.Location.EXTERIOR;if(shellLoc===jsts_old.geom.Location.BOUNDARY)
return jsts_old.geom.Location.BOUNDARY;for(var i=0;i<poly.getNumInteriorRing();i++){var hole=poly.getInteriorRingN(i);var holeLoc=this.locateInPolygonRing(p,hole);if(holeLoc===jsts_old.geom.Location.INTERIOR)
return jsts_old.geom.Location.EXTERIOR;if(holeLoc===jsts_old.geom.Location.BOUNDARY)
return jsts_old.geom.Location.BOUNDARY;}
return jsts_old.geom.Location.INTERIOR;};(function(){var ArrayList=javascript.util.ArrayList;var TreeMap=javascript.util.TreeMap;jsts_old.geomgraph.EdgeList=function(){this.edges=new ArrayList();this.ocaMap=new TreeMap();};jsts_old.geomgraph.EdgeList.prototype.edges=null;jsts_old.geomgraph.EdgeList.prototype.ocaMap=null;jsts_old.geomgraph.EdgeList.prototype.add=function(e){this.edges.add(e);var oca=new jsts_old.noding.OrientedCoordinateArray(e.getCoordinates());this.ocaMap.put(oca,e);};jsts_old.geomgraph.EdgeList.prototype.addAll=function(edgeColl){for(var i=edgeColl.iterator();i.hasNext();){this.add(i.next());}};jsts_old.geomgraph.EdgeList.prototype.getEdges=function(){return this.edges;};jsts_old.geomgraph.EdgeList.prototype.findEqualEdge=function(e){var oca=new jsts_old.noding.OrientedCoordinateArray(e.getCoordinates());var matchEdge=this.ocaMap.get(oca);return matchEdge;};jsts_old.geomgraph.EdgeList.prototype.getEdges=function(){return this.edges;};jsts_old.geomgraph.EdgeList.prototype.iterator=function(){return this.edges.iterator();};jsts_old.geomgraph.EdgeList.prototype.get=function(i){return this.edges.get(i);};jsts_old.geomgraph.EdgeList.prototype.findEdgeIndex=function(e){for(var i=0;i<this.edges.size();i++){if(this.edges.get(i).equals(e))
return i;}
return-1;};})();(function(){var Location=jsts_old.geom.Location;var ArrayList=javascript.util.ArrayList;var TreeMap=javascript.util.TreeMap;jsts_old.geomgraph.NodeMap=function(nodeFactory){this.nodeMap=new TreeMap();this.nodeFact=nodeFactory;};jsts_old.geomgraph.NodeMap.prototype.nodeMap=null;jsts_old.geomgraph.NodeMap.prototype.nodeFact=null;jsts_old.geomgraph.NodeMap.prototype.addNode=function(arg){var node,coord;if(arg instanceof jsts_old.geom.Coordinate){coord=arg;node=this.nodeMap.get(coord);if(node===null){node=this.nodeFact.createNode(coord);this.nodeMap.put(coord,node);}
return node;}else if(arg instanceof jsts_old.geomgraph.Node){var n=arg;coord=n.getCoordinate();node=this.nodeMap.get(coord);if(node===null){this.nodeMap.put(coord,n);return n;}
node.mergeLabel(n);return node;}};jsts_old.geomgraph.NodeMap.prototype.add=function(e){var p=e.getCoordinate();var n=this.addNode(p);n.add(e);};jsts_old.geomgraph.NodeMap.prototype.find=function(coord){return this.nodeMap.get(coord);};jsts_old.geomgraph.NodeMap.prototype.values=function(){return this.nodeMap.values();};jsts_old.geomgraph.NodeMap.prototype.iterator=function(){return this.values().iterator();};jsts_old.geomgraph.NodeMap.prototype.getBoundaryNodes=function(geomIndex){var bdyNodes=new ArrayList();for(var i=this.iterator();i.hasNext();){var node=i.next();if(node.getLabel().getLocation(geomIndex)===Location.BOUNDARY){bdyNodes.add(node);}}
return bdyNodes;};})();(function(){var ArrayList=javascript.util.ArrayList;jsts_old.geomgraph.PlanarGraph=function(nodeFactory){this.edges=new ArrayList();this.edgeEndList=new ArrayList();this.nodes=new jsts_old.geomgraph.NodeMap(nodeFactory||new jsts_old.geomgraph.NodeFactory());};jsts_old.geomgraph.PlanarGraph.prototype.edges=null;jsts_old.geomgraph.PlanarGraph.prototype.nodes=null;jsts_old.geomgraph.PlanarGraph.prototype.edgeEndList=null;jsts_old.geomgraph.PlanarGraph.linkResultDirectedEdges=function(nodes){for(var nodeit=nodes.iterator();nodeit.hasNext();){var node=nodeit.next();node.getEdges().linkResultDirectedEdges();}};jsts_old.geomgraph.PlanarGraph.prototype.getEdgeIterator=function(){return this.edges.iterator();};jsts_old.geomgraph.PlanarGraph.prototype.getEdgeEnds=function(){return this.edgeEndList;};jsts_old.geomgraph.PlanarGraph.prototype.isBoundaryNode=function(geomIndex,coord){var node=this.nodes.find(coord);if(node===null)
return false;var label=node.getLabel();if(label!==null&&label.getLocation(geomIndex)===jsts_old.geom.Location.BOUNDARY)
return true;return false;};jsts_old.geomgraph.PlanarGraph.prototype.insertEdge=function(e){this.edges.add(e);};jsts_old.geomgraph.PlanarGraph.prototype.add=function(e){this.nodes.add(e);this.edgeEndList.add(e);};jsts_old.geomgraph.PlanarGraph.prototype.getNodeIterator=function(){return this.nodes.iterator();};jsts_old.geomgraph.PlanarGraph.prototype.getNodes=function(){return this.nodes.values();};jsts_old.geomgraph.PlanarGraph.prototype.addNode=function(node){return this.nodes.addNode(node);};jsts_old.geomgraph.PlanarGraph.prototype.addEdges=function(edgesToAdd){for(var it=edgesToAdd.iterator();it.hasNext();){var e=it.next();this.edges.add(e);var de1=new jsts_old.geomgraph.DirectedEdge(e,true);var de2=new jsts_old.geomgraph.DirectedEdge(e,false);de1.setSym(de2);de2.setSym(de1);this.add(de1);this.add(de2);}};jsts_old.geomgraph.PlanarGraph.prototype.linkResultDirectedEdges=function(){for(var nodeit=this.nodes.iterator();nodeit.hasNext();){var node=nodeit.next();node.getEdges().linkResultDirectedEdges();}};jsts_old.geomgraph.PlanarGraph.prototype.findEdgeInSameDirection=function(p0,p1){var i=0,il=this.edges.size(),e,eCoord;for(i;i<il;i++){e=this.edges.get(i);eCoord=e.getCoordinates();if(this.matchInSameDirection(p0,p1,eCoord[0],eCoord[1])){return e;}
if(this.matchInSameDirection(p0,p1,eCoord[eCoord.length-1],eCoord[eCoord.length-2])){return e;}}
return null;};jsts_old.geomgraph.PlanarGraph.prototype.matchInSameDirection=function(p0,p1,ep0,ep1){if(!p0.equals(ep0)){return false;}
if(jsts_old.algorithm.CGAlgorithms.computeOrientation(p0,p1,ep1)===jsts_old.algorithm.CGAlgorithms.COLLINEAR&&jsts_old.geomgraph.Quadrant.quadrant(p0,p1)===jsts_old.geomgraph.Quadrant.quadrant(ep0,ep1)){return true;}
return false;};jsts_old.geomgraph.PlanarGraph.prototype.findEdgeEnd=function(e){for(var i=this.getEdgeEnds().iterator();i.hasNext();){var ee=i.next();if(ee.getEdge()===e){return ee;}}
return null;};})();jsts_old.algorithm.LineIntersector=function(){this.inputLines=[[],[]];this.intPt=[null,null];this.pa=this.intPt[0];this.pb=this.intPt[1];this.result=jsts_old.algorithm.LineIntersector.NO_INTERSECTION;};jsts_old.algorithm.LineIntersector.NO_INTERSECTION=0;jsts_old.algorithm.LineIntersector.POINT_INTERSECTION=1;jsts_old.algorithm.LineIntersector.COLLINEAR_INTERSECTION=2;jsts_old.algorithm.LineIntersector.prototype.setPrecisionModel=function(precisionModel){this.precisionModel=precisionModel;};jsts_old.algorithm.LineIntersector.prototype.getEndpoint=function(segmentIndex,ptIndex){return this.inputLines[segmentIndex][ptIndex];};jsts_old.algorithm.LineIntersector.computeEdgeDistance=function(p,p0,p1){var dx=Math.abs(p1.x-p0.x);var dy=Math.abs(p1.y-p0.y);var dist=-1.0;if(p.equals(p0)){dist=0.0;}else if(p.equals(p1)){if(dx>dy){dist=dx;}else{dist=dy;}}else{var pdx=Math.abs(p.x-p0.x);var pdy=Math.abs(p.y-p0.y);if(dx>dy){dist=pdx;}else{dist=pdy;}
if(dist===0.0&&!p.equals(p0)){dist=Math.max(pdx,pdy);}}
if(dist===0.0&&!p.equals(p0)){throw new jsts_old.error.IllegalArgumentError('Bad distance calculation');}
return dist;};jsts_old.algorithm.LineIntersector.nonRobustComputeEdgeDistance=function(p,p1,p2){var dx=p.x-p1.x;var dy=p.y-p1.y;var dist=Math.sqrt(dx*dx+dy*dy);if(!(dist===0.0&&!p.equals(p1))){throw new jsts_old.error.IllegalArgumentError('Invalid distance calculation');}
return dist;};jsts_old.algorithm.LineIntersector.prototype.result=null;jsts_old.algorithm.LineIntersector.prototype.inputLines=null;jsts_old.algorithm.LineIntersector.prototype.intPt=null;jsts_old.algorithm.LineIntersector.prototype.intLineIndex=null;jsts_old.algorithm.LineIntersector.prototype._isProper=null;jsts_old.algorithm.LineIntersector.prototype.pa=null;jsts_old.algorithm.LineIntersector.prototype.pb=null;jsts_old.algorithm.LineIntersector.prototype.precisionModel=null;jsts_old.algorithm.LineIntersector.prototype.computeIntersection=function(p,p1,p2){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.algorithm.LineIntersector.prototype.isCollinear=function(){return this.result===jsts_old.algorithm.LineIntersector.COLLINEAR_INTERSECTION;};jsts_old.algorithm.LineIntersector.prototype.computeIntersection=function(p1,p2,p3,p4){this.inputLines[0][0]=p1;this.inputLines[0][1]=p2;this.inputLines[1][0]=p3;this.inputLines[1][1]=p4;this.result=this.computeIntersect(p1,p2,p3,p4);};jsts_old.algorithm.LineIntersector.prototype.computeIntersect=function(p1,p2,q1,q2){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.algorithm.LineIntersector.prototype.isEndPoint=function(){return this.hasIntersection()&&!this._isProper;};jsts_old.algorithm.LineIntersector.prototype.hasIntersection=function(){return this.result!==jsts_old.algorithm.LineIntersector.NO_INTERSECTION;};jsts_old.algorithm.LineIntersector.prototype.getIntersectionNum=function(){return this.result;};jsts_old.algorithm.LineIntersector.prototype.getIntersection=function(intIndex){return this.intPt[intIndex];};jsts_old.algorithm.LineIntersector.prototype.computeIntLineIndex=function(){if(this.intLineIndex===null){this.intLineIndex=[[],[]];this.computeIntLineIndex(0);this.computeIntLineIndex(1);}};jsts_old.algorithm.LineIntersector.prototype.isIntersection=function(pt){var i;for(i=0;i<this.result;i++){if(this.intPt[i].equals2D(pt)){return true;}}
return false;};jsts_old.algorithm.LineIntersector.prototype.isInteriorIntersection=function(){if(arguments.length===1){return this.isInteriorIntersection2.apply(this,arguments);}
if(this.isInteriorIntersection(0)){return true;}
if(this.isInteriorIntersection(1)){return true;}
return false;};jsts_old.algorithm.LineIntersector.prototype.isInteriorIntersection2=function(inputLineIndex){var i;for(i=0;i<this.result;i++){if(!(this.intPt[i].equals2D(this.inputLines[inputLineIndex][0])||this.intPt[i].equals2D(this.inputLines[inputLineIndex][1]))){return true;}}
return false;};jsts_old.algorithm.LineIntersector.prototype.isProper=function(){return this.hasIntersection()&&this._isProper;};jsts_old.algorithm.LineIntersector.prototype.getIntersectionAlongSegment=function(segmentIndex,intIndex){this.computeIntLineIndex();return this.intPt[intLineIndex[segmentIndex][intIndex]];};jsts_old.algorithm.LineIntersector.prototype.getIndexAlongSegment=function(segmentIndex,intIndex){this.computeIntLineIndex();return this.intLineIndex[segmentIndex][intIndex];};jsts_old.algorithm.LineIntersector.prototype.computeIntLineIndex=function(segmentIndex){var dist0=this.getEdgeDistance(segmentIndex,0);var dist1=this.getEdgeDistance(segmentIndex,1);if(dist0>dist1){this.intLineIndex[segmentIndex][0]=0;this.intLineIndex[segmentIndex][1]=1;}else{this.intLineIndex[segmentIndex][0]=1;this.intLineIndex[segmentIndex][1]=0;}};jsts_old.algorithm.LineIntersector.prototype.getEdgeDistance=function(segmentIndex,intIndex){var dist=jsts_old.algorithm.LineIntersector.computeEdgeDistance(this.intPt[intIndex],this.inputLines[segmentIndex][0],this.inputLines[segmentIndex][1]);return dist;};jsts_old.algorithm.RobustLineIntersector=function(){jsts_old.algorithm.RobustLineIntersector.prototype.constructor.call(this);};jsts_old.algorithm.RobustLineIntersector.prototype=new jsts_old.algorithm.LineIntersector();jsts_old.algorithm.RobustLineIntersector.prototype.computeIntersection=function(p,p1,p2){if(arguments.length===4){jsts_old.algorithm.LineIntersector.prototype.computeIntersection.apply(this,arguments);return;}
this._isProper=false;if(jsts_old.geom.Envelope.intersects(p1,p2,p)){if((jsts_old.algorithm.CGAlgorithms.orientationIndex(p1,p2,p)===0)&&(jsts_old.algorithm.CGAlgorithms.orientationIndex(p2,p1,p)===0)){this._isProper=true;if(p.equals(p1)||p.equals(p2)){this._isProper=false;}
this.result=jsts_old.algorithm.LineIntersector.POINT_INTERSECTION;return;}}
this.result=jsts_old.algorithm.LineIntersector.NO_INTERSECTION;};jsts_old.algorithm.RobustLineIntersector.prototype.computeIntersect=function(p1,p2,q1,q2){this._isProper=false;if(!jsts_old.geom.Envelope.intersects(p1,p2,q1,q2)){return jsts_old.algorithm.LineIntersector.NO_INTERSECTION;}
var Pq1=jsts_old.algorithm.CGAlgorithms.orientationIndex(p1,p2,q1);var Pq2=jsts_old.algorithm.CGAlgorithms.orientationIndex(p1,p2,q2);if((Pq1>0&&Pq2>0)||(Pq1<0&&Pq2<0)){return jsts_old.algorithm.LineIntersector.NO_INTERSECTION;}
var Qp1=jsts_old.algorithm.CGAlgorithms.orientationIndex(q1,q2,p1);var Qp2=jsts_old.algorithm.CGAlgorithms.orientationIndex(q1,q2,p2);if((Qp1>0&&Qp2>0)||(Qp1<0&&Qp2<0)){return jsts_old.algorithm.LineIntersector.NO_INTERSECTION;}
var collinear=Pq1===0&&Pq2===0&&Qp1===0&&Qp2===0;if(collinear){return this.computeCollinearIntersection(p1,p2,q1,q2);}
if(Pq1===0||Pq2===0||Qp1===0||Qp2===0){this._isProper=false;if(p1.equals2D(q1)||p1.equals2D(q2)){this.intPt[0]=p1;}else if(p2.equals2D(q1)||p2.equals2D(q2)){this.intPt[0]=p2;}
else if(Pq1===0){this.intPt[0]=new jsts_old.geom.Coordinate(q1);}else if(Pq2===0){this.intPt[0]=new jsts_old.geom.Coordinate(q2);}else if(Qp1===0){this.intPt[0]=new jsts_old.geom.Coordinate(p1);}else if(Qp2===0){this.intPt[0]=new jsts_old.geom.Coordinate(p2);}}else{this._isProper=true;this.intPt[0]=this.intersection(p1,p2,q1,q2);}
return jsts_old.algorithm.LineIntersector.POINT_INTERSECTION;};jsts_old.algorithm.RobustLineIntersector.prototype.computeCollinearIntersection=function(p1,p2,q1,q2){var p1q1p2=jsts_old.geom.Envelope.intersects(p1,p2,q1);var p1q2p2=jsts_old.geom.Envelope.intersects(p1,p2,q2);var q1p1q2=jsts_old.geom.Envelope.intersects(q1,q2,p1);var q1p2q2=jsts_old.geom.Envelope.intersects(q1,q2,p2);if(p1q1p2&&p1q2p2){this.intPt[0]=q1;this.intPt[1]=q2;return jsts_old.algorithm.LineIntersector.COLLINEAR_INTERSECTION;}
if(q1p1q2&&q1p2q2){this.intPt[0]=p1;this.intPt[1]=p2;return jsts_old.algorithm.LineIntersector.COLLINEAR_INTERSECTION;}
if(p1q1p2&&q1p1q2){this.intPt[0]=q1;this.intPt[1]=p1;return q1.equals(p1)&&!p1q2p2&&!q1p2q2?jsts_old.algorithm.LineIntersector.POINT_INTERSECTION:jsts_old.algorithm.LineIntersector.COLLINEAR_INTERSECTION;}
if(p1q1p2&&q1p2q2){this.intPt[0]=q1;this.intPt[1]=p2;return q1.equals(p2)&&!p1q2p2&&!q1p1q2?jsts_old.algorithm.LineIntersector.POINT_INTERSECTION:jsts_old.algorithm.LineIntersector.COLLINEAR_INTERSECTION;}
if(p1q2p2&&q1p1q2){this.intPt[0]=q2;this.intPt[1]=p1;return q2.equals(p1)&&!p1q1p2&&!q1p2q2?jsts_old.algorithm.LineIntersector.POINT_INTERSECTION:jsts_old.algorithm.LineIntersector.COLLINEAR_INTERSECTION;}
if(p1q2p2&&q1p2q2){this.intPt[0]=q2;this.intPt[1]=p2;return q2.equals(p2)&&!p1q1p2&&!q1p1q2?jsts_old.algorithm.LineIntersector.POINT_INTERSECTION:jsts_old.algorithm.LineIntersector.COLLINEAR_INTERSECTION;}
return jsts_old.algorithm.LineIntersector.NO_INTERSECTION;};jsts_old.algorithm.RobustLineIntersector.prototype.intersection=function(p1,p2,q1,q2){var intPt=this.intersectionWithNormalization(p1,p2,q1,q2);if(!this.isInSegmentEnvelopes(intPt)){intPt=jsts_old.algorithm.CentralEndpointIntersector.getIntersection(p1,p2,q1,q2);}
if(this.precisionModel!==null){this.precisionModel.makePrecise(intPt);}
return intPt;};jsts_old.algorithm.RobustLineIntersector.prototype.intersectionWithNormalization=function(p1,p2,q1,q2){var n1=new jsts_old.geom.Coordinate(p1);var n2=new jsts_old.geom.Coordinate(p2);var n3=new jsts_old.geom.Coordinate(q1);var n4=new jsts_old.geom.Coordinate(q2);var normPt=new jsts_old.geom.Coordinate();this.normalizeToEnvCentre(n1,n2,n3,n4,normPt);var intPt=this.safeHCoordinateIntersection(n1,n2,n3,n4);intPt.x+=normPt.x;intPt.y+=normPt.y;return intPt;};jsts_old.algorithm.RobustLineIntersector.prototype.safeHCoordinateIntersection=function(p1,p2,q1,q2){var intPt=null;try{intPt=jsts_old.algorithm.HCoordinate.intersection(p1,p2,q1,q2);}catch(e){if(e instanceof jsts_old.error.NotRepresentableError){intPt=jsts_old.algorithm.CentralEndpointIntersector.getIntersection(p1,p2,q1,q2);}else{throw e;}}
return intPt;};jsts_old.algorithm.RobustLineIntersector.prototype.normalizeToMinimum=function(n1,n2,n3,n4,normPt){normPt.x=this.smallestInAbsValue(n1.x,n2.x,n3.x,n4.x);normPt.y=this.smallestInAbsValue(n1.y,n2.y,n3.y,n4.y);n1.x-=normPt.x;n1.y-=normPt.y;n2.x-=normPt.x;n2.y-=normPt.y;n3.x-=normPt.x;n3.y-=normPt.y;n4.x-=normPt.x;n4.y-=normPt.y;};jsts_old.algorithm.RobustLineIntersector.prototype.normalizeToEnvCentre=function(n00,n01,n10,n11,normPt){var minX0=n00.x<n01.x?n00.x:n01.x;var minY0=n00.y<n01.y?n00.y:n01.y;var maxX0=n00.x>n01.x?n00.x:n01.x;var maxY0=n00.y>n01.y?n00.y:n01.y;var minX1=n10.x<n11.x?n10.x:n11.x;var minY1=n10.y<n11.y?n10.y:n11.y;var maxX1=n10.x>n11.x?n10.x:n11.x;var maxY1=n10.y>n11.y?n10.y:n11.y;var intMinX=minX0>minX1?minX0:minX1;var intMaxX=maxX0<maxX1?maxX0:maxX1;var intMinY=minY0>minY1?minY0:minY1;var intMaxY=maxY0<maxY1?maxY0:maxY1;var intMidX=(intMinX+intMaxX)/2.0;var intMidY=(intMinY+intMaxY)/2.0;normPt.x=intMidX;normPt.y=intMidY;n00.x-=normPt.x;n00.y-=normPt.y;n01.x-=normPt.x;n01.y-=normPt.y;n10.x-=normPt.x;n10.y-=normPt.y;n11.x-=normPt.x;n11.y-=normPt.y;};jsts_old.algorithm.RobustLineIntersector.prototype.smallestInAbsValue=function(x1,x2,x3,x4){var x=x1;var xabs=Math.abs(x);if(Math.abs(x2)<xabs){x=x2;xabs=Math.abs(x2);}
if(Math.abs(x3)<xabs){x=x3;xabs=Math.abs(x3);}
if(Math.abs(x4)<xabs){x=x4;}
return x;};jsts_old.algorithm.RobustLineIntersector.prototype.isInSegmentEnvelopes=function(intPt){var env0=new jsts_old.geom.Envelope(this.inputLines[0][0],this.inputLines[0][1]);var env1=new jsts_old.geom.Envelope(this.inputLines[1][0],this.inputLines[1][1]);return env0.contains(intPt)&&env1.contains(intPt);};jsts_old.noding.SegmentIntersector=function(){};jsts_old.noding.SegmentIntersector.prototype.processIntersections=jsts_old.abstractFunc;jsts_old.noding.SegmentIntersector.prototype.isDone=jsts_old.abstractFunc;(function(){var SegmentIntersector=jsts_old.noding.SegmentIntersector;var ArrayList=javascript.util.ArrayList;jsts_old.noding.InteriorIntersectionFinder=function(li){this.li=li;this.intersections=new ArrayList();this.interiorIntersection=null;};jsts_old.noding.InteriorIntersectionFinder.prototype=new SegmentIntersector();jsts_old.noding.InteriorIntersectionFinder.constructor=jsts_old.noding.InteriorIntersectionFinder;jsts_old.noding.InteriorIntersectionFinder.prototype.findAllIntersections=false;jsts_old.noding.InteriorIntersectionFinder.prototype.isCheckEndSegmentsOnly=false;jsts_old.noding.InteriorIntersectionFinder.prototype.li=null;jsts_old.noding.InteriorIntersectionFinder.prototype.interiorIntersection=null;jsts_old.noding.InteriorIntersectionFinder.prototype.intSegments=null;jsts_old.noding.InteriorIntersectionFinder.prototype.intersections=null;jsts_old.noding.InteriorIntersectionFinder.prototype.setFindAllIntersections=function(findAllIntersections){this.findAllIntersections=findAllIntersections;};jsts_old.noding.InteriorIntersectionFinder.prototype.getIntersections=function(){return intersections;};jsts_old.noding.InteriorIntersectionFinder.prototype.setCheckEndSegmentsOnly=function(isCheckEndSegmentsOnly){this.isCheckEndSegmentsOnly=isCheckEndSegmentsOnly;}
jsts_old.noding.InteriorIntersectionFinder.prototype.hasIntersection=function(){return this.interiorIntersection!=null;};jsts_old.noding.InteriorIntersectionFinder.prototype.getInteriorIntersection=function(){return this.interiorIntersection;};jsts_old.noding.InteriorIntersectionFinder.prototype.getIntersectionSegments=function(){return this.intSegments;};jsts_old.noding.InteriorIntersectionFinder.prototype.processIntersections=function(e0,segIndex0,e1,segIndex1){if(this.hasIntersection())
return;if(e0==e1&&segIndex0==segIndex1)
return;if(this.isCheckEndSegmentsOnly){var isEndSegPresent=this.isEndSegment(e0,segIndex0)||isEndSegment(e1,segIndex1);if(!isEndSegPresent)
return;}
var p00=e0.getCoordinates()[segIndex0];var p01=e0.getCoordinates()[segIndex0+1];var p10=e1.getCoordinates()[segIndex1];var p11=e1.getCoordinates()[segIndex1+1];this.li.computeIntersection(p00,p01,p10,p11);if(this.li.hasIntersection()){if(this.li.isInteriorIntersection()){this.intSegments=[];this.intSegments[0]=p00;this.intSegments[1]=p01;this.intSegments[2]=p10;this.intSegments[3]=p11;this.interiorIntersection=li.getIntersection(0);this.intersections.add(interiorIntersection);}}};jsts_old.noding.InteriorIntersectionFinder.prototype.isEndSegment=function(segStr,index){if(index==0)
return true;if(index>=segStr.size()-2)
return true;return false;};jsts_old.noding.InteriorIntersectionFinder.prototype.isDone=function(){if(this.findAllIntersections)
return false;return this.interiorIntersection!=null;};})();(function(){jsts_old.noding.Noder=function(){};jsts_old.noding.Noder.prototype.computeNodes=jsts_old.abstractFunc;jsts_old.noding.Noder.prototype.getNodedSubstrings=jsts_old.abstractFunc;})();(function(){var Noder=jsts_old.noding.Noder;jsts_old.noding.SinglePassNoder=function(){};jsts_old.noding.SinglePassNoder.prototype=new Noder();jsts_old.noding.SinglePassNoder.constructor=jsts_old.noding.SinglePassNoder;jsts_old.noding.SinglePassNoder.prototype.segInt=null;jsts_old.noding.SinglePassNoder.prototype.setSegmentIntersector=function(segInt){this.segInt=segInt;};})();jsts_old.index.SpatialIndex=function(){};jsts_old.index.SpatialIndex.prototype.insert=function(itemEnv,item){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.index.SpatialIndex.prototype.query=function(searchEnv,visitor){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.index.SpatialIndex.prototype.remove=function(itemEnv,item){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.index.strtree.AbstractSTRtree=function(nodeCapacity){if(nodeCapacity===undefined)
return;this.itemBoundables=[];jsts_old.util.Assert.isTrue(nodeCapacity>1,'Node capacity must be greater than 1');this.nodeCapacity=nodeCapacity;};jsts_old.index.strtree.AbstractSTRtree.IntersectsOp=function(){};jsts_old.index.strtree.AbstractSTRtree.IntersectsOp.prototype.intersects=function(aBounds,bBounds){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.index.strtree.AbstractSTRtree.prototype.root=null;jsts_old.index.strtree.AbstractSTRtree.prototype.built=false;jsts_old.index.strtree.AbstractSTRtree.prototype.itemBoundables=null;jsts_old.index.strtree.AbstractSTRtree.prototype.nodeCapacity=null;jsts_old.index.strtree.AbstractSTRtree.prototype.build=function(){jsts_old.util.Assert.isTrue(!this.built);this.root=this.itemBoundables.length===0?this.createNode(0):this.createHigherLevels(this.itemBoundables,-1);this.built=true;};jsts_old.index.strtree.AbstractSTRtree.prototype.createNode=function(level){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.index.strtree.AbstractSTRtree.prototype.createParentBoundables=function(childBoundables,newLevel){jsts_old.util.Assert.isTrue(!(childBoundables.length===0));var parentBoundables=[];parentBoundables.push(this.createNode(newLevel));var sortedChildBoundables=[];for(var i=0;i<childBoundables.length;i++){sortedChildBoundables.push(childBoundables[i]);}
sortedChildBoundables.sort(this.getComparator());for(var i=0;i<sortedChildBoundables.length;i++){var childBoundable=sortedChildBoundables[i];if(this.lastNode(parentBoundables).getChildBoundables().length===this.getNodeCapacity()){parentBoundables.push(this.createNode(newLevel));}
this.lastNode(parentBoundables).addChildBoundable(childBoundable);}
return parentBoundables;};jsts_old.index.strtree.AbstractSTRtree.prototype.lastNode=function(nodes){return nodes[nodes.length-1];};jsts_old.index.strtree.AbstractSTRtree.prototype.compareDoubles=function(a,b){return a>b?1:a<b?-1:0;};jsts_old.index.strtree.AbstractSTRtree.prototype.createHigherLevels=function(boundablesOfALevel,level){jsts_old.util.Assert.isTrue(!(boundablesOfALevel.length===0));var parentBoundables=this.createParentBoundables(boundablesOfALevel,level+1);if(parentBoundables.length===1){return parentBoundables[0];}
return this.createHigherLevels(parentBoundables,level+1);};jsts_old.index.strtree.AbstractSTRtree.prototype.getRoot=function(){if(!this.built)
this.build();return this.root;};jsts_old.index.strtree.AbstractSTRtree.prototype.getNodeCapacity=function(){return this.nodeCapacity;};jsts_old.index.strtree.AbstractSTRtree.prototype.size=function(){if(arguments.length===1){return this.size2(arguments[0]);}
if(!this.built){this.build();}
if(this.itemBoundables.length===0){return 0;}
return this.size2(root);};jsts_old.index.strtree.AbstractSTRtree.prototype.size2=function(node){var size=0;var childBoundables=node.getChildBoundables();for(var i=0;i<childBoundables.length;i++){var childBoundable=childBoundables[i];if(childBoundable instanceof jsts_old.index.strtree.AbstractNode){size+=this.size(childBoundable);}else if(childBoundable instanceof jsts_old.index.strtree.ItemBoundable){size+=1;}}
return size;};jsts_old.index.strtree.AbstractSTRtree.prototype.depth=function(){if(arguments.length===1){return this.depth2(arguments[0]);}
if(!this.built){this.build();}
if(this.itemBoundables.length===0){return 0;}
return this.depth2(root);};jsts_old.index.strtree.AbstractSTRtree.prototype.depth2=function(){var maxChildDepth=0;var childBoundables=node.getChildBoundables();for(var i=0;i<childBoundables.length;i++){var childBoundable=childBoundables[i];if(childBoundable instanceof jsts_old.index.strtree.AbstractNode){var childDepth=this.depth(childBoundable);if(childDepth>maxChildDepth)
maxChildDepth=childDepth;}}
return maxChildDepth+1;};jsts_old.index.strtree.AbstractSTRtree.prototype.insert=function(bounds,item){jsts_old.util.Assert.isTrue(!this.built,'Cannot insert items into an STR packed R-tree after it has been built.');this.itemBoundables.push(new jsts_old.index.strtree.ItemBoundable(bounds,item));};jsts_old.index.strtree.AbstractSTRtree.prototype.query=function(searchBounds){if(arguments.length>1){this.query2.apply(this,arguments);}
if(!this.built){this.build();}
var matches=[];if(this.itemBoundables.length===0){jsts_old.util.Assert.isTrue(this.root.getBounds()===null);return matches;}
if(this.getIntersectsOp().intersects(this.root.getBounds(),searchBounds)){this.query3(searchBounds,this.root,matches);}
return matches;};jsts_old.index.strtree.AbstractSTRtree.prototype.query2=function(searchBounds,visitor){if(arguments.length>2){this.query3.apply(this,arguments);}
if(!this.built){this.build();}
if(this.itemBoundables.length===0){jsts_old.util.Assert.isTrue(this.root.getBounds()===null);}
if(this.getIntersectsOp().intersects(this.root.getBounds(),searchBounds)){this.query4(searchBounds,this.root,visitor);}};jsts_old.index.strtree.AbstractSTRtree.prototype.query3=function(searchBounds,node,matches){if(!(arguments[2]instanceof Array)){this.query4.apply(this,arguments);}
var childBoundables=node.getChildBoundables();for(var i=0;i<childBoundables.length;i++){var childBoundable=childBoundables[i];if(!this.getIntersectsOp().intersects(childBoundable.getBounds(),searchBounds)){continue;}
if(childBoundable instanceof jsts_old.index.strtree.AbstractNode){this.query3(searchBounds,childBoundable,matches);}else if(childBoundable instanceof jsts_old.index.strtree.ItemBoundable){matches.push(childBoundable.getItem());}else{jsts_old.util.Assert.shouldNeverReachHere();}}};jsts_old.index.strtree.AbstractSTRtree.prototype.query4=function(searchBounds,node,visitor){var childBoundables=node.getChildBoundables();for(var i=0;i<childBoundables.length;i++){var childBoundable=childBoundables[i];if(!this.getIntersectsOp().intersects(childBoundable.getBounds(),searchBounds)){continue;}
if(childBoundable instanceof jsts_old.index.strtree.AbstractNode){this.query4(searchBounds,childBoundable,visitor);}else if(childBoundable instanceof jsts_old.index.strtree.ItemBoundable){visitor.visitItem(childBoundable.getItem());}else{jsts_old.util.Assert.shouldNeverReachHere();}}};jsts_old.index.strtree.AbstractSTRtree.prototype.getIntersectsOp=function(){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.index.strtree.AbstractSTRtree.prototype.itemsTree=function(){if(arguments.length===1){return this.itemsTree2.apply(this,arguments);}
if(!this.built){this.build();}
var valuesTree=this.itemsTree2(this.root);if(valuesTree===null)
return[];return valuesTree;};jsts_old.index.strtree.AbstractSTRtree.prototype.itemsTree2=function(node){var valuesTreeForNode=[];var childBoundables=node.getChildBoundables();for(var i=0;i<childBoundables.length;i++){var childBoundable=childBoundables[i];if(childBoundable instanceof jsts_old.index.strtree.AbstractNode){var valuesTreeForChild=this.itemsTree(childBoundable);if(valuesTreeForChild!=null)
valuesTreeForNode.push(valuesTreeForChild);}else if(childBoundable instanceof jsts_old.index.strtree.ItemBoundable){valuesTreeForNode.push(childBoundable.getItem());}else{jsts_old.util.Assert.shouldNeverReachHere();}}
if(valuesTreeForNode.length<=0)
return null;return valuesTreeForNode;};jsts_old.index.strtree.AbstractSTRtree.prototype.remove=function(searchBounds,item){if(!this.built){this.build();}
if(this.itemBoundables.length===0){jsts_old.util.Assert.isTrue(this.root.getBounds()==null);}
if(this.getIntersectsOp().intersects(this.root.getBounds(),searchBounds)){return this.remove2(searchBounds,this.root,item);}
return false;};jsts_old.index.strtree.AbstractSTRtree.prototype.remove2=function(searchBounds,node,item){var found=this.removeItem(node,item);if(found)
return true;var childToPrune=null;var childBoundables=node.getChildBoundables();for(var i=0;i<childBoundables.length;i++){var childBoundable=childBoundables[i];if(!this.getIntersectsOp().intersects(childBoundable.getBounds(),searchBounds)){continue;}
if(childBoundable instanceof jsts_old.index.strtree.AbstractNode){found=this.remove(searchBounds,childBoundable,item);if(found){childToPrune=childBoundable;break;}}}
if(childToPrune!=null){if(childToPrune.getChildBoundables().length===0){childBoundables.splice(childBoundables.indexOf(childToPrune),1);}}
return found;};jsts_old.index.strtree.AbstractSTRtree.prototype.removeItem=function(node,item){var childToRemove=null;var childBoundables=node.getChildBoundables();for(var i=0;i<childBoundables.length;i++){var childBoundable=childBoundables[i];if(childBoundable instanceof jsts_old.index.strtree.ItemBoundable){if(childBoundable.getItem()===item)
childToRemove=childBoundable;}}
if(childToRemove!==null){childBoundables.splice(childBoundables.indexOf(childToRemove),1);return true;}
return false;};jsts_old.index.strtree.AbstractSTRtree.prototype.boundablesAtLevel=function(level){if(arguments.length>1){this.boundablesAtLevel2.apply(this,arguments);return;}
var boundables=[];this.boundablesAtLevel2(level,this.root,boundables);return boundables;};jsts_old.index.strtree.AbstractSTRtree.prototype.boundablesAtLevel2=function(level,top,boundables){jsts_old.util.Assert.isTrue(level>-2);if(top.getLevel()===level){boundables.add(top);return;}
var childBoundables=node.getChildBoundables();for(var i=0;i<childBoundables.length;i++){var boundable=childBoundables[i];if(boundable instanceof jsts_old.index.strtree.AbstractNode){this.boundablesAtLevel(level,boundable,boundables);}else{jsts_old.util.Assert.isTrue(boundable instanceof jsts_old.index.strtree.ItemBoundable);if(level===-1){boundables.add(boundable);}}}
return;};jsts_old.index.strtree.AbstractSTRtree.prototype.getComparator=function(){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.index.strtree.STRtree=function(nodeCapacity){nodeCapacity=nodeCapacity||jsts_old.index.strtree.STRtree.DEFAULT_NODE_CAPACITY;jsts_old.index.strtree.AbstractSTRtree.call(this,nodeCapacity);};jsts_old.index.strtree.STRtree.prototype=new jsts_old.index.strtree.AbstractSTRtree();jsts_old.index.strtree.STRtree.constructor=jsts_old.index.strtree.STRtree;jsts_old.index.strtree.STRtree.prototype.xComparator=function(o1,o2){return jsts_old.index.strtree.AbstractSTRtree.prototype.compareDoubles(jsts_old.index.strtree.STRtree.prototype.centreX(o1.getBounds()),jsts_old.index.strtree.STRtree.prototype.centreX(o2.getBounds()));};jsts_old.index.strtree.STRtree.prototype.yComparator=function(o1,o2){return jsts_old.index.strtree.AbstractSTRtree.prototype.compareDoubles(jsts_old.index.strtree.STRtree.prototype.centreY(o1.getBounds()),jsts_old.index.strtree.STRtree.prototype.centreY(o2.getBounds()));};jsts_old.index.strtree.STRtree.prototype.centreX=function(e){return jsts_old.index.strtree.STRtree.prototype.avg(e.getMinX(),e.getMaxX());};jsts_old.index.strtree.STRtree.prototype.centreY=function(e){return jsts_old.index.strtree.STRtree.prototype.avg(e.getMinY(),e.getMaxY());};jsts_old.index.strtree.STRtree.prototype.avg=function(a,b){return(a+b)/2.0;};jsts_old.index.strtree.STRtree.prototype.intersectsOp={intersects:function(aBounds,bBounds){return aBounds.intersects(bBounds);}};jsts_old.index.strtree.STRtree.prototype.createParentBoundables=function(childBoundables,newLevel){jsts_old.util.Assert.isTrue(!(childBoundables.length===0));var minLeafCount=Math.ceil(childBoundables.length/this.getNodeCapacity());var sortedChildBoundables=[];for(var i=0;i<childBoundables.length;i++){sortedChildBoundables.push(childBoundables[i]);}
sortedChildBoundables.sort(this.xComparator);var verticalSlices=this.verticalSlices(sortedChildBoundables,Math.ceil(Math.sqrt(minLeafCount)));return this.createParentBoundablesFromVerticalSlices(verticalSlices,newLevel);};jsts_old.index.strtree.STRtree.prototype.createParentBoundablesFromVerticalSlices=function(verticalSlices,newLevel){jsts_old.util.Assert.isTrue(verticalSlices.length>0);var parentBoundables=[];for(var i=0;i<verticalSlices.length;i++){parentBoundables=parentBoundables.concat(this.createParentBoundablesFromVerticalSlice(verticalSlices[i],newLevel));}
return parentBoundables;};jsts_old.index.strtree.STRtree.prototype.createParentBoundablesFromVerticalSlice=function(childBoundables,newLevel){return jsts_old.index.strtree.AbstractSTRtree.prototype.createParentBoundables.call(this,childBoundables,newLevel);};jsts_old.index.strtree.STRtree.prototype.verticalSlices=function(childBoundables,sliceCount){var sliceCapacity=Math.ceil(childBoundables.length/sliceCount);var slices=[];var i=0,boundablesAddedToSlice,childBoundable;for(var j=0;j<sliceCount;j++){slices[j]=[];boundablesAddedToSlice=0;while(i<childBoundables.length&&boundablesAddedToSlice<sliceCapacity){childBoundable=childBoundables[i++];slices[j].push(childBoundable);boundablesAddedToSlice++;}}
return slices;};jsts_old.index.strtree.STRtree.DEFAULT_NODE_CAPACITY=10;jsts_old.index.strtree.STRtree.prototype.createNode=function(level){var abstractNode=new jsts_old.index.strtree.AbstractNode(level);abstractNode.computeBounds=function(){var bounds=null;var childBoundables=this.getChildBoundables();for(var i=0;i<childBoundables.length;i++){var childBoundable=childBoundables[i];if(bounds===null){bounds=new jsts_old.geom.Envelope(childBoundable.getBounds());}else{bounds.expandToInclude(childBoundable.getBounds());}}
return bounds;};return abstractNode;};jsts_old.index.strtree.STRtree.prototype.getIntersectsOp=function(){return this.intersectsOp;};jsts_old.index.strtree.STRtree.prototype.insert=function(itemEnv,item){if(itemEnv.isNull()){return;}
jsts_old.index.strtree.AbstractSTRtree.prototype.insert.call(this,itemEnv,item);};jsts_old.index.strtree.STRtree.prototype.query=function(searchEnv,visitor){return jsts_old.index.strtree.AbstractSTRtree.prototype.query.apply(this,arguments);};jsts_old.index.strtree.STRtree.prototype.remove=function(itemEnv,item){return jsts_old.index.strtree.AbstractSTRtree.prototype.remove.call(this,itemEnv,item);};jsts_old.index.strtree.STRtree.prototype.size=function(){return jsts_old.index.strtree.AbstractSTRtree.prototype.size.call(this);};jsts_old.index.strtree.STRtree.prototype.depth=function(){return jsts_old.index.strtree.AbstractSTRtree.prototype.depth.call(this);};jsts_old.index.strtree.STRtree.prototype.getComparator=function(){return this.yComparator;};jsts_old.index.strtree.STRtree.prototype.nearestNeighbour=function(itemDist){var bp=new jsts_old.index.strtree.BoundablePair(this.getRoot(),this.getRoot(),itemDist);return this.nearestNeighbour4(bp);};jsts_old.index.strtree.STRtree.prototype.nearestNeighbour2=function(env,item,itemDist){var bnd=new jsts_old.index.strtree.ItemBoundable(env,item);var bp=new jsts_old.index.strtree.BoundablePair(this.getRoot(),bnd,itemDist);return this.nearestNeighbour4(bp)[0];};jsts_old.index.strtree.STRtree.prototype.nearestNeighbour3=function(tree,itemDist){var bp=new jsts_old.index.strtree.BoundablePair(this.getRoot(),tree.getRoot(),itemDist);return this.nearestNeighbour4(bp);};jsts_old.index.strtree.STRtree.prototype.nearestNeighbour4=function(initBndPair){return this.nearestNeighbour5(initBndPair,Double.POSITIVE_INFINITY);};jsts_old.index.strtree.STRtree.prototype.nearestNeighbour5=function(initBndPair,maxDistance){var distanceLowerBound=maxDistance;var minPair=null;var priQ=[];priQ.push(initBndPair);while(!priQ.isEmpty()&&distanceLowerBound>0.0){var bndPair=priQ.pop();var currentDistance=bndPair.getDistance();if(currentDistance>=distanceLowerBound)
break;if(bndPair.isLeaves()){distanceLowerBound=currentDistance;minPair=bndPair;}else{bndPair.expandToQueue(priQ,distanceLowerBound);}}
return[minPair.getBoundable(0).getItem(),minPair.getBoundable(1).getItem()];};jsts_old.noding.SegmentString=function(){};jsts_old.noding.SegmentString.prototype.getData=jsts_old.abstractFunc;jsts_old.noding.SegmentString.prototype.setData=jsts_old.abstractFunc;jsts_old.noding.SegmentString.prototype.size=jsts_old.abstractFunc;jsts_old.noding.SegmentString.prototype.getCoordinate=jsts_old.abstractFunc;jsts_old.noding.SegmentString.prototype.getCoordinates=jsts_old.abstractFunc;jsts_old.noding.SegmentString.prototype.isClosed=jsts_old.abstractFunc;jsts_old.noding.NodableSegmentString=function(){};jsts_old.noding.NodableSegmentString.prototype=new jsts_old.noding.SegmentString();jsts_old.noding.NodableSegmentString.prototype.addIntersection=jsts_old.abstractFunc;jsts_old.noding.NodedSegmentString=function(pts,data){this.nodeList=new jsts_old.noding.SegmentNodeList(this);this.pts=pts;this.data=data;};jsts_old.noding.NodedSegmentString.prototype=new jsts_old.noding.NodableSegmentString();jsts_old.noding.NodedSegmentString.constructor=jsts_old.noding.NodedSegmentString;jsts_old.noding.NodedSegmentString.getNodedSubstrings=function(segStrings){if(arguments.length===2){jsts_old.noding.NodedSegmentString.getNodedSubstrings2.apply(this,arguments);return;}
var resultEdgelist=new javascript.util.ArrayList();jsts_old.noding.NodedSegmentString.getNodedSubstrings2(segStrings,resultEdgelist);return resultEdgelist;};jsts_old.noding.NodedSegmentString.getNodedSubstrings2=function(segStrings,resultEdgelist){for(var i=segStrings.iterator();i.hasNext();){var ss=i.next();ss.getNodeList().addSplitEdges(resultEdgelist);}};jsts_old.noding.NodedSegmentString.prototype.nodeList=null;jsts_old.noding.NodedSegmentString.prototype.pts=null;jsts_old.noding.NodedSegmentString.prototype.data=null;jsts_old.noding.NodedSegmentString.prototype.getData=function(){return this.data;};jsts_old.noding.NodedSegmentString.prototype.setData=function(data){this.data=data;};jsts_old.noding.NodedSegmentString.prototype.getNodeList=function(){return this.nodeList;};jsts_old.noding.NodedSegmentString.prototype.size=function(){return this.pts.length;};jsts_old.noding.NodedSegmentString.prototype.getCoordinate=function(i){return this.pts[i];};jsts_old.noding.NodedSegmentString.prototype.getCoordinates=function(){return this.pts;};jsts_old.noding.NodedSegmentString.prototype.isClosed=function(){return this.pts[0].equals(this.pts[this.pts.length-1]);};jsts_old.noding.NodedSegmentString.prototype.getSegmentOctant=function(index){if(index===this.pts.length-1)
return-1;return this.safeOctant(this.getCoordinate(index),this.getCoordinate(index+1));};jsts_old.noding.NodedSegmentString.prototype.safeOctant=function(p0,p1){if(p0.equals2D(p1))
return 0;return jsts_old.noding.Octant.octant(p0,p1);};jsts_old.noding.NodedSegmentString.prototype.addIntersections=function(li,segmentIndex,geomIndex){for(var i=0;i<li.getIntersectionNum();i++){this.addIntersection(li,segmentIndex,geomIndex,i);}};jsts_old.noding.NodedSegmentString.prototype.addIntersection=function(li,segmentIndex,geomIndex,intIndex){if(li instanceof jsts_old.geom.Coordinate){this.addIntersection2.apply(this,arguments);return;}
var intPt=new jsts_old.geom.Coordinate(li.getIntersection(intIndex));this.addIntersection2(intPt,segmentIndex);};jsts_old.noding.NodedSegmentString.prototype.addIntersection2=function(intPt,segmentIndex){this.addIntersectionNode(intPt,segmentIndex);};jsts_old.noding.NodedSegmentString.prototype.addIntersectionNode=function(intPt,segmentIndex){var normalizedSegmentIndex=segmentIndex;var nextSegIndex=normalizedSegmentIndex+1;if(nextSegIndex<this.pts.length){var nextPt=this.pts[nextSegIndex];if(intPt.equals2D(nextPt)){normalizedSegmentIndex=nextSegIndex;}}
var ei=this.nodeList.add(intPt,normalizedSegmentIndex);return ei;};jsts_old.noding.NodedSegmentString.prototype.toString=function(){var geometryFactory=new jsts_old.geom.GeometryFactory();return new jsts_old.io.WKTWriter().write(geometryFactory.createLineString(this.pts));};jsts_old.index.chain.MonotoneChainBuilder=function(){};jsts_old.index.chain.MonotoneChainBuilder.toIntArray=function(list){var array=[];for(var i=0;i<list.length;i++){array[i]=list[i];}
return array;};jsts_old.index.chain.MonotoneChainBuilder.getChains=function(pts){if(arguments.length===2){return jsts_old.index.chain.MonotoneChainBuilder.getChains2.apply(this,arguments);}
return jsts_old.index.chain.MonotoneChainBuilder.getChains2(pts,null);};jsts_old.index.chain.MonotoneChainBuilder.getChains2=function(pts,context){var mcList=[];var startIndex=jsts_old.index.chain.MonotoneChainBuilder.getChainStartIndices(pts);for(var i=0;i<startIndex.length-1;i++){var mc=new jsts_old.index.chain.MonotoneChain(pts,startIndex[i],startIndex[i+1],context);mcList.push(mc);}
return mcList;};jsts_old.index.chain.MonotoneChainBuilder.getChainStartIndices=function(pts){var start=0;var startIndexList=[];startIndexList.push(start);do{var last=jsts_old.index.chain.MonotoneChainBuilder.findChainEnd(pts,start);startIndexList.push(last);start=last;}while(start<pts.length-1);var startIndex=jsts_old.index.chain.MonotoneChainBuilder.toIntArray(startIndexList);return startIndex;};jsts_old.index.chain.MonotoneChainBuilder.findChainEnd=function(pts,start){var safeStart=start;while(safeStart<pts.length-1&&pts[safeStart].equals2D(pts[safeStart+1])){safeStart++;}
if(safeStart>=pts.length-1){return pts.length-1;}
var chainQuad=jsts_old.geomgraph.Quadrant.quadrant(pts[safeStart],pts[safeStart+1]);var last=start+1;while(last<pts.length){if(!pts[last-1].equals2D(pts[last])){var quad=jsts_old.geomgraph.Quadrant.quadrant(pts[last-1],pts[last]);if(quad!==chainQuad)
break;}
last++;}
return last-1;};jsts_old.geom.LineSegment=function(p0,p1){if(p0===undefined){this.p0=new jsts_old.geom.Coordinate();this.p1=new jsts_old.geom.Coordinate();return;}
this.p0=p0;this.p1=p1;};jsts_old.geom.LineSegment.prototype.p0=null;jsts_old.geom.LineSegment.prototype.p1=null;jsts_old.geom.LineSegment.prototype.getLength=function(){return this.p0.distance(p1);};jsts_old.geom.LineSegment.prototype.isHorizontal=function(){return this.p0.y===this.p1.y;};jsts_old.geom.LineSegment.prototype.isVertical=function(){return this.p0.x===this.p1.x;};jsts_old.geom.LineSegment.prototype.reverse=function()
{var temp=this.p0;this.p0=this.p1;this.p1=temp;};jsts_old.geom.LineSegment.prototype.projectionFactor=function(p){if(p.equals(this.p0))
return 0.0;if(p.equals(this.p1))
return 1.0;var dx=this.p1.x-this.p0.x;var dy=this.p1.y-this.p0.y;var len2=dx*dx+dy*dy;var r=((p.x-this.p0.x)*dx+(p.y-this.p0.y)*dy)/len2;return r;};jsts_old.geom.LineSegment.prototype.closestPoint=function(p){var factor=this.projectionFactor(p);if(factor>0&&factor<1){return this.project(p);}
var dist0=this.p0.distance(p);var dist1=this.p1.distance(p);if(dist0<dist1)
return this.p0;return this.p1;};jsts_old.geom.LineSegment.prototype.closestPoints=function(line){var intPt=this.intersection(line);if(intPt!==null){return[intPt,intPt];}
var closestPt=[];var minDistance=Number.MAX_VALUE;var dist;var close00=this.closestPoint(line.p0);minDistance=close00.distance(line.p0);closestPt[0]=close00;closestPt[1]=line.p0;var close01=this.closestPoint(line.p1);dist=close01.distance(line.p1);if(dist<minDistance){minDistance=dist;closestPt[0]=close01;closestPt[1]=line.p1;}
var close10=line.closestPoint(this.p0);dist=close10.distance(this.p0);if(dist<minDistance){minDistance=dist;closestPt[0]=this.p0;closestPt[1]=close10;}
var close11=line.closestPoint(this.p1);dist=close11.distance(this.p1);if(dist<minDistance){minDistance=dist;closestPt[0]=this.p1;closestPt[1]=close11;}
return closestPt;};jsts_old.geom.LineSegment.prototype.intersection=function(line){var li=new jsts_old.algorithm.RobustLineIntersector();li.computeIntersection(this.p0,this.p1,line.p0,line.p1);if(li.hasIntersection())
return li.getIntersection(0);return null;};jsts_old.geom.LineSegment.prototype.project=function(p){if(p.equals(this.p0)||p.equals(this.p1))
return new jsts_old.geom.Coordinate(p);var r=this.projectionFactor(p);var coord=new jsts_old.geom.Coordinate();coord.x=this.p0.x+r*(this.p1.x-this.p0.x);coord.y=this.p0.y+r*(this.p1.y-this.p0.y);return coord;};jsts_old.geom.LineSegment.prototype.setCoordinates=function(ls){if(ls instanceof jsts_old.geom.Coordinate){this.setCoordinates2.apply(this,arguments);return;}
this.setCoordinates2(ls.p0,ls.p1);};jsts_old.geom.LineSegment.prototype.setCoordinates2=function(p0,p1){this.p0.x=p0.x;this.p0.y=p0.y;this.p1.x=p1.x;this.p1.y=p1.y;};jsts_old.geom.LineSegment.prototype.distance=function(p)
{return jsts_old.algorithm.CGAlgorithms.distancePointLine(p,this.p0,this.p1);};jsts_old.index.chain.MonotoneChainOverlapAction=function(){this.tempEnv1=new jsts_old.geom.Envelope();this.tempEnv2=new jsts_old.geom.Envelope();this.overlapSeg1=new jsts_old.geom.LineSegment();this.overlapSeg2=new jsts_old.geom.LineSegment();};jsts_old.index.chain.MonotoneChainOverlapAction.prototype.tempEnv1=null;jsts_old.index.chain.MonotoneChainOverlapAction.prototype.tempEnv2=null;jsts_old.index.chain.MonotoneChainOverlapAction.prototype.overlapSeg1=null;jsts_old.index.chain.MonotoneChainOverlapAction.prototype.overlapSeg2=null;jsts_old.index.chain.MonotoneChainOverlapAction.prototype.overlap=function(mc1,start1,mc2,start2){this.mc1.getLineSegment(start1,this.overlapSeg1);this.mc2.getLineSegment(start2,this.overlapSeg2);this.overlap2(this.overlapSeg1,this.overlapSeg2);};jsts_old.index.chain.MonotoneChainOverlapAction.prototype.overlap2=function(seg1,seg2){};(function(){var MonotoneChainOverlapAction=jsts_old.index.chain.MonotoneChainOverlapAction;var SinglePassNoder=jsts_old.noding.SinglePassNoder;var STRtree=jsts_old.index.strtree.STRtree;var NodedSegmentString=jsts_old.noding.NodedSegmentString;var MonotoneChainBuilder=jsts_old.index.chain.MonotoneChainBuilder;var SegmentOverlapAction=function(si){this.si=si;};SegmentOverlapAction.prototype=new MonotoneChainOverlapAction();SegmentOverlapAction.constructor=SegmentOverlapAction;SegmentOverlapAction.prototype.si=null;SegmentOverlapAction.prototype.overlap=function(mc1,start1,mc2,start2){var ss1=mc1.getContext();var ss2=mc2.getContext();this.si.processIntersections(ss1,start1,ss2,start2);};jsts_old.noding.MCIndexNoder=function(){this.monoChains=[];this.index=new STRtree();};jsts_old.noding.MCIndexNoder.prototype=new SinglePassNoder();jsts_old.noding.MCIndexNoder.constructor=jsts_old.noding.MCIndexNoder;jsts_old.noding.MCIndexNoder.prototype.monoChains=null;jsts_old.noding.MCIndexNoder.prototype.index=null;jsts_old.noding.MCIndexNoder.prototype.idCounter=0;jsts_old.noding.MCIndexNoder.prototype.nodedSegStrings=null;jsts_old.noding.MCIndexNoder.prototype.nOverlaps=0;jsts_old.noding.MCIndexNoder.prototype.getMonotoneChains=function(){return this.monoChains;};jsts_old.noding.MCIndexNoder.prototype.getIndex=function(){return this.index;};jsts_old.noding.MCIndexNoder.prototype.getNodedSubstrings=function(){return NodedSegmentString.getNodedSubstrings(this.nodedSegStrings);};jsts_old.noding.MCIndexNoder.prototype.computeNodes=function(inputSegStrings){this.nodedSegStrings=inputSegStrings;for(var i=inputSegStrings.iterator();i.hasNext();){this.add(i.next());}
this.intersectChains();};jsts_old.noding.MCIndexNoder.prototype.intersectChains=function(){var overlapAction=new SegmentOverlapAction(this.segInt);for(var i=0;i<this.monoChains.length;i++){var queryChain=this.monoChains[i];var overlapChains=this.index.query(queryChain.getEnvelope());for(var j=0;j<overlapChains.length;j++){var testChain=overlapChains[j];if(testChain.getId()>queryChain.getId()){queryChain.computeOverlaps(testChain,overlapAction);this.nOverlaps++;}
if(this.segInt.isDone())
return;}}};jsts_old.noding.MCIndexNoder.prototype.add=function(segStr){var segChains=MonotoneChainBuilder.getChains(segStr.getCoordinates(),segStr);for(var i=0;i<segChains.length;i++){var mc=segChains[i];mc.setId(this.idCounter++);this.index.insert(mc.getEnvelope(),mc);this.monoChains.push(mc);}};})();(function(){var RobustLineIntersector=jsts_old.algorithm.RobustLineIntersector;var InteriorIntersectionFinder=jsts_old.noding.InteriorIntersectionFinder;var MCIndexNoder=jsts_old.noding.MCIndexNoder;jsts_old.noding.FastNodingValidator=function(segStrings){this.li=new RobustLineIntersector();this.segStrings=segStrings;};jsts_old.noding.FastNodingValidator.prototype.li=null;jsts_old.noding.FastNodingValidator.prototype.segStrings=null;jsts_old.noding.FastNodingValidator.prototype.findAllIntersections=false;jsts_old.noding.FastNodingValidator.prototype.segInt=null;jsts_old.noding.FastNodingValidator.prototype._isValid=true;jsts_old.noding.FastNodingValidator.prototype.setFindAllIntersections=function(findAllIntersections){this.findAllIntersections=findAllIntersections;};jsts_old.noding.FastNodingValidator.prototype.getIntersections=function(){return segInt.getIntersections();};jsts_old.noding.FastNodingValidator.prototype.isValid=function(){this.execute();return this._isValid;};jsts_old.noding.FastNodingValidator.prototype.getErrorMessage=function(){if(this._isValid)
return'no intersections found';var intSegs=this.segInt.getIntersectionSegments();return'found non-noded intersection between '+
jsts_old.io.WKTWriter.toLineString(intSegs[0],intSegs[1])+' and '+
jsts_old.io.WKTWriter.toLineString(intSegs[2],intSegs[3]);};jsts_old.noding.FastNodingValidator.prototype.checkValid=function(){this.execute();if(!this._isValid)
throw new jsts_old.error.TopologyError(this.getErrorMessage(),this.segInt.getInteriorIntersection());};jsts_old.noding.FastNodingValidator.prototype.execute=function(){if(this.segInt!=null)
return;this.checkInteriorIntersections();};jsts_old.noding.FastNodingValidator.prototype.checkInteriorIntersections=function(){this._isValid=true;this.segInt=new InteriorIntersectionFinder(this.li);this.segInt.setFindAllIntersections(this.findAllIntersections);var noder=new MCIndexNoder();noder.setSegmentIntersector(this.segInt);noder.computeNodes(this.segStrings);if(this.segInt.hasIntersection()){this._isValid=false;return;}};})();(function(){jsts_old.noding.BasicSegmentString=function(pts,data){this.pts=pts;this.data=data;};jsts_old.noding.BasicSegmentString.prototype=new jsts_old.noding.SegmentString();jsts_old.noding.BasicSegmentString.prototype.pts=null;jsts_old.noding.BasicSegmentString.prototype.data=null;jsts_old.noding.BasicSegmentString.prototype.getData=function(){return this.data;}
jsts_old.noding.BasicSegmentString.prototype.setData=function(data){this.data=data;};jsts_old.noding.BasicSegmentString.prototype.size=function(){return this.pts.length;};jsts_old.noding.BasicSegmentString.prototype.getCoordinate=function(i){return this.pts[i];};jsts_old.noding.BasicSegmentString.prototype.getCoordinates=function(){return this.pts;};jsts_old.noding.BasicSegmentString.prototype.isClosed=function(){return this.pts[0].equals(this.pts[this.pts.length-1]);};jsts_old.noding.BasicSegmentString.prototype.getSegmentOctant=function(index){if(index==this.pts.length-1)
return-1;return jsts_old.noding.Octant.octant(this.getCoordinate(index),this.getCoordinate(index+1));};})();(function(){var FastNodingValidator=jsts_old.noding.FastNodingValidator;var BasicSegmentString=jsts_old.noding.BasicSegmentString;var ArrayList=javascript.util.ArrayList;jsts_old.geomgraph.EdgeNodingValidator=function(edges){this.nv=new FastNodingValidator(jsts_old.geomgraph.EdgeNodingValidator.toSegmentStrings(edges));};jsts_old.geomgraph.EdgeNodingValidator.checkValid=function(edges){var validator=new jsts_old.geomgraph.EdgeNodingValidator(edges);validator.checkValid();};jsts_old.geomgraph.EdgeNodingValidator.toSegmentStrings=function(edges){var segStrings=new ArrayList();for(var i=edges.iterator();i.hasNext();){var e=i.next();segStrings.add(new BasicSegmentString(e.getCoordinates(),e));}
return segStrings;};jsts_old.geomgraph.EdgeNodingValidator.prototype.nv=null;jsts_old.geomgraph.EdgeNodingValidator.prototype.checkValid=function(){this.nv.checkValid();};})();jsts_old.operation.GeometryGraphOperation=function(g0,g1,boundaryNodeRule){this.li=new jsts_old.algorithm.RobustLineIntersector();this.arg=[];if(g0===undefined){return;}
if(g1===undefined){this.setComputationPrecision(g0.getPrecisionModel());this.arg[0]=new jsts_old.geomgraph.GeometryGraph(0,g0);return;}
boundaryNodeRule=boundaryNodeRule||jsts_old.algorithm.BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;if(g0.getPrecisionModel().compareTo(g1.getPrecisionModel())>=0)
this.setComputationPrecision(g0.getPrecisionModel());else
this.setComputationPrecision(g1.getPrecisionModel());this.arg[0]=new jsts_old.geomgraph.GeometryGraph(0,g0,boundaryNodeRule);this.arg[1]=new jsts_old.geomgraph.GeometryGraph(1,g1,boundaryNodeRule);};jsts_old.operation.GeometryGraphOperation.prototype.li=null;jsts_old.operation.GeometryGraphOperation.prototype.resultPrecisionModel=null;jsts_old.operation.GeometryGraphOperation.prototype.arg=null;jsts_old.operation.GeometryGraphOperation.prototype.getArgGeometry=function(i){return arg[i].getGeometry();};jsts_old.operation.GeometryGraphOperation.prototype.setComputationPrecision=function(pm){this.resultPrecisionModel=pm;this.li.setPrecisionModel(this.resultPrecisionModel);};(function(){var Assert=jsts_old.util.Assert;var ArrayList=javascript.util.ArrayList;var LineBuilder=function(op,geometryFactory,ptLocator){this.lineEdgesList=new ArrayList();this.resultLineList=new ArrayList();this.op=op;this.geometryFactory=geometryFactory;this.ptLocator=ptLocator;};LineBuilder.prototype.op=null;LineBuilder.prototype.geometryFactory=null;LineBuilder.prototype.ptLocator=null;LineBuilder.prototype.lineEdgesList=null;LineBuilder.prototype.resultLineList=null;LineBuilder.prototype.build=function(opCode){this.findCoveredLineEdges();this.collectLines(opCode);this.buildLines(opCode);return this.resultLineList;};LineBuilder.prototype.findCoveredLineEdges=function(){for(var nodeit=this.op.getGraph().getNodes().iterator();nodeit.hasNext();){var node=nodeit.next();node.getEdges().findCoveredLineEdges();}
for(var it=this.op.getGraph().getEdgeEnds().iterator();it.hasNext();){var de=it.next();var e=de.getEdge();if(de.isLineEdge()&&!e.isCoveredSet()){var isCovered=this.op.isCoveredByA(de.getCoordinate());e.setCovered(isCovered);}}};LineBuilder.prototype.collectLines=function(opCode){for(var it=this.op.getGraph().getEdgeEnds().iterator();it.hasNext();){var de=it.next();this.collectLineEdge(de,opCode,this.lineEdgesList);this.collectBoundaryTouchEdge(de,opCode,this.lineEdgesList);}};LineBuilder.prototype.collectLineEdge=function(de,opCode,edges){var label=de.getLabel();var e=de.getEdge();if(de.isLineEdge()){if(!de.isVisited()&&jsts_old.operation.overlay.OverlayOp.isResultOfOp(label,opCode)&&!e.isCovered()){edges.add(e);de.setVisitedEdge(true);}}};LineBuilder.prototype.collectBoundaryTouchEdge=function(de,opCode,edges){var label=de.getLabel();if(de.isLineEdge())
return;if(de.isVisited())
return;if(de.isInteriorAreaEdge())
return;if(de.getEdge().isInResult())
return;Assert.isTrue(!(de.isInResult()||de.getSym().isInResult())||!de.getEdge().isInResult());if(jsts_old.operation.overlay.OverlayOp.isResultOfOp(label,opCode)&&opCode===jsts_old.operation.overlay.OverlayOp.INTERSECTION){edges.add(de.getEdge());de.setVisitedEdge(true);}};LineBuilder.prototype.buildLines=function(opCode){for(var it=this.lineEdgesList.iterator();it.hasNext();){var e=it.next();var label=e.getLabel();var line=this.geometryFactory.createLineString(e.getCoordinates());this.resultLineList.add(line);e.setInResult(true);}};LineBuilder.prototype.labelIsolatedLines=function(edgesList){for(var it=edgesList.iterator();it.hasNext();){var e=it.next();var label=e.getLabel();if(e.isIsolated()){if(label.isNull(0))
this.labelIsolatedLine(e,0);else
this.labelIsolatedLine(e,1);}}};LineBuilder.prototype.labelIsolatedLine=function(e,targetIndex){var loc=ptLocator.locate(e.getCoordinate(),op.getArgGeometry(targetIndex));e.getLabel().setLocation(targetIndex,loc);};jsts_old.operation.overlay.LineBuilder=LineBuilder;})();(function(){var ArrayList=javascript.util.ArrayList;var PointBuilder=function(op,geometryFactory,ptLocator){this.resultPointList=new ArrayList();this.op=op;this.geometryFactory=geometryFactory;};PointBuilder.prototype.op=null;PointBuilder.prototype.geometryFactory=null;PointBuilder.prototype.resultPointList=null;PointBuilder.prototype.build=function(opCode){this.extractNonCoveredResultNodes(opCode);return this.resultPointList;};PointBuilder.prototype.extractNonCoveredResultNodes=function(opCode){for(var nodeit=this.op.getGraph().getNodes().iterator();nodeit.hasNext();){var n=nodeit.next();if(n.isInResult())
continue;if(n.isIncidentEdgeInResult())
continue;if(n.getEdges().getDegree()===0||opCode===jsts_old.operation.overlay.OverlayOp.INTERSECTION){var label=n.getLabel();if(jsts_old.operation.overlay.OverlayOp.isResultOfOp(label,opCode)){this.filterCoveredNodeToPoint(n);}}}};PointBuilder.prototype.filterCoveredNodeToPoint=function(n){var coord=n.getCoordinate();if(!this.op.isCoveredByLA(coord)){var pt=this.geometryFactory.createPoint(coord);this.resultPointList.add(pt);}};jsts_old.operation.overlay.PointBuilder=PointBuilder;})();(function(){var PointLocator=jsts_old.algorithm.PointLocator;var Location=jsts_old.geom.Location;var EdgeList=jsts_old.geomgraph.EdgeList;var Label=jsts_old.geomgraph.Label;var PlanarGraph=jsts_old.geomgraph.PlanarGraph;var Position=jsts_old.geomgraph.Position;var EdgeNodingValidator=jsts_old.geomgraph.EdgeNodingValidator;var GeometryGraphOperation=jsts_old.operation.GeometryGraphOperation;var OverlayNodeFactory=jsts_old.operation.overlay.OverlayNodeFactory;var PolygonBuilder=jsts_old.operation.overlay.PolygonBuilder;var LineBuilder=jsts_old.operation.overlay.LineBuilder;var PointBuilder=jsts_old.operation.overlay.PointBuilder;var Assert=jsts_old.util.Assert;var ArrayList=javascript.util.ArrayList;jsts_old.operation.overlay.OverlayOp=function(g0,g1){this.ptLocator=new PointLocator();this.edgeList=new EdgeList();this.resultPolyList=new ArrayList();this.resultLineList=new ArrayList();this.resultPointList=new ArrayList();GeometryGraphOperation.call(this,g0,g1);this.graph=new PlanarGraph(new OverlayNodeFactory());this.geomFact=g0.getFactory();};jsts_old.operation.overlay.OverlayOp.prototype=new GeometryGraphOperation();jsts_old.operation.overlay.OverlayOp.constructor=jsts_old.operation.overlay.OverlayOp;jsts_old.operation.overlay.OverlayOp.INTERSECTION=1;jsts_old.operation.overlay.OverlayOp.UNION=2;jsts_old.operation.overlay.OverlayOp.DIFFERENCE=3;jsts_old.operation.overlay.OverlayOp.SYMDIFFERENCE=4;jsts_old.operation.overlay.OverlayOp.overlayOp=function(geom0,geom1,opCode){var gov=new jsts_old.operation.overlay.OverlayOp(geom0,geom1);var geomOv=gov.getResultGeometry(opCode);return geomOv;}
jsts_old.operation.overlay.OverlayOp.isResultOfOp=function(label,opCode){if(arguments.length===3){return jsts_old.operation.overlay.OverlayOp.isResultOfOp2.apply(this,arguments);}
var loc0=label.getLocation(0);var loc1=label.getLocation(1);return jsts_old.operation.overlay.OverlayOp.isResultOfOp2(loc0,loc1,opCode);}
jsts_old.operation.overlay.OverlayOp.isResultOfOp2=function(loc0,loc1,opCode){if(loc0==Location.BOUNDARY)
loc0=Location.INTERIOR;if(loc1==Location.BOUNDARY)
loc1=Location.INTERIOR;switch(opCode){case jsts_old.operation.overlay.OverlayOp.INTERSECTION:return loc0==Location.INTERIOR&&loc1==Location.INTERIOR;case jsts_old.operation.overlay.OverlayOp.UNION:return loc0==Location.INTERIOR||loc1==Location.INTERIOR;case jsts_old.operation.overlay.OverlayOp.DIFFERENCE:return loc0==Location.INTERIOR&&loc1!=Location.INTERIOR;case jsts_old.operation.overlay.OverlayOp.SYMDIFFERENCE:return(loc0==Location.INTERIOR&&loc1!=Location.INTERIOR)||(loc0!=Location.INTERIOR&&loc1==Location.INTERIOR);}
return false;}
jsts_old.operation.overlay.OverlayOp.prototype.ptLocator=null;jsts_old.operation.overlay.OverlayOp.prototype.geomFact=null;jsts_old.operation.overlay.OverlayOp.prototype.resultGeom=null;jsts_old.operation.overlay.OverlayOp.prototype.graph=null;jsts_old.operation.overlay.OverlayOp.prototype.edgeList=null;jsts_old.operation.overlay.OverlayOp.prototype.resultPolyList=null;jsts_old.operation.overlay.OverlayOp.prototype.resultLineList=null;jsts_old.operation.overlay.OverlayOp.prototype.resultPointList=null;jsts_old.operation.overlay.OverlayOp.prototype.getResultGeometry=function(funcCode){this.computeOverlay(funcCode);return this.resultGeom;}
jsts_old.operation.overlay.OverlayOp.prototype.getGraph=function(){return this.graph;}
jsts_old.operation.overlay.OverlayOp.prototype.computeOverlay=function(opCode){this.copyPoints(0);this.copyPoints(1);this.arg[0].computeSelfNodes(this.li,false);this.arg[1].computeSelfNodes(this.li,false);this.arg[0].computeEdgeIntersections(this.arg[1],this.li,true);var baseSplitEdges=new ArrayList();this.arg[0].computeSplitEdges(baseSplitEdges);this.arg[1].computeSplitEdges(baseSplitEdges);var splitEdges=baseSplitEdges;this.insertUniqueEdges(baseSplitEdges);this.computeLabelsFromDepths();this.replaceCollapsedEdges();EdgeNodingValidator.checkValid(this.edgeList.getEdges());this.graph.addEdges(this.edgeList.getEdges());this.computeLabelling();this.labelIncompleteNodes();this.findResultAreaEdges(opCode);this.cancelDuplicateResultEdges();var polyBuilder=new PolygonBuilder(this.geomFact);polyBuilder.add(this.graph);this.resultPolyList=polyBuilder.getPolygons();var lineBuilder=new LineBuilder(this,this.geomFact,this.ptLocator);this.resultLineList=lineBuilder.build(opCode);var pointBuilder=new PointBuilder(this,this.geomFact,this.ptLocator);this.resultPointList=pointBuilder.build(opCode);this.resultGeom=this.computeGeometry(this.resultPointList,this.resultLineList,this.resultPolyList,opCode);}
jsts_old.operation.overlay.OverlayOp.prototype.insertUniqueEdges=function(edges){for(var i=edges.iterator();i.hasNext();){var e=i.next();this.insertUniqueEdge(e);}}
jsts_old.operation.overlay.OverlayOp.prototype.insertUniqueEdge=function(e){var existingEdge=this.edgeList.findEqualEdge(e);if(existingEdge!==null){var existingLabel=existingEdge.getLabel();var labelToMerge=e.getLabel();if(!existingEdge.isPointwiseEqual(e)){labelToMerge=new Label(e.getLabel());labelToMerge.flip();}
var depth=existingEdge.getDepth();if(depth.isNull()){depth.add(existingLabel);}
depth.add(labelToMerge);existingLabel.merge(labelToMerge);}else{this.edgeList.add(e);}};jsts_old.operation.overlay.OverlayOp.prototype.computeLabelsFromDepths=function(){for(var it=this.edgeList.iterator();it.hasNext();){var e=it.next();var lbl=e.getLabel();var depth=e.getDepth();if(!depth.isNull()){depth.normalize();for(var i=0;i<2;i++){if(!lbl.isNull(i)&&lbl.isArea()&&!depth.isNull(i)){if(depth.getDelta(i)==0){lbl.toLine(i);}else{Assert.isTrue(!depth.isNull(i,Position.LEFT),'depth of LEFT side has not been initialized');lbl.setLocation(i,Position.LEFT,depth.getLocation(i,Position.LEFT));Assert.isTrue(!depth.isNull(i,Position.RIGHT),'depth of RIGHT side has not been initialized');lbl.setLocation(i,Position.RIGHT,depth.getLocation(i,Position.RIGHT));}}}}}}
jsts_old.operation.overlay.OverlayOp.prototype.replaceCollapsedEdges=function(){var newEdges=new ArrayList();for(var it=this.edgeList.iterator();it.hasNext();){var e=it.next();if(e.isCollapsed()){it.remove();newEdges.add(e.getCollapsedEdge());}}
this.edgeList.addAll(newEdges);}
jsts_old.operation.overlay.OverlayOp.prototype.copyPoints=function(argIndex){for(var i=this.arg[argIndex].getNodeIterator();i.hasNext();){var graphNode=i.next();var newNode=this.graph.addNode(graphNode.getCoordinate());newNode.setLabel(argIndex,graphNode.getLabel().getLocation(argIndex));}}
jsts_old.operation.overlay.OverlayOp.prototype.computeLabelling=function(){for(var nodeit=this.graph.getNodes().iterator();nodeit.hasNext();){var node=nodeit.next();node.getEdges().computeLabelling(this.arg);}
this.mergeSymLabels();this.updateNodeLabelling();}
jsts_old.operation.overlay.OverlayOp.prototype.mergeSymLabels=function(){for(var nodeit=this.graph.getNodes().iterator();nodeit.hasNext();){var node=nodeit.next();node.getEdges().mergeSymLabels();}}
jsts_old.operation.overlay.OverlayOp.prototype.updateNodeLabelling=function(){for(var nodeit=this.graph.getNodes().iterator();nodeit.hasNext();){var node=nodeit.next();var lbl=node.getEdges().getLabel();node.getLabel().merge(lbl);}}
jsts_old.operation.overlay.OverlayOp.prototype.labelIncompleteNodes=function(){var nodeCount=0;for(var ni=this.graph.getNodes().iterator();ni.hasNext();){var n=ni.next();var label=n.getLabel();if(n.isIsolated()){nodeCount++;if(label.isNull(0))
this.labelIncompleteNode(n,0);else
this.labelIncompleteNode(n,1);}
n.getEdges().updateLabelling(label);}};jsts_old.operation.overlay.OverlayOp.prototype.labelIncompleteNode=function(n,targetIndex){var loc=this.ptLocator.locate(n.getCoordinate(),this.arg[targetIndex].getGeometry());n.getLabel().setLocation(targetIndex,loc);};jsts_old.operation.overlay.OverlayOp.prototype.findResultAreaEdges=function(opCode){for(var it=this.graph.getEdgeEnds().iterator();it.hasNext();){var de=it.next();var label=de.getLabel();if(label.isArea()&&!de.isInteriorAreaEdge()&&jsts_old.operation.overlay.OverlayOp.isResultOfOp(label.getLocation(0,Position.RIGHT),label.getLocation(1,Position.RIGHT),opCode)){de.setInResult(true);}}};jsts_old.operation.overlay.OverlayOp.prototype.cancelDuplicateResultEdges=function(){for(var it=this.graph.getEdgeEnds().iterator();it.hasNext();){var de=it.next();var sym=de.getSym();if(de.isInResult()&&sym.isInResult()){de.setInResult(false);sym.setInResult(false);}}};jsts_old.operation.overlay.OverlayOp.prototype.isCoveredByLA=function(coord){if(this.isCovered(coord,this.resultLineList))
return true;if(this.isCovered(coord,this.resultPolyList))
return true;return false;};jsts_old.operation.overlay.OverlayOp.prototype.isCoveredByA=function(coord){if(this.isCovered(coord,this.resultPolyList))
return true;return false;};jsts_old.operation.overlay.OverlayOp.prototype.isCovered=function(coord,geomList){for(var it=geomList.iterator();it.hasNext();){var geom=it.next();var loc=this.ptLocator.locate(coord,geom);if(loc!=Location.EXTERIOR)
return true;}
return false;};jsts_old.operation.overlay.OverlayOp.prototype.computeGeometry=function(resultPointList,resultLineList,resultPolyList,opcode){var geomList=new ArrayList();geomList.addAll(resultPointList);geomList.addAll(resultLineList);geomList.addAll(resultPolyList);return this.geomFact.buildGeometry(geomList);};jsts_old.operation.overlay.OverlayOp.prototype.createEmptyResult=function(opCode){var result=null;switch(resultDimension(opCode,this.arg[0].getGeometry(),this.arg[1].getGeometry())){case-1:result=geomFact.createGeometryCollection();break;case 0:result=geomFact.createPoint(null);break;case 1:result=geomFact.createLineString(null);break;case 2:result=geomFact.createPolygon(null,null);break;}
return result;};jsts_old.operation.overlay.OverlayOp.prototype.resultDimension=function(opCode,g0,g1){var dim0=g0.getDimension();var dim1=g1.getDimension();var resultDimension=-1;switch(opCode){case jsts_old.operation.overlay.OverlayOp.INTERSECTION:resultDimension=Math.min(dim0,dim1);break;case jsts_old.operation.overlay.OverlayOp.UNION:resultDimension=Math.max(dim0,dim1);break;case jsts_old.operation.overlay.OverlayOp.DIFFERENCE:resultDimension=dim0;break;case jsts_old.operation.overlay.OverlayOp.SYMDIFFERENCE:resultDimension=Math.max(dim0,dim1);break;}
return resultDimension;};})();(function(){var NodeBase=function(){this.items=new javascript.util.ArrayList();this.subnode=[null,null];};NodeBase.getSubnodeIndex=function(interval,centre){var subnodeIndex=-1;if(interval.min>=centre){subnodeIndex=1;}
if(interval.max<=centre){subnodeIndex=0;}
return subnodeIndex;};NodeBase.prototype.getItems=function(){return this.items;};NodeBase.prototype.add=function(item){this.items.add(item);};NodeBase.prototype.addAllItems=function(items){items.addAll(this.items);var i=0,il=2;for(i;i<il;i++){if(this.subnode[i]!==null){this.subnode[i].addAllItems(items);}}
return items;};NodeBase.prototype.addAllItemsFromOverlapping=function(interval,resultItems){if(interval!==null&&!this.isSearchMatch(interval)){return;}
resultItems.addAll(this.items);if(this.subnode[0]!==null){this.subnode[0].addAllItemsFromOverlapping(interval,resultItems);}
if(this.subnode[1]!==null){this.subnode[1].addAllItemsFromOverlapping(interval,resultItems);}};NodeBase.prototype.remove=function(itemInterval,item){if(!this.isSearchMatch(itemInterval)){return false;}
var found=false,i=0,il=2;for(i;i<il;i++){if(this.subnode[i]!==null){found=this.subnode[i].remove(itemInterval,item);if(found){if(this.subnode[i].isPrunable()){this.subnode[i]=null;}
break;}}}
if(found){return found;}
found=this.items.remove(item);return found;};NodeBase.prototype.isPrunable=function(){return!(this.hasChildren()||this.hasItems());};NodeBase.prototype.hasChildren=function(){var i=0,il=2;for(i;i<il;i++){if(this.subnode[i]!==null){return true;}}
return false;};NodeBase.prototype.hasItems=function(){return!this.items.isEmpty();};NodeBase.prototype.depth=function(){var maxSubDepth=0,i=0,il=2,sqd;for(i;i<il;i++){if(this.subnode[i]!==null){sqd=this.subnode[i].depth();if(sqd>maxSubDepth){maxSubDepth=sqd;}}}
return maxSubDepth+1;};NodeBase.prototype.size=function(){var subSize=0,i=0,il=2;for(i;i<il;i++){if(this.subnode[i]!==null){subSize+=this.subnode[i].size();}}
return subSize+this.items.size();};NodeBase.prototype.nodeSize=function(){var subSize=0,i=0,il=2;for(i;i<il;i++){if(this.subnode[i]!==null){subSize+=this.subnode[i].nodeSize();}}
return subSize+1;};jsts_old.index.bintree.NodeBase=NodeBase;})();(function(){var NodeBase=jsts_old.index.bintree.NodeBase;var Key=jsts_old.index.bintree.Key;var Interval=jsts_old.index.bintree.Interval;var Node=function(interval,level){this.items=new javascript.util.ArrayList();this.subnode=[null,null];this.interval=interval;this.level=level;this.centre=(interval.getMin()+interval.getMax())/2;};Node.prototype=new NodeBase();Node.constructor=Node;Node.createNode=function(itemInterval){var key,node;key=new Key(itemInterval);node=new Node(key.getInterval(),key.getLevel());return node;};Node.createExpanded=function(node,addInterval){var expandInt,largerNode;expandInt=new Interval(addInterval);if(node!==null){expandInt.expandToInclude(node.interval);}
largerNode=Node.createNode(expandInt);if(node!==null){largerNode.insert(node);}
return largerNode;};Node.prototype.getInterval=function(){return this.interval;};Node.prototype.isSearchMatch=function(itemInterval){return itemInterval.overlaps(this.interval);};Node.prototype.getNode=function(searchInterval){var subnodeIndex=NodeBase.getSubnodeIndex(searchInterval,this.centre),node;if(subnodeIndex!=-1){node=this.getSubnode(subnodeIndex);return node.getNode(searchInterval);}else{return this;}};Node.prototype.find=function(searchInterval){var subnodeIndex=NodeBase.getSubnodeIndex(searchInterval,this.centre),node;if(subnodeIndex===-1){return this;}
if(this.subnode[subnodeIndex]!==null){node=this.subnode[subnodeIndex];return node.find(searchInterval);}
return this;};Node.prototype.insert=function(node){var index=NodeBase.getSubnodeIndex(node.interval,this.centre),childNode;if(node.level===this.level-1){this.subnode[index]=node;}else{childNode=this.createSubnode(index);childNode.insert(node);this.subnode[index]=childNode;}};Node.prototype.getSubnode=function(index){if(this.subnode[index]===null){this.subnode[index]=this.createSubnode(index);}
return this.subnode[index];};Node.prototype.createSubnode=function(index){var min,max,subInt,node;min=0.0;max=0.0;switch(index){case 0:min=this.interval.getMin();max=this.centre;break;case 1:min=this.centre;max=this.interval.getMax();break;}
subInt=new Interval(min,max);node=new Node(subInt,this.level-1);return node;};jsts_old.index.bintree.Node=Node;})();(function(){var Node=jsts_old.index.bintree.Node;var NodeBase=jsts_old.index.bintree.NodeBase;var Root=function(){this.subnode=[null,null];this.items=new javascript.util.ArrayList();};Root.prototype=new jsts_old.index.bintree.NodeBase();Root.constructor=Root;Root.origin=0.0;Root.prototype.insert=function(itemInterval,item){var index=NodeBase.getSubnodeIndex(itemInterval,Root.origin),node,largerNode;if(index===-1){this.add(item);return;}
node=this.subnode[index];if(node===null||!node.getInterval().contains(itemInterval)){largerNode=Node.createExpanded(node,itemInterval);this.subnode[index]=largerNode;}
this.insertContained(this.subnode[index],itemInterval,item);};Root.prototype.insertContained=function(tree,itemInterval,item){var isZeroArea,node;isZeroArea=jsts_old.index.IntervalSize.isZeroWidth(itemInterval.getMin(),itemInterval.getMax());node=isZeroArea?tree.find(itemInterval):tree.getNode(itemInterval);node.add(item);};Root.prototype.isSearchMatch=function(interval){return true;};jsts_old.index.bintree.Root=Root;})();(function(){var Interval=jsts_old.index.bintree.Interval;var Root=jsts_old.index.bintree.Root;var Bintree=function(){this.root=new Root();this.minExtent=1.0;};Bintree.ensureExtent=function(itemInterval,minExtent){var min,max;min=itemInterval.getMin();max=itemInterval.getMax();if(min!==max){return itemInterval;}
if(min===max){min=min-(minExtent/2.0);max=min+(minExtent/2.0);}
return new Interval(min,max);};Bintree.prototype.depth=function(){if(this.root!==null){return this.root.depth();}
return 0;};Bintree.prototype.size=function(){if(this.root!==null){return this.root.size();}
return 0;};Bintree.prototype.nodeSize=function(){if(this.root!==null){return this.root.nodeSize();}
return 0;};Bintree.prototype.insert=function(itemInterval,item){this.collectStats(itemInterval);var insertInterval=Bintree.ensureExtent(itemInterval,this.minExtent);this.root.insert(insertInterval,item);};Bintree.prototype.remove=function(itemInterval,item){var insertInterval=Bintree.ensureExtent(itemInterval,this.minExtent);return this.root.remove(insertInterval,item);};Bintree.prototype.iterator=function(){var foundItems=new javascript.util.ArrayList();this.root.addAllItems(foundItems);return foundItems.iterator();};Bintree.prototype.query=function(){if(arguments.length===2){this.queryAndAdd(arguments[0],arguments[1]);}else{var x=arguments[0];if(!x instanceof Interval){x=new Interval(x,x);}
return this.queryInterval(x);}};Bintree.prototype.queryInterval=function(interval){var foundItems=new javascript.util.ArrayList();this.query(interval,foundItems);return foundItems;};Bintree.prototype.queryAndAdd=function(interval,foundItems){this.root.addAllItemsFromOverlapping(interval,foundItems);};Bintree.prototype.collectStats=function(interval){var del=interval.getWidth();if(del<this.minExtent&&del>0.0){this.minExtent=del;}};jsts_old.index.bintree.Bintree=Bintree;})();jsts_old.index.IntervalSize=function(){};jsts_old.index.IntervalSize.MIN_BINARY_EXPONENT=-50;jsts_old.index.IntervalSize.isZeroWidth=function(min,max){var width=max-min;if(width===0.0){return true;}
var maxAbs,scaledInterval,level;maxAbs=Math.max(Math.abs(min),Math.abs(max));scaledInterval=width/maxAbs;level=jsts_old.index.DoubleBits.exponent(scaledInterval);return level<=jsts_old.index.IntervalSize.MIN_BINARY_EXPONENT;};jsts_old.geomgraph.index.SimpleEdgeSetIntersector=function(){};jsts_old.geomgraph.index.SimpleEdgeSetIntersector.prototype=new jsts_old.geomgraph.index.EdgeSetIntersector();jsts_old.geomgraph.index.SimpleEdgeSetIntersector.prototype.nOverlaps=0;jsts_old.geomgraph.index.SimpleEdgeSetIntersector.prototype.computeIntersections=function(edges,si,testAllSegments){if(si instanceof javascript.util.List){this.computeIntersections2.apply(this,arguments);return;}
this.nOverlaps=0;for(var i0=edges.iterator();i0.hasNext();){var edge0=i0.next();for(var i1=edges.iterator();i1.hasNext();){var edge1=i1.next();if(testAllSegments||edge0!=edge1)
this.computeIntersects(edge0,edge1,si);}}};jsts_old.geomgraph.index.SimpleEdgeSetIntersector.prototype.computeIntersections2=function(edges0,edges1,si){this.nOverlaps=0;for(var i0=edges0.iterator();i0.hasNext();){var edge0=i0.next();for(var i1=edges1.iterator();i1.hasNext();){var edge1=i1.next();this.computeIntersects(edge0,edge1,si);}}};jsts_old.geomgraph.index.SimpleEdgeSetIntersector.prototype.computeIntersects=function(e0,e1,si){var pts0=e0.getCoordinates();var pts1=e1.getCoordinates();var i0,i1;for(i0=0;i0<pts0.length-1;i0++){for(i1=0;i1<pts1.length-1;i1++){si.addIntersections(e0,i0,e1,i1);}}};jsts_old.geom.Point=function(coordinate,factory){this.factory=factory;if(coordinate===undefined)
return;this.coordinate=coordinate;};jsts_old.geom.Point.prototype=new jsts_old.geom.Geometry();jsts_old.geom.Point.constructor=jsts_old.geom.Point;jsts_old.geom.Point.CLASS_NAME='jsts_old.geom.Point';jsts_old.geom.Point.prototype.coordinate=null;jsts_old.geom.Point.prototype.getX=function(){return this.coordinate.x;};jsts_old.geom.Point.prototype.getY=function(){return this.coordinate.y;};jsts_old.geom.Point.prototype.getCoordinate=function(){return this.coordinate;};jsts_old.geom.Point.prototype.getCoordinates=function(){return this.isEmpty()?[]:[this.coordinate];};jsts_old.geom.Point.prototype.isEmpty=function(){return this.coordinate===null;};jsts_old.geom.Point.prototype.equalsExact=function(other,tolerance){if(!this.isEquivalentClass(other)){return false;}
if(this.isEmpty()&&other.isEmpty()){return true;}
return this.equal(other.getCoordinate(),this.getCoordinate(),tolerance);};jsts_old.geom.Point.prototype.getNumPoints=function(){return this.isEmpty()?0:1;};jsts_old.geom.Point.prototype.isSimple=function(){return true;};jsts_old.geom.Point.prototype.getBoundary=function(){return new jsts_old.geom.GeometryCollection(null);};jsts_old.geom.Point.prototype.computeEnvelopeInternal=function(){if(this.isEmpty()){return new jsts_old.geom.Envelope();}
return new jsts_old.geom.Envelope(this.coordinate);};jsts_old.geom.Point.prototype.apply=function(filter){if(filter instanceof jsts_old.geom.GeometryFilter||filter instanceof jsts_old.geom.GeometryComponentFilter){filter.filter(this);}else if(filter instanceof jsts_old.geom.CoordinateFilter){if(this.isEmpty()){return;}
filter.filter(this.getCoordinate());}};jsts_old.geom.Point.prototype.clone=function(){return new jsts_old.geom.Point(this.coordinate.clone(),this.factory);};jsts_old.geom.Point.prototype.getDimension=function(){return 0;};jsts_old.geom.Point.prototype.getBoundaryDimension=function(){return jsts_old.geom.Dimension.FALSE;};jsts_old.geom.Point.prototype.reverse=function(){return this.clone();};jsts_old.geom.Point.prototype.isValid=function(){if(!jsts_old.operation.valid.IsValidOp.isValid(this.getCoordinate())){return false;}
return true;};jsts_old.geom.Point.prototype.normalize=function(){};jsts_old.geom.Point.prototype.compareToSameClass=function(other){var point=other;return this.getCoordinate().compareTo(point.getCoordinate());};jsts_old.geom.Point.prototype.getGeometryType=function(){return'Point';};jsts_old.geom.Point.prototype.hashCode=function(){return'Point_'+this.coordinate.hashCode();};jsts_old.geom.Point.prototype.CLASS_NAME='jsts_old.geom.Point';jsts_old.geomgraph.Edge=function(pts,label){this.pts=pts;this.label=label;this.eiList=new jsts_old.geomgraph.EdgeIntersectionList(this);this.depth=new jsts_old.geomgraph.Depth();};jsts_old.geomgraph.Edge.prototype=new jsts_old.geomgraph.GraphComponent();jsts_old.geomgraph.Edge.constructor=jsts_old.geomgraph.Edge;jsts_old.geomgraph.Edge.updateIM=function(label,im){im.setAtLeastIfValid(label.getLocation(0,jsts_old.geomgraph.Position.ON),label.getLocation(1,jsts_old.geomgraph.Position.ON),1);if(label.isArea()){im.setAtLeastIfValid(label.getLocation(0,jsts_old.geomgraph.Position.LEFT),label.getLocation(1,jsts_old.geomgraph.Position.LEFT),2);im.setAtLeastIfValid(label.getLocation(0,jsts_old.geomgraph.Position.RIGHT),label.getLocation(1,jsts_old.geomgraph.Position.RIGHT),2);}};jsts_old.geomgraph.Edge.prototype.pts=null;jsts_old.geomgraph.Edge.prototype.env=null;jsts_old.geomgraph.Edge.prototype.name=null;jsts_old.geomgraph.Edge.prototype.mce=null;jsts_old.geomgraph.Edge.prototype._isIsolated=true;jsts_old.geomgraph.Edge.prototype.depth=null;jsts_old.geomgraph.Edge.prototype.depthDelta=0;jsts_old.geomgraph.Edge.prototype.eiList=null;jsts_old.geomgraph.Edge.prototype.getNumPoints=function(){return this.pts.length;};jsts_old.geomgraph.Edge.prototype.getEnvelope=function(){if(this.env===null){this.env=new jsts_old.geom.Envelope();for(var i=0;i<this.pts.length;i++){this.env.expandToInclude(pts[i]);}}
return env;};jsts_old.geomgraph.Edge.prototype.getDepth=function(){return this.depth;};jsts_old.geomgraph.Edge.prototype.getDepthDelta=function(){return this.depthDelta;};jsts_old.geomgraph.Edge.prototype.setDepthDelta=function(depthDelta){this.depthDelta=depthDelta;};jsts_old.geomgraph.Edge.prototype.getCoordinates=function(){return this.pts;};jsts_old.geomgraph.Edge.prototype.getCoordinate=function(i){if(i===undefined){if(this.pts.length>0){return this.pts[0];}else{return null;}}
return this.pts[i];};jsts_old.geomgraph.Edge.prototype.isClosed=function(){return this.pts[0].equals(this.pts[this.pts.length-1]);};jsts_old.geomgraph.Edge.prototype.setIsolated=function(isIsolated){this._isIsolated=isIsolated;};jsts_old.geomgraph.Edge.prototype.isIsolated=function(){return this._isIsolated;};jsts_old.geomgraph.Edge.prototype.addIntersections=function(li,segmentIndex,geomIndex){for(var i=0;i<li.getIntersectionNum();i++){this.addIntersection(li,segmentIndex,geomIndex,i);}};jsts_old.geomgraph.Edge.prototype.addIntersection=function(li,segmentIndex,geomIndex,intIndex){var intPt=new jsts_old.geom.Coordinate(li.getIntersection(intIndex));var normalizedSegmentIndex=segmentIndex;var dist=li.getEdgeDistance(geomIndex,intIndex);var nextSegIndex=normalizedSegmentIndex+1;if(nextSegIndex<this.pts.length){var nextPt=this.pts[nextSegIndex];if(intPt.equals2D(nextPt)){normalizedSegmentIndex=nextSegIndex;dist=0.0;}}
var ei=this.eiList.add(intPt,normalizedSegmentIndex,dist);};jsts_old.geomgraph.Edge.prototype.getMaximumSegmentIndex=function(){return this.pts.length-1;};jsts_old.geomgraph.Edge.prototype.getEdgeIntersectionList=function(){return this.eiList;};jsts_old.geomgraph.Edge.prototype.isClosed=function()
{return this.pts[0].equals(this.pts[this.pts.length-1]);};jsts_old.geomgraph.Edge.prototype.isCollapsed=function()
{if(!this.label.isArea())return false;if(this.pts.length!=3)return false;if(this.pts[0].equals(this.pts[2]))return true;return false;};jsts_old.geomgraph.Edge.prototype.getCollapsedEdge=function()
{var newPts=[];newPts[0]=this.pts[0];newPts[1]=this.pts[1];var newe=new jsts_old.geomgraph.Edge(newPts,jsts_old.geomgraph.Label.toLineLabel(this.label));return newe;};jsts_old.geomgraph.Edge.prototype.computeIM=function(im){jsts_old.geomgraph.Edge.updateIM(this.label,im);};jsts_old.geomgraph.Edge.prototype.isPointwiseEqual=function(e)
{if(this.pts.length!=e.pts.length)return false;for(var i=0;i<this.pts.length;i++){if(!this.pts[i].equals2D(e.pts[i])){return false;}}
return true;};jsts_old.noding.Octant=function(){throw jsts_old.error.AbstractMethodInvocationError();};jsts_old.noding.Octant.octant=function(dx,dy){if(dx instanceof jsts_old.geom.Coordinate){return jsts_old.noding.Octant.octant2.apply(this,arguments);}
if(dx===0.0&&dy===0.0)
throw new jsts_old.error.IllegalArgumentError('Cannot compute the octant for point ( '+dx+', '+dy+' )');var adx=Math.abs(dx);var ady=Math.abs(dy);if(dx>=0){if(dy>=0){if(adx>=ady)
return 0;else
return 1;}
else{if(adx>=ady)
return 7;else
return 6;}}
else{if(dy>=0){if(adx>=ady)
return 3;else
return 2;}
else{if(adx>=ady)
return 4;else
return 5;}}};jsts_old.noding.Octant.octant2=function(p0,p1){var dx=p1.x-p0.x;var dy=p1.y-p0.y;if(dx===0.0&&dy===0.0)
throw new jsts_old.error.IllegalArgumentError('Cannot compute the octant for two identical points '+p0);return jsts_old.noding.Octant.octant(dx,dy);};jsts_old.operation.union.UnionInteracting=function(g0,g1){this.g0=g0;this.g1=g1;this.geomFactory=g0.getFactory();this.interacts0=[];this.interacts1=[];};jsts_old.operation.union.UnionInteracting.union=function(g0,g1){var uue=new jsts_old.operation.union.UnionInteracting(g0,g1);return uue.union();};jsts_old.operation.union.UnionInteracting.prototype.geomFactory=null;jsts_old.operation.union.UnionInteracting.prototype.g0=null;jsts_old.operation.union.UnionInteracting.prototype.g1=null;jsts_old.operation.union.UnionInteracting.prototype.interacts0=null;jsts_old.operation.union.UnionInteracting.prototype.interacts1=null;jsts_old.operation.union.UnionInteracting.prototype.union=function(){this.computeInteracting();var int0=this.extractElements(this.g0,this.interacts0,true);var int1=this.extractElements(this.g1,this.interacts1,true);if(int0.isEmpty()||int1.isEmpty()){}
var union=in0.union(int1);var disjoint0=this.extractElements(this.g0,this.interacts0,false);var disjoint1=this.extractElements(this.g1,this.interacts1,false);var overallUnion=jsts_old.geom.util.GeometryCombiner.combine(union,disjoint0,disjoint1);return overallUnion;};jsts_old.operation.union.UnionInteracting.prototype.bufferUnion=function(g0,g1){var factory=g0.getFactory();var gColl=factory.createGeometryCollection([g0,g1]);var unionAll=gColl.buffer(0.0);return unionAll;};jsts_old.operation.union.UnionInteracting.prototype.computeInteracting=function(elem0){if(!elem0){for(var i=0,l=this.g0.getNumGeometries();i<l;i++){var elem=this.g0.getGeometryN(i);this.interacts0[i]=this.computeInteracting(elem);}}
else{var interactsWithAny=false;for(var i=0,l=g1.getNumGeometries();i<l;i++){var elem1=this.g1.getGeometryN(i);var interacts=elem1.getEnvelopeInternal().intersects(elem0.getEnvelopeInternal());if(interacts){this.interacts1[i]=true;interactsWithAny=true;}}
return interactsWithAny;}};jsts_old.operation.union.UnionInteracting.prototype.extractElements=function(geom,interacts,isInteracting){var extractedGeoms=[];for(var i=0,l=geom.getNumGeometries();i<l;i++){var elem=geom.getGeometryN(i);if(interacts[i]===isInteracting){extractedGeoms.push(elem);}}
return this.geomFactory.buildGeometry(extractedGeoms);};jsts_old.io.OpenLayersParser=function(geometryFactory){this.geometryFactory=geometryFactory||new jsts_old.geom.GeometryFactory();};jsts_old.io.OpenLayersParser.prototype.read=function(geometry){if(geometry.CLASS_NAME==='OpenLayers.Geometry.Point'){return this.convertFromPoint(geometry);}else if(geometry.CLASS_NAME==='OpenLayers.Geometry.LineString'){return this.convertFromLineString(geometry);}else if(geometry.CLASS_NAME==='OpenLayers.Geometry.LinearRing'){return this.convertFromLinearRing(geometry);}else if(geometry.CLASS_NAME==='OpenLayers.Geometry.Polygon'){return this.convertFromPolygon(geometry);}else if(geometry.CLASS_NAME==='OpenLayers.Geometry.MultiPoint'){return this.convertFromMultiPoint(geometry);}else if(geometry.CLASS_NAME==='OpenLayers.Geometry.MultiLineString'){return this.convertFromMultiLineString(geometry);}else if(geometry.CLASS_NAME==='OpenLayers.Geometry.MultiPolygon'){return this.convertFromMultiPolygon(geometry);}else if(geometry.CLASS_NAME==='OpenLayers.Geometry.Collection'){return this.convertFromCollection(geometry);}};jsts_old.io.OpenLayersParser.prototype.convertFromPoint=function(point){return this.geometryFactory.createPoint(new jsts_old.geom.Coordinate(point.x,point.y));};jsts_old.io.OpenLayersParser.prototype.convertFromLineString=function(lineString){var i;var coordinates=[];for(i=0;i<lineString.components.length;i++){coordinates.push(new jsts_old.geom.Coordinate(lineString.components[i].x,lineString.components[i].y));}
return this.geometryFactory.createLineString(coordinates);};jsts_old.io.OpenLayersParser.prototype.convertFromLinearRing=function(linearRing){var i;var coordinates=[];for(i=0;i<linearRing.components.length;i++){coordinates.push(new jsts_old.geom.Coordinate(linearRing.components[i].x,linearRing.components[i].y));}
return this.geometryFactory.createLinearRing(coordinates);};jsts_old.io.OpenLayersParser.prototype.convertFromPolygon=function(polygon){var i;var shell=null;var holes=[];for(i=0;i<polygon.components.length;i++){var linearRing=this.convertFromLinearRing(polygon.components[i]);if(i===0){shell=linearRing;}else{holes.push(linearRing);}}
return this.geometryFactory.createPolygon(shell,holes);};jsts_old.io.OpenLayersParser.prototype.convertFromMultiPoint=function(multiPoint){var i;var points=[];for(i=0;i<multiPoint.components.length;i++){points.push(this.convertFromPoint(multiPoint.components[i]));}
return this.geometryFactory.createMultiPoint(points);};jsts_old.io.OpenLayersParser.prototype.convertFromMultiLineString=function(multiLineString){var i;var lineStrings=[];for(i=0;i<multiLineString.components.length;i++){lineStrings.push(this.convertFromLineString(multiLineString.components[i]));}
return this.geometryFactory.createMultiLineString(lineStrings);};jsts_old.io.OpenLayersParser.prototype.convertFromMultiPolygon=function(multiPolygon){var i;var polygons=[];for(i=0;i<multiPolygon.components.length;i++){polygons.push(this.convertFromPolygon(multiPolygon.components[i]));}
return this.geometryFactory.createMultiPolygon(polygons);};jsts_old.io.OpenLayersParser.prototype.convertFromCollection=function(collection){var i;var geometries=[];for(i=0;i<collection.components.length;i++){geometries.push(this.convertFrom(collection.components[i]));}
return this.geometryFactory.createGeometryCollection(geometries);};jsts_old.io.OpenLayersParser.prototype.write=function(geometry){if(geometry.CLASS_NAME==='jsts_old.geom.Point'){return this.convertToPoint(geometry.coordinate);}else if(geometry.CLASS_NAME==='jsts_old.geom.LineString'){return this.convertToLineString(geometry);}else if(geometry.CLASS_NAME==='jsts_old.geom.LinearRing'){return this.convertToLinearRing(geometry);}else if(geometry.CLASS_NAME==='jsts_old.geom.Polygon'){return this.convertToPolygon(geometry);}else if(geometry.CLASS_NAME==='jsts_old.geom.MultiPoint'){return this.convertToMultiPoint(geometry);}else if(geometry.CLASS_NAME==='jsts_old.geom.MultiLineString'){return this.convertToMultiLineString(geometry);}else if(geometry.CLASS_NAME==='jsts_old.geom.MultiPolygon'){return this.convertToMultiPolygon(geometry);}else if(geometry.CLASS_NAME==='jsts_old.geom.GeometryCollection'){return this.convertToCollection(geometry);}};jsts_old.io.OpenLayersParser.prototype.convertToPoint=function(coordinate){return new OpenLayers.Geometry.Point(coordinate.x,coordinate.y);};jsts_old.io.OpenLayersParser.prototype.convertToLineString=function(lineString){var i;var points=[];for(i=0;i<lineString.points.length;i++){var coordinate=lineString.points[i];points.push(this.convertToPoint(coordinate));}
return new OpenLayers.Geometry.LineString(points);};jsts_old.io.OpenLayersParser.prototype.convertToLinearRing=function(linearRing){var i;var points=[];for(i=0;i<linearRing.points.length;i++){var coordinate=linearRing.points[i];points.push(this.convertToPoint(coordinate));}
return new OpenLayers.Geometry.LinearRing(points);};jsts_old.io.OpenLayersParser.prototype.convertToPolygon=function(polygon){var i;var rings=[];rings.push(this.convertToLinearRing(polygon.shell));for(i=0;i<polygon.holes.length;i++){var ring=polygon.holes[i];rings.push(this.convertToLinearRing(ring));}
return new OpenLayers.Geometry.Polygon(rings);};jsts_old.io.OpenLayersParser.prototype.convertToMultiPoint=function(multiPoint){var i;var points=[];for(i=0;i<multiPoint.geometries.length;i++){var coordinate=multiPoint.geometries[i].coordinate;points.push(new OpenLayers.Geometry.Point(coordinate.x,coordinate.y));}
return new OpenLayers.Geometry.MultiPoint(points);};jsts_old.io.OpenLayersParser.prototype.convertToMultiLineString=function(multiLineString){var i;var lineStrings=[];for(i=0;i<multiLineString.geometries.length;i++){lineStrings.push(this.convertToLineString(multiLineString.geometries[i]));}
return new OpenLayers.Geometry.MultiLineString(lineStrings);};jsts_old.io.OpenLayersParser.prototype.convertToMultiPolygon=function(multiPolygon){var i;var polygons=[];for(i=0;i<multiPolygon.geometries.length;i++){polygons.push(this.convertToPolygon(multiPolygon.geometries[i]));}
return new OpenLayers.Geometry.MultiPolygon(polygons);};jsts_old.io.OpenLayersParser.prototype.convertToCollection=function(geometryCollection){var i;var geometries=[];for(i=0;i<geometryCollection.geometries.length;i++){var geometry=geometryCollection.geometries[i];var geometryOpenLayers=this.write(geometry);geometries.push(geometryOpenLayers);}
return new OpenLayers.Geometry.Collection(geometries);};jsts_old.triangulate.quadedge.TrianglePredicate=function(){};jsts_old.triangulate.quadedge.TrianglePredicate.isInCircleNonRobust=function(a,b,c,p){var isInCircle=(a.x*a.x+a.y*a.y)*jsts_old.triangulate.quadedge.TrianglePredicate.triArea(b,c,p)-
(b.x*b.x+b.y*b.y)*jsts_old.triangulate.quadedge.TrianglePredicate.triArea(a,c,p)+
(c.x*c.x+c.y*c.y)*jsts_old.triangulate.quadedge.TrianglePredicate.triArea(a,b,p)-
(p.x*p.x+p.y*p.y)*jsts_old.triangulate.quadedge.TrianglePredicate.triArea(a,b,c)>0;return isInCircle;};jsts_old.triangulate.quadedge.TrianglePredicate.isInCircleNormalized=function(a,b,c,p){var adx,ady,bdx,bdy,cdx,cdy,abdet,bcdet,cadet,alift,blift,clift,disc;adx=a.x-p.x;ady=a.y-p.y;bdx=b.x-p.x;bdy=b.y-p.y;cdx=c.x-p.x;cdy=c.y-p.y;abdet=adx*bdy-bdx*ady;bcdet=bdx*cdy-cdx*bdy;cadet=cdx*ady-adx*cdy;alift=adx*adx+ady*ady;blift=bdx*bdx+bdy*bdy;clift=cdx*cdx+cdy*cdy;disc=alift*bcdet+blift*cadet+clift*abdet;return disc>0;};jsts_old.triangulate.quadedge.TrianglePredicate.triArea=function(a,b,c){return(b.x-a.x)*(c.y-a.y)-(b.y-a.y)*(c.x-a.x);};jsts_old.triangulate.quadedge.TrianglePredicate.isInCircleRobust=function(a,b,c,p){return jsts_old.triangulate.quadedge.TrianglePredicate.isInCircleNormalized(a,b,c,p);};jsts_old.triangulate.quadedge.TrianglePredicate.isInCircleDDSlow=function(a,b,c,p){var px,py,ax,ay,bx,by,cx,cy,aTerm,bTerm,cTerm,pTerm,sum,isInCircle;px=jsts_old.math.DD.valueOf(p.x);py=jsts_old.math.DD.valueOf(p.y);ax=jsts_old.math.DD.valueOf(a.x);ay=jsts_old.math.DD.valueOf(a.y);bx=jsts_old.math.DD.valueOf(b.x);by=jsts_old.math.DD.valueOf(b.y);cx=jsts_old.math.DD.valueOf(c.x);cy=jsts_old.math.DD.valueOf(c.y);aTerm=(ax.multiply(ax).add(ay.multiply(ay))).multiply(jsts_old.triangulate.quadedge.TrianglePredicate.triAreaDDSlow(bx,by,cx,cy,px,py));bTerm=(bx.multiply(bx).add(by.multiply(by))).multiply(jsts_old.triangulate.quadedge.TrianglePredicate.triAreaDDSlow(ax,ay,cx,cy,px,py));cTerm=(cx.multiply(cx).add(cy.multiply(cy))).multiply(jsts_old.triangulate.quadedge.TrianglePredicate.triAreaDDSlow(ax,ay,bx,by,px,py));pTerm=(px.multiply(px).add(py.multiply(py))).multiply(jsts_old.triangulate.quadedge.TrianglePredicate.triAreaDDSlow(ax,ay,bx,by,cx,cy));sum=aTerm.subtract(bTerm).add(cTerm).subtract(pTerm);isInCircle=sum.doubleValue()>0;return isInCircle;};jsts_old.triangulate.quadedge.TrianglePredicate.triAreaDDSlow=function(ax,ay,bx,by,cx,cy){return(bx.subtract(ax).multiply(cy.subtract(ay)).subtract(by.subtract(ay).multiply(cx.subtract(ax))));};jsts_old.triangulate.quadedge.TrianglePredicate.isInCircleDDFast=function(a,b,c,p){var aTerm,bTerm,cTerm,pTerm,sum,isInCircle;aTerm=(jsts_old.math.DD.sqr(a.x).selfAdd(jsts_old.math.DD.sqr(a.y))).selfMultiply(jsts_old.triangulate.quadedge.TrianglePredicate.triAreaDDFast(b,c,p));bTerm=(jsts_old.math.DD.sqr(b.x).selfAdd(jsts_old.math.DD.sqr(b.y))).selfMultiply(jsts_old.triangulate.quadedge.TrianglePredicate.triAreaDDFast(a,c,p));cTerm=(jsts_old.math.DD.sqr(c.x).selfAdd(jsts_old.math.DD.sqr(c.y))).selfMultiply(jsts_old.triangulate.quadedge.TrianglePredicate.triAreaDDFast(a,b,p));pTerm=(jsts_old.math.DD.sqr(p.x).selfAdd(jsts_old.math.DD.sqr(p.y))).selfMultiply(jsts_old.triangulate.quadedge.TrianglePredicate.triAreaDDFast(a,b,c));sum=aTerm.selfSubtract(bTerm).selfAdd(cTerm).selfSubtract(pTerm);isInCircle=sum.doubleValue()>0;return isInCircle;};jsts_old.triangulate.quadedge.TrianglePredicate.triAreaDDFast=function(a,b,c){var t1,t2;t1=jsts_old.math.DD.valueOf(b.x).selfSubtract(a.x).selfMultiply(jsts_old.math.DD.valueOf(c.y).selfSubtract(a.y));t2=jsts_old.math.DD.valueOf(b.y).selSubtract(a.y).selfMultiply(jsts_old.math.DD.valueOf(c.x).selfSubtract(a.x));return t1.selfSubtract(t2);};jsts_old.triangulate.quadedge.TrianglePredicate.isInCircleDDNormalized=function(a,b,c,p){var adx,ady,bdx,bdy,cdx,cdy,abdet,bcdet,cadet,alift,blift,clift,sum,isInCircle;adx=jsts_old.math.DD.valueOf(a.x).selfSubtract(p.x);ady=jsts_old.math.DD.valueOf(a.y).selfSubtract(p.y);bdx=jsts_old.math.DD.valueOf(b.x).selfSubtract(p.x);bdx=jsts_old.math.DD.valueOf(b.y).selfSubtract(p.y);cdx=jsts_old.math.DD.valueOf(c.x).selfSubtract(p.x);cdx=jsts_old.math.DD.valueOf(c.y).selfSubtract(p.y);abdet=adx.multiply(bdy).selfSubtract(bdx.multiply(ady));bcdet=bdx.multiply(cdy).selfSubtract(cdx.multiply(bdy));cadet=cdx.multiply(ady).selfSubtract(adx.multiply(cdy));alift=adx.multiply(adx).selfAdd(ady.multiply(ady));blift=bdx.multiply(bdx).selfAdd(bdy.multiply(bdy));clift=cdx.multiply(cdx).selfAdd(cdy.multiply(cdy));sum=alift.selfMultiply(bcdet).selfAdd(blift.selfMultiply(cadet)).selfAdd(clift.selfMultiply(abdet));isInCircle=sum.doubleValue()>0;return isInCircle;};jsts_old.triangulate.quadedge.TrianglePredicate.isInCircleCC=function(a,b,c,p){var cc,ccRadius,pRadiusDiff;cc=jsts_old.geom.Triangle.circumcentre(a,b,c);ccRadius=a.distance(cc);pRadiusDiff=p.distance(cc)-ccRadius;return pRadiusDiff<=0;};jsts_old.operation.union.PointGeometryUnion=function(pointGeom,otherGeom){this.pointGeom=pointGeom;this.otherGeom=otherGeom;this.geomFact=otherGeom.getFactory();};jsts_old.operation.union.PointGeometryUnion.union=function(pointGeom,otherGeom){var unioner=new jsts_old.operation.union.PointGeometryUnion(pointGeom,otherGeom);return unioner.union();};jsts_old.operation.union.PointGeometryUnion.prototype.pointGeom=null;jsts_old.operation.union.PointGeometryUnion.prototype.otherGeom=null;jsts_old.operation.union.PointGeometryUnion.prototype.geomFact=null;jsts_old.operation.union.PointGeometryUnion.prototype.union=function(){var locator=new jsts_old.algorithm.PointLocator();var exteriorCoords=[];for(var i=0,l=this.pointGeom.getNumGeometries();i<l;i++){var point=this.pointGeom.getGeometryN(i);var coord=point.getCoordinate();var loc=locator.locate(coord,this.otherGeom);if(loc===jsts_old.geom.Location.EXTERIOR){var include=true;for(var j=exteriorCoords.length;i--;){if(exteriorCoords[j].equals(coord)){include=false;break;}}
if(include){exteriorCoords.push(coord);}}}
exteriorCoords.sort(function(x,y){return x.compareTo(y);});if(exteriorCoords.length===0){return this.otherGeom;}
var ptComp=null;var coords=jsts_old.geom.CoordinateArrays.toCoordinateArray(exteriorCoords);if(coords.length===1){ptComp=this.geomFact.createPoint(coords[0]);}
else{ptComp=this.geomFact.createMultiPoint(coords);}
return jsts_old.geom.util.GeometryCombiner.combine(ptComp,this.otherGeom);};jsts_old.noding.IntersectionFinderAdder=function(li){this.li=li;this.interiorIntersections=new javascript.util.ArrayList();};jsts_old.noding.IntersectionFinderAdder.prototype=new jsts_old.noding.SegmentIntersector();jsts_old.noding.IntersectionFinderAdder.constructor=jsts_old.noding.IntersectionFinderAdder;jsts_old.noding.IntersectionFinderAdder.prototype.li=null;jsts_old.noding.IntersectionFinderAdder.prototype.interiorIntersections=null;jsts_old.noding.IntersectionFinderAdder.prototype.getInteriorIntersections=function(){return this.interiorIntersections;};jsts_old.noding.IntersectionFinderAdder.prototype.processIntersections=function(e0,segIndex0,e1,segIndex1){if(e0===e1&&segIndex0===segIndex1)
return;var p00=e0.getCoordinates()[segIndex0];var p01=e0.getCoordinates()[segIndex0+1];var p10=e1.getCoordinates()[segIndex1];var p11=e1.getCoordinates()[segIndex1+1];this.li.computeIntersection(p00,p01,p10,p11);if(this.li.hasIntersection()){if(this.li.isInteriorIntersection()){for(var intIndex=0;intIndex<this.li.getIntersectionNum();intIndex++){this.interiorIntersections.add(this.li.getIntersection(intIndex));}
e0.addIntersections(this.li,segIndex0,0);e1.addIntersections(this.li,segIndex1,1);}}};jsts_old.noding.IntersectionFinderAdder.prototype.isDone=function(){return false;};jsts_old.noding.snapround.MCIndexSnapRounder=function(pm){this.pm=pm;this.li=new jsts_old.algorithm.RobustLineIntersector();this.li.setPrecisionModel(pm);this.scaleFactor=pm.getScale();};jsts_old.noding.snapround.MCIndexSnapRounder.prototype=new jsts_old.noding.Noder();jsts_old.noding.snapround.MCIndexSnapRounder.constructor=jsts_old.noding.snapround.MCIndexSnapRounder;jsts_old.noding.snapround.MCIndexSnapRounder.prototype.pm=null;jsts_old.noding.snapround.MCIndexSnapRounder.prototype.li=null;jsts_old.noding.snapround.MCIndexSnapRounder.prototype.scaleFactor=null;jsts_old.noding.snapround.MCIndexSnapRounder.prototype.noder=null;jsts_old.noding.snapround.MCIndexSnapRounder.prototype.pointSnapper=null;jsts_old.noding.snapround.MCIndexSnapRounder.prototype.nodedSegStrings=null;jsts_old.noding.snapround.MCIndexSnapRounder.prototype.getNodedSubstrings=function(){return jsts_old.noding.NodedSegmentString.getNodedSubstrings(this.nodedSegStrings);};jsts_old.noding.snapround.MCIndexSnapRounder.prototype.computeNodes=function(inputSegmentStrings){this.nodedSegStrings=inputSegmentStrings;this.noder=new jsts_old.noding.MCIndexNoder();this.pointSnapper=new jsts_old.noding.snapround.MCIndexPointSnapper(this.noder.getIndex());this.snapRound(inputSegmentStrings,this.li);};jsts_old.noding.snapround.MCIndexSnapRounder.prototype.snapRound=function(segStrings,li){var intersections=this.findInteriorIntersections(segStrings,li);this.computeIntersectionSnaps(intersections);this.computeVertexSnaps(segStrings);};jsts_old.noding.snapround.MCIndexSnapRounder.prototype.findInteriorIntersections=function(segStrings,li){var intFinderAdder=new jsts_old.noding.IntersectionFinderAdder(li);this.noder.setSegmentIntersector(intFinderAdder);this.noder.computeNodes(segStrings);return intFinderAdder.getInteriorIntersections();};jsts_old.noding.snapround.MCIndexSnapRounder.prototype.computeIntersectionSnaps=function(snapPts){for(var it=snapPts.iterator();it.hasNext();){var snapPt=it.next();var hotPixel=new jsts_old.noding.snapround.HotPixel(snapPt,this.scaleFactor,this.li);this.pointSnapper.snap(hotPixel);}};jsts_old.noding.snapround.MCIndexSnapRounder.prototype.computeVertexSnaps=function(edges){if(edges instanceof jsts_old.noding.NodedSegmentString){this.computeVertexSnaps2.apply(this,arguments);return;}
for(var i0=edges.iterator();i0.hasNext();){var edge0=i0.next();this.computeVertexSnaps(edge0);}};jsts_old.noding.snapround.MCIndexSnapRounder.prototype.computeVertexSnaps2=function(e){var pts0=e.getCoordinates();for(var i=0;i<pts0.length-1;i++){var hotPixel=new jsts_old.noding.snapround.HotPixel(pts0[i],this.scaleFactor,this.li);var isNodeAdded=this.pointSnapper.snap(hotPixel,e,i);if(isNodeAdded){e.addIntersection(pts0[i],i);}}};jsts_old.operation.valid.ConnectedInteriorTester=function(geomGraph){this.geomGraph=geomGraph;this.geometryFactory=new jsts_old.geom.GeometryFactory();this.disconnectedRingcoord=null;};jsts_old.operation.valid.ConnectedInteriorTester.findDifferentPoint=function(coord,pt){var i=0,il=coord.length;for(i;i<il;i++){if(!coord[i].equals(pt))
return coord[i];}
return null;};jsts_old.operation.valid.ConnectedInteriorTester.prototype.getCoordinate=function(){return this.disconnectedRingcoord;};jsts_old.operation.valid.ConnectedInteriorTester.prototype.isInteriorsConnected=function(){var splitEdges=new javascript.util.ArrayList();this.geomGraph.computeSplitEdges(splitEdges);var graph=new jsts_old.geomgraph.PlanarGraph(new jsts_old.operation.overlay.OverlayNodeFactory());graph.addEdges(splitEdges);this.setInteriorEdgesInResult(graph);graph.linkResultDirectedEdges();var edgeRings=this.buildEdgeRings(graph.getEdgeEnds());this.visitShellInteriors(this.geomGraph.getGeometry(),graph);return!this.hasUnvisitedShellEdge(edgeRings);};jsts_old.operation.valid.ConnectedInteriorTester.prototype.setInteriorEdgesInResult=function(graph){var it=graph.getEdgeEnds().iterator(),de;while(it.hasNext()){de=it.next();if(de.getLabel().getLocation(0,jsts_old.geomgraph.Position.RIGHT)==jsts_old.geom.Location.INTERIOR){de.setInResult(true);}}};jsts_old.operation.valid.ConnectedInteriorTester.prototype.buildEdgeRings=function(dirEdges){var edgeRings=new javascript.util.ArrayList();for(var it=dirEdges.iterator();it.hasNext();){var de=it.next();if(de.isInResult()&&de.getEdgeRing()==null){var er=new jsts_old.operation.overlay.MaximalEdgeRing(de,this.geometryFactory);er.linkDirectedEdgesForMinimalEdgeRings();var minEdgeRings=er.buildMinimalRings();var i=0,il=minEdgeRings.length;for(i;i<il;i++){edgeRings.add(minEdgeRings[i]);}}}
return edgeRings;};jsts_old.operation.valid.ConnectedInteriorTester.prototype.visitShellInteriors=function(g,graph){if(g instanceof jsts_old.geom.Polygon){var p=g;this.visitInteriorRing(p.getExteriorRing(),graph);}
if(g instanceof jsts_old.geom.MultiPolygon){var mp=g;for(var i=0;i<mp.getNumGeometries();i++){var p=mp.getGeometryN(i);this.visitInteriorRing(p.getExteriorRing(),graph);}}};jsts_old.operation.valid.ConnectedInteriorTester.prototype.visitInteriorRing=function(ring,graph){var pts=ring.getCoordinates();var pt0=pts[0];var pt1=jsts_old.operation.valid.ConnectedInteriorTester.findDifferentPoint(pts,pt0);var e=graph.findEdgeInSameDirection(pt0,pt1);var de=graph.findEdgeEnd(e);var intDe=null;if(de.getLabel().getLocation(0,jsts_old.geomgraph.Position.RIGHT)==jsts_old.geom.Location.INTERIOR){intDe=de;}else if(de.getSym().getLabel().getLocation(0,jsts_old.geomgraph.Position.RIGHT)==jsts_old.geom.Location.INTERIOR){intDe=de.getSym();}
this.visitLinkedDirectedEdges(intDe);};jsts_old.operation.valid.ConnectedInteriorTester.prototype.visitLinkedDirectedEdges=function(start){var startDe=start;var de=start;do{de.setVisited(true);de=de.getNext();}while(de!=startDe);};jsts_old.operation.valid.ConnectedInteriorTester.prototype.hasUnvisitedShellEdge=function(edgeRings){for(var i=0;i<edgeRings.size();i++){var er=edgeRings.get(i);if(er.isHole()){continue;}
var edges=er.getEdges();var de=edges[0];if(de.getLabel().getLocation(0,jsts_old.geomgraph.Position.RIGHT)!=jsts_old.geom.Location.INTERIOR){continue;}
for(var j=0;j<edges.length;j++){de=edges[j];if(!de.isVisited()){disconnectedRingcoord=de.getCoordinate();return true;}}}
return false;};jsts_old.index.chain.MonotoneChainSelectAction=function(){this.tempEnv1=new jsts_old.geom.Envelope();this.selectedSegment=new jsts_old.geom.LineSegment();};jsts_old.index.chain.MonotoneChainSelectAction.prototype.tempEnv1=null;jsts_old.index.chain.MonotoneChainSelectAction.prototype.selectedSegment=null;jsts_old.index.chain.MonotoneChainSelectAction.prototype.select=function(mc,start){mc.getLineSegment(start,this.selectedSegment);this.select2(this.selectedSegment);};jsts_old.index.chain.MonotoneChainSelectAction.prototype.select2=function(seg){};jsts_old.algorithm.MCPointInRing=function(ring){this.ring=ring;this.tree=null;this.crossings=0;this.interval=new jsts_old.index.bintree.Interval();this.buildIndex();};jsts_old.algorithm.MCPointInRing.MCSelecter=function(p,parent){this.parent=parent;this.p=p;};jsts_old.algorithm.MCPointInRing.MCSelecter.prototype=new jsts_old.index.chain.MonotoneChainSelectAction;jsts_old.algorithm.MCPointInRing.MCSelecter.prototype.constructor=jsts_old.algorithm.MCPointInRing.MCSelecter;jsts_old.algorithm.MCPointInRing.MCSelecter.prototype.select2=function(ls){this.parent.testLineSegment.apply(this.parent,[this.p,ls]);};jsts_old.algorithm.MCPointInRing.prototype.buildIndex=function(){this.tree=new jsts_old.index.bintree.Bintree();var pts=jsts_old.geom.CoordinateArrays.removeRepeatedPoints(this.ring.getCoordinates());var mcList=jsts_old.index.chain.MonotoneChainBuilder.getChains(pts);for(var i=0;i<mcList.length;i++){var mc=mcList[i];var mcEnv=mc.getEnvelope();this.interval.min=mcEnv.getMinY();this.interval.max=mcEnv.getMaxY();this.tree.insert(this.interval,mc);}};jsts_old.algorithm.MCPointInRing.prototype.isInside=function(pt){this.crossings=0;var rayEnv=new jsts_old.geom.Envelope(-Number.MAX_VALUE,Number.MAX_VALUE,pt.y,pt.y);this.interval.min=pt.y;this.interval.max=pt.y;var segs=this.tree.query(this.interval);var mcSelecter=new jsts_old.algorithm.MCPointInRing.MCSelecter(pt,this);for(var i=segs.iterator();i.hasNext();){var mc=i.next();this.testMonotoneChain(rayEnv,mcSelecter,mc);}
if((this.crossings%2)==1){return true;}
return false;};jsts_old.algorithm.MCPointInRing.prototype.testMonotoneChain=function(rayEnv,mcSelecter,mc){mc.select(rayEnv,mcSelecter);};jsts_old.algorithm.MCPointInRing.prototype.testLineSegment=function(p,seg){var xInt,x1,y1,x2,y2,p1,p2;p1=seg.p0;p2=seg.p1;x1=p1.x-p.x;y1=p1.y-p.y;x2=p2.x-p.x;y2=p2.y-p.y;if(((y1>0)&&(y2<=0))||((y2>0)&&(y1<=0))){xInt=jsts_old.algorithm.RobustDeterminant.signOfDet2x2(x1,y1,x2,y2)/(y2-y1);if(0.0<xInt){this.crossings++;}}};jsts_old.operation.valid.TopologyValidationError=function(errorType,pt){this.errorType=errorType;this.pt=null;if(pt!=null){this.pt=pt.clone();}};jsts_old.operation.valid.TopologyValidationError.HOLE_OUTSIDE_SHELL=2;jsts_old.operation.valid.TopologyValidationError.NESTED_HOLES=3;jsts_old.operation.valid.TopologyValidationError.DISCONNECTED_INTERIOR=4;jsts_old.operation.valid.TopologyValidationError.SELF_INTERSECTION=5;jsts_old.operation.valid.TopologyValidationError.RING_SELF_INTERSECTION=6;jsts_old.operation.valid.TopologyValidationError.NESTED_SHELLS=7;jsts_old.operation.valid.TopologyValidationError.DUPLICATE_RINGS=8;jsts_old.operation.valid.TopologyValidationError.TOO_FEW_POINTS=9;jsts_old.operation.valid.TopologyValidationError.INVALID_COORDINATE=10;jsts_old.operation.valid.TopologyValidationError.RING_NOT_CLOSED=11;jsts_old.operation.valid.TopologyValidationError.prototype.errMsg=['Topology Validation Error','Repeated Point','Hole lies outside shell','Holes are nested','Interior is disconnected','Self-intersection','Ring Self-intersection','Nested shells','Duplicate Rings','Too few distinct points in geometry component','Invalid Coordinate','Ring is not closed'];jsts_old.operation.valid.TopologyValidationError.prototype.getCoordinate=function(){return this.pt;};jsts_old.operation.valid.TopologyValidationError.prototype.getErrorType=function(){return this.errorType;};jsts_old.operation.valid.TopologyValidationError.prototype.getMessage=function(){return this.errMsg[this.errorType];};jsts_old.operation.valid.TopologyValidationError.prototype.toString=function(){var locStr='';if(this.pt!=null){locStr=' at or near point '+this.pt;return this.getMessage()+locStr;}
return locStr;};(function(){var Geometry=jsts_old.geom.Geometry;var TreeSet=javascript.util.TreeSet;var Arrays=javascript.util.Arrays;jsts_old.geom.GeometryCollection=function(geometries,factory){this.geometries=geometries||[];this.factory=factory;};jsts_old.geom.GeometryCollection.prototype=new Geometry();jsts_old.geom.GeometryCollection.constructor=jsts_old.geom.GeometryCollection;jsts_old.geom.GeometryCollection.prototype.isEmpty=function(){for(var i=0,len=this.geometries.length;i<len;i++){var geometry=this.getGeometryN(i);if(!geometry.isEmpty()){return false;}}
return true;};jsts_old.geom.GeometryCollection.prototype.getCoordinate=function(){if(this.isEmpty())
return null;return this.getGeometryN(0).getCoordinate();};jsts_old.geom.GeometryCollection.prototype.getCoordinates=function(){var coordinates=[];var k=-1;for(var i=0,len=this.geometries.length;i<len;i++){var geometry=this.getGeometryN(i);var childCoordinates=geometry.getCoordinates();for(var j=0;j<childCoordinates.length;j++){k++;coordinates[k]=childCoordinates[j];}}
return coordinates;};jsts_old.geom.GeometryCollection.prototype.getNumGeometries=function(){return this.geometries.length;};jsts_old.geom.GeometryCollection.prototype.getGeometryN=function(n){var geometry=this.geometries[n];if(geometry instanceof jsts_old.geom.Coordinate){geometry=new jsts_old.geom.Point(geometry);}
return geometry;};jsts_old.geom.GeometryCollection.prototype.equalsExact=function(other,tolerance){if(!this.isEquivalentClass(other)){return false;}
if(this.geometries.length!==other.geometries.length){return false;}
for(var i=0,len=this.geometries.length;i<len;i++){var geometry=this.getGeometryN(i);if(!geometry.equalsExact(other.getGeometryN(i),tolerance)){return false;}}
return true;};jsts_old.geom.GeometryCollection.prototype.clone=function(){var geometries=[];for(var i=0,len=this.geometries.length;i<len;i++){geometries.push(this.geometries[i].clone());}
return this.factory.createGeometryCollection(geometries);};jsts_old.geom.GeometryCollection.prototype.normalize=function(){for(var i=0,len=this.geometries.length;i<len;i++){this.getGeometryN(i).normalize();}
this.geometries.sort();};jsts_old.geom.GeometryCollection.prototype.compareToSameClass=function(o){var theseElements=new TreeSet(Arrays.asList(this.geometries));var otherElements=new TreeSet(Arrays.asList(o.geometries));return this.compare(theseElements,otherElements);};jsts_old.geom.GeometryCollection.prototype.apply=function(filter){if(filter instanceof jsts_old.geom.GeometryFilter||filter instanceof jsts_old.geom.GeometryComponentFilter){filter.filter(this);for(var i=0,len=this.geometries.length;i<len;i++){this.getGeometryN(i).apply(filter);}}else if(filter instanceof jsts_old.geom.CoordinateFilter){for(var i=0,len=this.geometries.length;i<len;i++){this.getGeometryN(i).apply(filter);}}else if(filter instanceof jsts_old.geom.CoordinateSequenceFilter){this.apply2.apply(this,arguments);}};jsts_old.geom.GeometryCollection.prototype.apply2=function(filter){if(this.geometries.length==0)
return;for(var i=0;i<this.geometries.length;i++){this.geometries[i].apply(filter);if(filter.isDone()){break;}}
if(filter.isGeometryChanged()){}};jsts_old.geom.GeometryCollection.prototype.getDimension=function(){var dimension=jsts_old.geom.Dimension.FALSE;for(var i=0,len=this.geometries.length;i<len;i++){var geometry=this.getGeometryN(i);dimension=Math.max(dimension,geometry.getDimension());}
return dimension;};jsts_old.geom.GeometryCollection.prototype.computeEnvelopeInternal=function(){var envelope=new jsts_old.geom.Envelope();for(var i=0,len=this.geometries.length;i<len;i++){var geometry=this.getGeometryN(i);envelope.expandToInclude(geometry.getEnvelopeInternal());}
return envelope;};jsts_old.geom.GeometryCollection.prototype.CLASS_NAME='jsts_old.geom.GeometryCollection';})();(function(){jsts_old.geom.MultiPolygon=function(geometries,factory){this.geometries=geometries||[];this.factory=factory;};jsts_old.geom.MultiPolygon.prototype=new jsts_old.geom.GeometryCollection();jsts_old.geom.MultiPolygon.constructor=jsts_old.geom.MultiPolygon;jsts_old.geom.MultiPolygon.prototype.getBoundary=function(){if(this.isEmpty()){return this.getFactory().createMultiLineString(null);}
var allRings=[];for(var i=0;i<this.geometries.length;i++){var polygon=this.geometries[i];var rings=polygon.getBoundary();for(var j=0;j<rings.getNumGeometries();j++){allRings.push(rings.getGeometryN(j));}}
return this.getFactory().createMultiLineString(allRings);};jsts_old.geom.MultiPolygon.prototype.equalsExact=function(other,tolerance){if(!this.isEquivalentClass(other)){return false;}
return jsts_old.geom.GeometryCollection.prototype.equalsExact.call(this,other,tolerance);};jsts_old.geom.MultiPolygon.prototype.CLASS_NAME='jsts_old.geom.MultiPolygon';})();jsts_old.geom.util.GeometryCombiner=function(geoms){this.geomFactory=jsts_old.geom.util.GeometryCombiner.extractFactory(geoms);this.inputGeoms=geoms;};jsts_old.geom.util.GeometryCombiner.combiner=function(geoms){var combiner=new jsts_old.geom.util.GeometryCombiner(geoms);return combiner.combine();};jsts_old.geom.util.GeometryCombiner.combine=function(){var combiner=jsts_old.geom.util.GeometryCombiner([].slice.call(arguments));return combiner.combine();};jsts_old.geom.util.GeometryCombiner.prototype.geomFactory=null;jsts_old.geom.util.GeometryCombiner.prototype.skipEmpty=false;jsts_old.geom.util.GeometryCombiner.prototype.inputGeoms;jsts_old.geom.util.GeometryCombiner.extractFactory=function(geoms){if(geoms.length===0){return null;}
return geoms[0].getFactory();};jsts_old.geom.util.GeometryCombiner.prototype.combine=function(){var elems=[];for(var i=0,l=this.inputGeoms.length;i<l;i++){var g=this.inputGeoms[i];this.extractElements(g,elems);}
if(elems.length===0){if(this.geomFactory!==null){return this.geomFactory.createGeometryCollection(null);}
return null;}
return this.geomFactory.buildGeometry(elems);};jsts_old.geom.util.GeometryCombiner.prototype.extractElements=function(geom,elems){if(geom===null){return;}
for(var i=0;i<geom.getNumGeometries();i++){var elemGeom=geom.getGeometryN(i);if(this.skipEmpty&&elemGeom.isEmpty()){continue;}
elems.add(elemGeom);}};jsts_old.operation.relate.EdgeEndBundleStar=function(){jsts_old.geomgraph.EdgeEndStar.apply(this,arguments);};jsts_old.operation.relate.EdgeEndBundleStar.prototype=new jsts_old.geomgraph.EdgeEndStar();jsts_old.operation.relate.EdgeEndBundleStar.prototype.insert=function(e){var eb=this.edgeMap.get(e);if(eb===null){eb=new jsts_old.operation.relate.EdgeEndBundle(e);this.insertEdgeEnd(e,eb);}
else{eb.insert(e);}};jsts_old.operation.relate.EdgeEndBundleStar.prototype.updateIM=function(im){for(var it=this.iterator();it.hasNext();){var esb=it.next();esb.updateIM(im);}};jsts_old.noding.snapround.HotPixel=function(pt,scaleFactor,li){this.corner=[];this.originalPt=pt;this.pt=pt;this.scaleFactor=scaleFactor;this.li=li;if(this.scaleFactor!==1.0){this.pt=new jsts_old.geom.Coordinate(this.scale(pt.x),this.scale(pt.y));this.p0Scaled=new jsts_old.geom.Coordinate();this.p1Scaled=new jsts_old.geom.Coordinate();}
this.initCorners(this.pt);};jsts_old.noding.snapround.HotPixel.prototype.li=null;jsts_old.noding.snapround.HotPixel.prototype.pt=null;jsts_old.noding.snapround.HotPixel.prototype.originalPt=null;jsts_old.noding.snapround.HotPixel.prototype.ptScaled=null;jsts_old.noding.snapround.HotPixel.prototype.p0Scaled=null;jsts_old.noding.snapround.HotPixel.prototype.p1Scaled=null;jsts_old.noding.snapround.HotPixel.prototype.scaleFactor=undefined;jsts_old.noding.snapround.HotPixel.prototype.minx=undefined;jsts_old.noding.snapround.HotPixel.prototype.maxx=undefined;jsts_old.noding.snapround.HotPixel.prototype.miny=undefined;jsts_old.noding.snapround.HotPixel.prototype.maxy=undefined;jsts_old.noding.snapround.HotPixel.prototype.corner=null;jsts_old.noding.snapround.HotPixel.prototype.safeEnv=null;jsts_old.noding.snapround.HotPixel.prototype.getCoordinate=function(){return this.originalPt;};jsts_old.noding.snapround.HotPixel.SAFE_ENV_EXPANSION_FACTOR=0.75;jsts_old.noding.snapround.HotPixel.prototype.getSafeEnvelope=function(){if(this.safeEnv===null){var safeTolerance=jsts_old.noding.snapround.HotPixel.SAFE_ENV_EXPANSION_FACTOR/this.scaleFactor;this.safeEnv=new jsts_old.geom.Envelope(this.originalPt.x-safeTolerance,this.originalPt.x+safeTolerance,this.originalPt.y-safeTolerance,this.originalPt.y+safeTolerance);}
return this.safeEnv;};jsts_old.noding.snapround.HotPixel.prototype.initCorners=function(pt){var tolerance=0.5;this.minx=pt.x-tolerance;this.maxx=pt.x+tolerance;this.miny=pt.y-tolerance;this.maxy=pt.y+tolerance;this.corner[0]=new jsts_old.geom.Coordinate(this.maxx,this.maxy);this.corner[1]=new jsts_old.geom.Coordinate(this.minx,this.maxy);this.corner[2]=new jsts_old.geom.Coordinate(this.minx,this.miny);this.corner[3]=new jsts_old.geom.Coordinate(this.maxx,this.miny);};jsts_old.noding.snapround.HotPixel.prototype.scale=function(val){return Math.round(val*this.scaleFactor);};jsts_old.noding.snapround.HotPixel.prototype.intersects=function(p0,p1){if(this.scaleFactor===1.0)
return this.intersectsScaled(p0,p1);this.copyScaled(p0,this.p0Scaled);this.copyScaled(p1,this.p1Scaled);return this.intersectsScaled(this.p0Scaled,this.p1Scaled);};jsts_old.noding.snapround.HotPixel.prototype.copyScaled=function(p,pScaled){pScaled.x=this.scale(p.x);pScaled.y=this.scale(p.y);};jsts_old.noding.snapround.HotPixel.prototype.intersectsScaled=function(p0,p1){var segMinx=Math.min(p0.x,p1.x);var segMaxx=Math.max(p0.x,p1.x);var segMiny=Math.min(p0.y,p1.y);var segMaxy=Math.max(p0.y,p1.y);var isOutsidePixelEnv=this.maxx<segMinx||this.minx>segMaxx||this.maxy<segMiny||this.miny>segMaxy;if(isOutsidePixelEnv)
return false;var intersects=this.intersectsToleranceSquare(p0,p1);jsts_old.util.Assert.isTrue(!(isOutsidePixelEnv&&intersects),'Found bad envelope test');return intersects;};jsts_old.noding.snapround.HotPixel.prototype.intersectsToleranceSquare=function(p0,p1){var intersectsLeft=false;var intersectsBottom=false;this.li.computeIntersection(p0,p1,this.corner[0],this.corner[1]);if(this.li.isProper())
return true;this.li.computeIntersection(p0,p1,this.corner[1],this.corner[2]);if(this.li.isProper())
return true;if(this.li.hasIntersection())
intersectsLeft=true;this.li.computeIntersection(p0,p1,this.corner[2],this.corner[3]);if(this.li.isProper())
return true;if(this.li.hasIntersection())
intersectsBottom=true;this.li.computeIntersection(p0,p1,this.corner[3],this.corner[0]);if(this.li.isProper())
return true;if(intersectsLeft&&intersectsBottom)
return true;if(p0.equals(this.pt))
return true;if(p1.equals(this.pt))
return true;return false;};jsts_old.noding.snapround.HotPixel.prototype.intersectsPixelClosure=function(p0,p1){this.li.computeIntersection(p0,p1,this.corner[0],this.corner[1]);if(this.li.hasIntersection())
return true;this.li.computeIntersection(p0,p1,this.corner[1],this.corner[2]);if(this.li.hasIntersection())
return true;this.li.computeIntersection(p0,p1,this.corner[2],this.corner[3]);if(this.li.hasIntersection())
return true;this.li.computeIntersection(p0,p1,this.corner[3],this.corner[0]);if(this.li.hasIntersection())
return true;return false;};jsts_old.noding.snapround.HotPixel.prototype.addSnappedNode=function(segStr,segIndex){var p0=segStr.getCoordinate(segIndex);var p1=segStr.getCoordinate(segIndex+1);if(this.intersects(p0,p1)){segStr.addIntersection(this.getCoordinate(),segIndex);return true;}
return false;};jsts_old.operation.buffer.BufferInputLineSimplifier=function(inputLine){this.inputLine=inputLine;};jsts_old.operation.buffer.BufferInputLineSimplifier.simplify=function(inputLine,distanceTol){var simp=new jsts_old.operation.buffer.BufferInputLineSimplifier(inputLine);return simp.simplify(distanceTol);};jsts_old.operation.buffer.BufferInputLineSimplifier.INIT=0;jsts_old.operation.buffer.BufferInputLineSimplifier.DELETE=1;jsts_old.operation.buffer.BufferInputLineSimplifier.KEEP=1;jsts_old.operation.buffer.BufferInputLineSimplifier.prototype.inputLine=null;jsts_old.operation.buffer.BufferInputLineSimplifier.prototype.distanceTol=null;jsts_old.operation.buffer.BufferInputLineSimplifier.prototype.isDeleted=null;jsts_old.operation.buffer.BufferInputLineSimplifier.prototype.angleOrientation=jsts_old.algorithm.CGAlgorithms.COUNTERCLOCKWISE;jsts_old.operation.buffer.BufferInputLineSimplifier.prototype.simplify=function(distanceTol){this.distanceTol=Math.abs(distanceTol);if(distanceTol<0)
this.angleOrientation=jsts_old.algorithm.CGAlgorithms.CLOCKWISE;this.isDeleted=[];this.isDeleted.length=this.inputLine.length;var isChanged=false;do{isChanged=this.deleteShallowConcavities();}while(isChanged);return this.collapseLine();};jsts_old.operation.buffer.BufferInputLineSimplifier.prototype.deleteShallowConcavities=function(){var index=1;var maxIndex=this.inputLine.length-1;var midIndex=this.findNextNonDeletedIndex(index);var lastIndex=this.findNextNonDeletedIndex(midIndex);var isChanged=false;while(lastIndex<this.inputLine.length){var isMiddleVertexDeleted=false;if(this.isDeletable(index,midIndex,lastIndex,this.distanceTol)){this.isDeleted[midIndex]=jsts_old.operation.buffer.BufferInputLineSimplifier.DELETE;isMiddleVertexDeleted=true;isChanged=true;}
if(isMiddleVertexDeleted)
index=lastIndex;else
index=midIndex;midIndex=this.findNextNonDeletedIndex(index);lastIndex=this.findNextNonDeletedIndex(midIndex);}
return isChanged;};jsts_old.operation.buffer.BufferInputLineSimplifier.prototype.findNextNonDeletedIndex=function(index){var next=index+1;while(next<this.inputLine.length&&this.isDeleted[next]===jsts_old.operation.buffer.BufferInputLineSimplifier.DELETE)
next++;return next;};jsts_old.operation.buffer.BufferInputLineSimplifier.prototype.collapseLine=function(){var coordList=[];for(var i=0;i<this.inputLine.length;i++){if(this.isDeleted[i]!==jsts_old.operation.buffer.BufferInputLineSimplifier.DELETE)
coordList.push(this.inputLine[i]);}
return coordList;};jsts_old.operation.buffer.BufferInputLineSimplifier.prototype.isDeletable=function(i0,i1,i2,distanceTol){var p0=this.inputLine[i0];var p1=this.inputLine[i1];var p2=this.inputLine[i2];if(!this.isConcave(p0,p1,p2))
return false;if(!this.isShallow(p0,p1,p2,distanceTol))
return false;return this.isShallowSampled(p0,p1,i0,i2,distanceTol);};jsts_old.operation.buffer.BufferInputLineSimplifier.prototype.isShallowConcavity=function(p0,p1,p2,distanceTol){var orientation=jsts_old.algorithm.CGAlgorithms.computeOrientation(p0,p1,p2);var isAngleToSimplify=(orientation===this.angleOrientation);if(!isAngleToSimplify)
return false;var dist=jsts_old.algorithm.CGAlgorithms.distancePointLine(p1,p0,p2);return dist<distanceTol;};jsts_old.operation.buffer.BufferInputLineSimplifier.NUM_PTS_TO_CHECK=10;jsts_old.operation.buffer.BufferInputLineSimplifier.prototype.isShallowSampled=function(p0,p2,i0,i2,distanceTol){var inc=parseInt((i2-i0)/jsts_old.operation.buffer.BufferInputLineSimplifier.NUM_PTS_TO_CHECK);if(inc<=0)
inc=1;for(var i=i0;i<i2;i+=inc){if(!this.isShallow(p0,p2,this.inputLine[i],distanceTol))
return false;}
return true;};jsts_old.operation.buffer.BufferInputLineSimplifier.prototype.isShallow=function(p0,p1,p2,distanceTol){var dist=jsts_old.algorithm.CGAlgorithms.distancePointLine(p1,p0,p2);return dist<distanceTol;};jsts_old.operation.buffer.BufferInputLineSimplifier.prototype.isConcave=function(p0,p1,p2){var orientation=jsts_old.algorithm.CGAlgorithms.computeOrientation(p0,p1,p2);var isConcave=(orientation===this.angleOrientation);return isConcave;};jsts_old.geom.CoordinateList=function(coord,allowRepeated){allowRepeated=(allowRepeated===undefined)?true:allowRepeated;if(coord!==undefined){this.add(coord,allowRepeated);}};jsts_old.geom.CoordinateList.prototype=new Array();jsts_old.geom.CoordinateList.prototype.add=function(coord,allowRepeated,direction){direction=direction||true;if(direction){for(var i=0;i<coord.length;i++){this.addCoordinate(coord[i],allowRepeated);}}else{for(var i=coord.length-1;i>=0;i--){this.addCoordinate(coord[i],allowRepeated);}}
return true;};jsts_old.geom.CoordinateList.prototype.addCoordinate=function(coord,allowRepeated){if(!allowRepeated){if(this.length>=1){var last=this[this.length-1];if(last.equals2D(coord))
return;}}
this.push(coord);};jsts_old.geom.CoordinateList.prototype.insertCoordinate=function(index,coord,allowRepeated){if(!allowRepeated){var before=index>0?index-1:-1;if(before!==-1&&this[before].equals2D(coord)){return;}
var after=index<this.length-1?index+1:-1;if(after!==-1&&this[after].equals2D(coord)){return;}}
this.splice(index,0,coord);};jsts_old.geom.CoordinateList.prototype.closeRing=function(){if(this.length>0){this.addCoordinate(new jsts_old.geom.Coordinate(this[0]),false);}};jsts_old.geom.CoordinateList.prototype.toArray=function(){var i,il,arr;i=0,il=this.length,arr=new Array(il);for(i;i<il;i++){arr[i]=this[i];}
return arr;};jsts_old.operation.overlay.MaximalEdgeRing=function(start,geometryFactory){jsts_old.geomgraph.EdgeRing.call(this,start,geometryFactory);};jsts_old.operation.overlay.MaximalEdgeRing.prototype=new jsts_old.geomgraph.EdgeRing();jsts_old.operation.overlay.MaximalEdgeRing.constructor=jsts_old.operation.overlay.MaximalEdgeRing;jsts_old.operation.overlay.MaximalEdgeRing.prototype.getNext=function(de)
{return de.getNext();};jsts_old.operation.overlay.MaximalEdgeRing.prototype.setEdgeRing=function(de,er)
{de.setEdgeRing(er);};jsts_old.operation.overlay.MaximalEdgeRing.prototype.linkDirectedEdgesForMinimalEdgeRings=function()
{var de=this.startDe;do{var node=de.getNode();node.getEdges().linkMinimalDirectedEdges(this);de=de.getNext();}while(de!=this.startDe);};jsts_old.operation.overlay.MaximalEdgeRing.prototype.buildMinimalRings=function()
{var minEdgeRings=[];var de=this.startDe;do{if(de.getMinEdgeRing()===null){var minEr=new jsts_old.operation.overlay.MinimalEdgeRing(de,this.geometryFactory);minEdgeRings.push(minEr);}
de=de.getNext();}while(de!=this.startDe);return minEdgeRings;};jsts_old.algorithm.CentroidPoint=function(){this.centSum=new jsts_old.geom.Coordinate();};jsts_old.algorithm.CentroidPoint.prototype.ptCount=0;jsts_old.algorithm.CentroidPoint.prototype.centSum=null;jsts_old.algorithm.CentroidPoint.prototype.add=function(geom){if(geom instanceof jsts_old.geom.Point){this.add2(geom.getCoordinate());}else if(geom instanceof jsts_old.geom.GeometryCollection||geom instanceof jsts_old.geom.MultiPoint||geom instanceof jsts_old.geom.MultiLineString||geom instanceof jsts_old.geom.MultiPolygon){var gc=geom;for(var i=0;i<gc.getNumGeometries();i++){this.add(gc.getGeometryN(i));}}};jsts_old.algorithm.CentroidPoint.prototype.add2=function(pt){this.ptCount+=1;this.centSum.x+=pt.x;this.centSum.y+=pt.y;};jsts_old.algorithm.CentroidPoint.prototype.getCentroid=function(){var cent=new jsts_old.geom.Coordinate();cent.x=this.centSum.x/this.ptCount;cent.y=this.centSum.y/this.ptCount;return cent;};jsts_old.operation.distance.ConnectedElementLocationFilter=function(locations){this.locations=locations;};jsts_old.operation.distance.ConnectedElementLocationFilter.prototype=new jsts_old.geom.GeometryFilter();jsts_old.operation.distance.ConnectedElementLocationFilter.prototype.locations=null;jsts_old.operation.distance.ConnectedElementLocationFilter.getLocations=function(geom){var locations=[];geom.apply(new jsts_old.operation.distance.ConnectedElementLocationFilter(locations));return locations;};jsts_old.operation.distance.ConnectedElementLocationFilter.prototype.filter=function(geom){if(geom instanceof jsts_old.geom.Point||geom instanceof jsts_old.geom.LineString||geom instanceof jsts_old.geom.Polygon)
this.locations.push(new jsts_old.operation.distance.GeometryLocation(geom,0,geom.getCoordinate()));};(function(){var ArrayList=javascript.util.ArrayList;jsts_old.operation.relate.EdgeEndBuilder=function(){};jsts_old.operation.relate.EdgeEndBuilder.prototype.computeEdgeEnds=function(edges){if(arguments.length==2){this.computeEdgeEnds2.apply(this,arguments);return;}
var l=new ArrayList();for(var i=edges;i.hasNext();){var e=i.next();this.computeEdgeEnds2(e,l);}
return l;};jsts_old.operation.relate.EdgeEndBuilder.prototype.computeEdgeEnds2=function(edge,l){var eiList=edge.getEdgeIntersectionList();eiList.addEndpoints();var it=eiList.iterator();var eiPrev=null;var eiCurr=null;if(!it.hasNext())
return;var eiNext=it.next();do{eiPrev=eiCurr;eiCurr=eiNext;eiNext=null;if(it.hasNext())
eiNext=it.next();if(eiCurr!==null){this.createEdgeEndForPrev(edge,l,eiCurr,eiPrev);this.createEdgeEndForNext(edge,l,eiCurr,eiNext);}}while(eiCurr!==null);};jsts_old.operation.relate.EdgeEndBuilder.prototype.createEdgeEndForPrev=function(edge,l,eiCurr,eiPrev){var iPrev=eiCurr.segmentIndex;if(eiCurr.dist===0.0){if(iPrev===0)
return;iPrev--;}
var pPrev=edge.getCoordinate(iPrev);if(eiPrev!==null&&eiPrev.segmentIndex>=iPrev)
pPrev=eiPrev.coord;var label=new jsts_old.geomgraph.Label(edge.getLabel());label.flip();var e=new jsts_old.geomgraph.EdgeEnd(edge,eiCurr.coord,pPrev,label);l.add(e);};jsts_old.operation.relate.EdgeEndBuilder.prototype.createEdgeEndForNext=function(edge,l,eiCurr,eiNext){var iNext=eiCurr.segmentIndex+1;if(iNext>=edge.getNumPoints()&&eiNext===null)
return;var pNext=edge.getCoordinate(iNext);if(eiNext!==null&&eiNext.segmentIndex===eiCurr.segmentIndex)
pNext=eiNext.coord;var e=new jsts_old.geomgraph.EdgeEnd(edge,eiCurr.coord,pNext,new jsts_old.geomgraph.Label(edge.getLabel()));l.add(e);};})();jsts_old.triangulate.quadedge.Vertex=function(){if(arguments.length===1){this.initFromCoordinate(arguments[0]);}else{this.initFromXY(arguments[0],arguments[1]);}};jsts_old.triangulate.quadedge.Vertex.LEFT=0;jsts_old.triangulate.quadedge.Vertex.RIGHT=1;jsts_old.triangulate.quadedge.Vertex.BEYOND=2;jsts_old.triangulate.quadedge.Vertex.BEHIND=3;jsts_old.triangulate.quadedge.Vertex.BETWEEN=4;jsts_old.triangulate.quadedge.Vertex.ORIGIN=5;jsts_old.triangulate.quadedge.Vertex.DESTINATION=6;jsts_old.triangulate.quadedge.Vertex.prototype.initFromXY=function(x,y){this.p=new jsts_old.geom.Coordinate(x,y);};jsts_old.triangulate.quadedge.Vertex.prototype.initFromCoordinate=function(_p){this.p=new jsts_old.geom.Coordinate(_p);};jsts_old.triangulate.quadedge.Vertex.prototype.getX=function(){return this.p.x;};jsts_old.triangulate.quadedge.Vertex.prototype.getY=function(){return this.p.y;};jsts_old.triangulate.quadedge.Vertex.prototype.getZ=function(){return this.p.z;};jsts_old.triangulate.quadedge.Vertex.prototype.setZ=function(z){this.p.z=z;};jsts_old.triangulate.quadedge.Vertex.prototype.getCoordinate=function(){return this.p;};jsts_old.triangulate.quadedge.Vertex.prototype.toString=function(){return'POINT ('+this.p.x+' '+this.p.y+')';};jsts_old.triangulate.quadedge.Vertex.prototype.equals=function(){if(arguments.length===1){return this.equalsExact(arguments[0]);}else{return this.equalsWithTolerance(arguments[0],arguments[1]);}};jsts_old.triangulate.quadedge.Vertex.prototype.equalsExact=function(other){return(this.p.x===other.getX()&&this.p.y===other.getY());};jsts_old.triangulate.quadedge.Vertex.prototype.equalsWithTolerance=function(other,tolerance){return(this.p.distance(other.getCoordinate())<tolerance);};jsts_old.triangulate.quadedge.Vertex.prototype.classify=function(p0,p1){var p2,a,b,sa;p2=this;a=p1.sub(p0);b=p2.sub(p0);sa=a.crossProduct(b);if(sa>0.0){return jsts_old.triangulate.quadedge.Vertex.LEFT;}
if(sa<0.0){return jsts_old.triangulate.quadedge.Vertex.RIGHT;}
if((a.getX()*b.getX()<0.0)||(a.getY()*b.getY()<0.0)){return jsts_old.triangulate.quadedge.Vertex.BEHIND;}
if(a.magn()<b.magn()){return jsts_old.triangulate.quadedge.Vertex.BEYOND;}
if(p0.equals(p2)){return jsts_old.triangulate.quadedge.Vertex.ORIGIN;}
if(p1.equals(p2)){return jsts_old.triangulate.quadedge.Vertex.DESTINATION;}
return jsts_old.triangulate.quadedge.Vertex.BETWEEN;};jsts_old.triangulate.quadedge.Vertex.prototype.crossProduct=function(v){return((this.p.x*v.getY())-(this.p.y*v.getX()));};jsts_old.triangulate.quadedge.Vertex.prototype.dot=function(v){return((this.p.x*v.getX())+(this.p.y*v.getY()));};jsts_old.triangulate.quadedge.Vertex.prototype.times=function(c){return new jsts_old.triangulate.quadedge.Vertex(c*this.p.x,c*this.p.y);};jsts_old.triangulate.quadedge.Vertex.prototype.sum=function(v){return new jsts_old.triangulate.quadedge.Vertex(this.p.x+v.getX(),this.p.y+
v.getY());};jsts_old.triangulate.quadedge.Vertex.prototype.sub=function(v){return new jsts_old.triangulate.quadedge.Vertex(this.p.x-v.getX(),this.p.y-
v.getY());};jsts_old.triangulate.quadedge.Vertex.prototype.magn=function(){return(Math.sqrt((this.p.x*this.p.x)+(this.p.y*this.p.y)));};jsts_old.triangulate.quadedge.Vertex.prototype.cross=function(){return new Vertex(this.p.y,-this.p.x);};jsts_old.triangulate.quadedge.Vertex.prototype.isInCircle=function(a,b,c){return jsts_old.triangulate.quadedge.TrianglePredicate.isInCircleRobust(a.p,b.p,c.p,this.p);};jsts_old.triangulate.quadedge.Vertex.prototype.isCCW=function(b,c){return((b.p.x-this.p.x)*(c.p.y-this.p.y)-(b.p.y-this.p.y)*(c.p.x-this.p.x)>0);};jsts_old.triangulate.quadedge.Vertex.prototype.rightOf=function(e){return this.isCCW(e.dest(),e.orig());};jsts_old.triangulate.quadedge.Vertex.prototype.leftOf=function(e){return this.isCCW(e.orig(),e.dest());};jsts_old.triangulate.quadedge.Vertex.prototype.bisector=function(a,b){var dx,dy,l1,l2;dx=b.getX()-a.getX();dy=b.getY()-a.getY();l1=new jsts_old.algorithm.HCoordinate(a.getX()+(dx/2.0),a.getY()+
(dy/2.0),1.0);l1=new jsts_old.algorithm.HCoordinate(a.getX()-dy+(dx/2.0),a.getY()+
dx+(dy/2.0),1.0);return new jsts_old.algorithm.HCoordinate(l1,l2);};jsts_old.triangulate.quadedge.Vertex.prototype.distance=function(v1,v2){return v1.p.distance(v2.p);};jsts_old.triangulate.quadedge.Vertex.prototype.circumRadiusRatio=function(b,c){var x,radius,edgeLength,el;x=this.circleCenter(b,c);radius=this.distance(x,b);edgeLength=this.distance(this,b);el=this.distance(b,c);if(el<edgeLength){edgeLength=el;}
el=this.distance(c,this);if(el<edgeLength){edgeLength=el;}
return radius/edgeLength;};jsts_old.triangulate.quadedge.Vertex.prototype.midPoint=function(a){var xm,ym;xm=(this.p.x+a.getX())/2.0;ym=(this.p.y+a.getY())/2.0;return new jsts_old.triangulate.quadedge.Vertex(xm,ym);};jsts_old.triangulate.quadedge.Vertex.prototype.circleCenter=function(b,c){var a,cab,cbc,hcc,cc;a=new jsts_old.triangulate.quadedge.Vertex(this.getX(),this.getY());cab=this.bisector(a,b);cbc=this.bisector(b,c);hcc=new jsts_old.algorithm.HCoordinate(cab,cbc);cc=null;try{cc=new jsts_old.triangulate.quadedge.Vertex(hcc.getX(),hcc.getY());}catch(err){}
return cc;};jsts_old.operation.valid.IsValidOp=function(parentGeometry){this.parentGeometry=parentGeometry;this.isSelfTouchingRingFormingHoleValid=false;this.validErr=null;};jsts_old.operation.valid.IsValidOp.isValid=function(arg){if(arguments[0]instanceof jsts_old.geom.Coordinate){if(isNaN(arg.x)){return false;}
if(!isFinite(arg.x)&&!isNaN(arg.x)){return false;}
if(isNaN(arg.y)){return false;}
if(!isFinite(arg.y)&&!isNaN(arg.y)){return false;}
return true;}else{var isValidOp=new jsts_old.operation.valid.IsValidOp(arg);return isValidOp.isValid();}};jsts_old.operation.valid.IsValidOp.findPtNotNode=function(testCoords,searchRing,graph){var searchEdge=graph.findEdge(searchRing);var eiList=searchEdge.getEdgeIntersectionList();for(var i=0;i<testCoords.length;i++){var pt=testCoords[i];if(!eiList.isIntersection(pt)){return pt;}}
return null;};jsts_old.operation.valid.IsValidOp.prototype.setSelfTouchingRingFormingHoleValid=function(isValid){this.isSelfTouchingRingFormingHoleValid=isValid;};jsts_old.operation.valid.IsValidOp.prototype.isValid=function(){this.checkValid(this.parentGeometry);return this.validErr==null;};jsts_old.operation.valid.IsValidOp.prototype.getValidationError=function(){this.checkValid(this.parentGeometry);return this.validErr;};jsts_old.operation.valid.IsValidOp.prototype.checkValid=function(g){this.validErr=null;if(g.isEmpty()){return;}
if(g instanceof jsts_old.geom.Point){this.checkValidPoint(g);}else if(g instanceof jsts_old.geom.MultiPoint){this.checkValidMultiPoint(g);}else if(g instanceof jsts_old.geom.LinearRing){this.checkValidLinearRing(g);}else if(g instanceof jsts_old.geom.LineString){this.checkValidLineString(g);}else if(g instanceof jsts_old.geom.Polygon){this.checkValidPolygon(g);}else if(g instanceof jsts_old.geom.MultiPolygon){this.checkValidMultiPolygon(g);}else if(g instanceof jsts_old.geom.GeometryCollection){this.checkValidGeometryCollection(g);}else{throw g.constructor;}};jsts_old.operation.valid.IsValidOp.prototype.checkValidPoint=function(g){this.checkInvalidCoordinates(g.getCoordinates());};jsts_old.operation.valid.IsValidOp.prototype.checkValidMultiPoint=function(g){this.checkInvalidCoordinates(g.getCoordinates());};jsts_old.operation.valid.IsValidOp.prototype.checkValidLineString=function(g){this.checkInvalidCoordinates(g.getCoordinates());if(this.validErr!=null){return;}
var graph=new jsts_old.geomgraph.GeometryGraph(0,g);this.checkTooFewPoints(graph);};jsts_old.operation.valid.IsValidOp.prototype.checkValidLinearRing=function(g){this.checkInvalidCoordinates(g.getCoordinates());if(this.validErr!=null){return;}
this.checkClosedRing(g);if(this.validErr!=null){return;}
var graph=new jsts_old.geomgraph.GeometryGraph(0,g);this.checkTooFewPoints(graph);if(this.validErr!=null){return;}
var li=new jsts_old.algorithm.RobustLineIntersector();graph.computeSelfNodes(li,true);this.checkNoSelfIntersectingRings(graph);};jsts_old.operation.valid.IsValidOp.prototype.checkValidPolygon=function(g){this.checkInvalidCoordinates(g);if(this.validErr!=null){return;}
this.checkClosedRings(g);if(this.validErr!=null){return;}
var graph=new jsts_old.geomgraph.GeometryGraph(0,g);this.checkTooFewPoints(graph);if(this.validErr!=null){return;}
this.checkConsistentArea(graph);if(this.validErr!=null){return;}
if(!this.isSelfTouchingRingFormingHoleValid){this.checkNoSelfIntersectingRings(graph);if(this.validErr!=null){return;}}
this.checkHolesInShell(g,graph);if(this.validErr!=null){return;}
this.checkHolesNotNested(g,graph);if(this.validErr!=null){return;}
this.checkConnectedInteriors(graph);};jsts_old.operation.valid.IsValidOp.prototype.checkValidMultiPolygon=function(g){var il=g.getNumGeometries();for(var i=0;i<il;i++){var p=g.getGeometryN(i);this.checkInvalidCoordinates(p);if(this.validErr!=null){return;}
this.checkClosedRings(p);if(this.validErr!=null){return;}}
var graph=new jsts_old.geomgraph.GeometryGraph(0,g);this.checkTooFewPoints(graph);if(this.validErr!=null){return;}
this.checkConsistentArea(graph);if(this.validErr!=null){return;}
if(!this.isSelfTouchingRingFormingHoleValid){this.checkNoSelfIntersectingRings(graph);if(this.validErr!=null){return;}}
for(var i=0;i<g.getNumGeometries();i++){var p=g.getGeometryN(i);this.checkHolesInShell(p,graph);if(this.validErr!=null){return;}}
for(var i=0;i<g.getNumGeometries();i++){var p=g.getGeometryN(i);this.checkHolesNotNested(p,graph);if(this.validErr!=null){return;}}
this.checkShellsNotNested(g,graph);if(this.validErr!=null){return;}
this.checkConnectedInteriors(graph);};jsts_old.operation.valid.IsValidOp.prototype.checkValidGeometryCollection=function(gc){for(var i=0;i<gc.getNumGeometries();i++){var g=gc.getGeometryN(i);this.checkValid(g);if(this.validErr!=null){return;}}};jsts_old.operation.valid.IsValidOp.prototype.checkInvalidCoordinates=function(arg){if(arg instanceof jsts_old.geom.Polygon){var poly=arg;this.checkInvalidCoordinates(poly.getExteriorRing().getCoordinates());if(this.validErr!=null){return;}
for(var i=0;i<poly.getNumInteriorRing();i++){this.checkInvalidCoordinates(poly.getInteriorRingN(i).getCoordinates());if(this.validErr!=null){return;}}}else{var coords=arg;for(var i=0;i<coords.length;i++){if(!jsts_old.operation.valid.IsValidOp.isValid(coords[i])){this.validErr=new jsts_old.operation.valid.TopologyValidationError(jsts_old.operation.valid.TopologyValidationError.INVALID_COORDINATE,coords[i]);return;}}}};jsts_old.operation.valid.IsValidOp.prototype.checkClosedRings=function(poly){this.checkClosedRing(poly.getExteriorRing());if(this.validErr!=null){return;}
for(var i=0;i<poly.getNumInteriorRing();i++){this.checkClosedRing(poly.getInteriorRingN(i));if(this.validErr!=null){return;}}};jsts_old.operation.valid.IsValidOp.prototype.checkClosedRing=function(ring){if(!ring.isClosed()){var pt=null;if(ring.getNumPoints()>=1){pt=ring.getCoordinateN(0);}
this.validErr=new jsts_old.operation.valid.TopologyValidationError(jsts_old.operation.valid.TopologyValidationError.RING_NOT_CLOSED,pt);}};jsts_old.operation.valid.IsValidOp.prototype.checkTooFewPoints=function(graph){if(graph.hasTooFewPoints){this.validErr=new jsts_old.operation.valid.TopologyValidationError(jsts_old.operation.valid.TopologyValidationError.TOO_FEW_POINTS,graph.getInvalidPoint());return;}};jsts_old.operation.valid.IsValidOp.prototype.checkConsistentArea=function(graph){var cat=new jsts_old.operation.valid.ConsistentAreaTester(graph);var isValidArea=cat.isNodeConsistentArea();if(!isValidArea){this.validErr=new jsts_old.operation.valid.TopologyValidationError(jsts_old.operation.valid.TopologyValidationError.SELF_INTERSECTION,cat.getInvalidPoint());return;}
if(cat.hasDuplicateRings()){this.validErr=new jsts_old.operation.valid.TopologyValidationError(jsts_old.operation.valid.TopologyValidationError.DUPLICATE_RINGS,cat.getInvalidPoint());}};jsts_old.operation.valid.IsValidOp.prototype.checkNoSelfIntersectingRings=function(graph){for(var i=graph.getEdgeIterator();i.hasNext();){var e=i.next();this.checkNoSelfIntersectingRing(e.getEdgeIntersectionList());if(this.validErr!=null){return;}}};jsts_old.operation.valid.IsValidOp.prototype.checkNoSelfIntersectingRing=function(eiList){var nodeSet=[];var isFirst=true;for(var i=eiList.iterator();i.hasNext();){var ei=i.next();if(isFirst){isFirst=false;continue;}
if(nodeSet.indexOf(ei.coord)>=0){this.validErr=new jsts_old.operation.valid.TopologyValidationError(jsts_old.operation.valid.TopologyValidationError.RING_SELF_INTERSECTION,ei.coord);return;}else{nodeSet.push(ei.coord);}}};jsts_old.operation.valid.IsValidOp.prototype.checkHolesInShell=function(p,graph){var shell=p.getExteriorRing();var pir=new jsts_old.algorithm.MCPointInRing(shell);for(var i=0;i<p.getNumInteriorRing();i++){var hole=p.getInteriorRingN(i);var holePt=jsts_old.operation.valid.IsValidOp.findPtNotNode(hole.getCoordinates(),shell,graph);if(holePt==null){return;}
var outside=!pir.isInside(holePt);if(outside){this.validErr=new jsts_old.operation.valid.TopologyValidationError(jsts_old.operation.valid.TopologyValidationError.HOLE_OUTSIDE_SHELL,holePt);return;}}};jsts_old.operation.valid.IsValidOp.prototype.checkHolesNotNested=function(p,graph){var nestedTester=new jsts_old.operation.valid.IndexedNestedRingTester(graph);for(var i=0;i<p.getNumInteriorRing();i++){var innerHole=p.getInteriorRingN(i);nestedTester.add(innerHole);}
var isNonNested=nestedTester.isNonNested();if(!isNonNested){this.validErr=new jsts_old.operation.valid.TopologyValidationError(jsts_old.operation.valid.TopologyValidationError.NESTED_HOLES,nestedTester.getNestedPoint());}};jsts_old.operation.valid.IsValidOp.prototype.checkShellsNotNested=function(mp,graph){for(var i=0;i<mp.getNumGeometries();i++){var p=mp.getGeometryN(i);var shell=p.getExteriorRing();for(var j=0;j<mp.getNumGeometries();j++){if(i==j){continue;}
var p2=mp.getGeometryN(j);this.checkShellNotNested(shell,p2,graph);if(this.validErr!=null){return;}}}};jsts_old.operation.valid.IsValidOp.prototype.checkShellNotNested=function(shell,p,graph){var shellPts=shell.getCoordinates();var polyShell=p.getExteriorRing();var polyPts=polyShell.getCoordinates();var shellPt=jsts_old.operation.valid.IsValidOp.findPtNotNode(shellPts,polyShell,graph);if(shellPt==null){return;}
var insidePolyShell=jsts_old.algorithm.CGAlgorithms.isPointInRing(shellPt,polyPts);if(!insidePolyShell){return;}
if(p.getNumInteriorRing()<=0){this.validErr=new jsts_old.operation.valid.TopologyValidationError(jsts_old.operation.valid.TopologyValidationError.NESTED_SHELLS,shellPt);return;}
var badNestedPt=null;for(var i=0;i<p.getNumInteriorRing();i++){var hole=p.getInteriorRingN(i);badNestedPt=this.checkShellInsideHole(shell,hole,graph);if(badNestedPt==null){return;}}
this.validErr=new jsts_old.operation.valid.TopologyValidationError(jsts_old.operation.valid.TopologyValidationError.NESTED_SHELLS,badNestedPt);};jsts_old.operation.valid.IsValidOp.prototype.checkShellInsideHole=function(shell,hole,graph){var shellPts=shell.getCoordinates();var holePts=hole.getCoordinates();var shellPt=jsts_old.operation.valid.IsValidOp.findPtNotNode(shellPts,hole,graph);if(shellPt!=null){var insideHole=jsts_old.algorithm.CGAlgorithms.isPointInRing(shellPt,holePts);if(!insideHole){return shellPt;}}
var holePt=jsts_old.operation.valid.IsValidOp.findPtNotNode(holePts,shell,graph);if(holePt!=null){var insideShell=jsts_old.algorithm.CGAlgorithms.isPointInRing(holePt,shellPts);if(insideShell){return holePt;}
return null;}
jsts_old.util.Assert.shouldNeverReachHere('points in shell and hole appear to be equal');return null;};jsts_old.operation.valid.IsValidOp.prototype.checkConnectedInteriors=function(graph){var cit=new jsts_old.operation.valid.ConnectedInteriorTester(graph);if(!cit.isInteriorsConnected()){this.validErr=new jsts_old.operation.valid.TopologyValidationError(jsts_old.operation.valid.TopologyValidationError.DISCONNECTED_INTERIOR,cit.getCoordinate());}};jsts_old.algorithm.RobustDeterminant=function(){};jsts_old.algorithm.RobustDeterminant.signOfDet2x2=function(x1,y1,x2,y2){var sign,swap,k,count;count=0;sign=1;if((x1===0.0)||(y2===0.0)){if((y1===0.0)||(x2===0.0)){return 0;}
else if(y1>0){if(x2>0){return-sign;}
else{return sign;}}
else{if(x2>0){return sign;}
else{return-sign;}}}
if((y1===0.0)||(x2===0.0)){if(y2>0){if(x1>0){return sign;}
else{return-sign;}}
else{if(x1>0){return-sign;}
else{return sign;}}}
if(0.0<y1){if(0.0<y2){if(y1>y2){sign=-sign;swap=x1;x1=x2;x2=swap;swap=y1;y1=y2;y2=swap;}}
else{if(y1<=-y2){sign=-sign;x2=-x2;y2=-y2;}
else{swap=x1;x1=-x2;x2=swap;swap=y1;y1=-y2;y2=swap;}}}
else{if(0.0<y2){if(-y1<=y2){sign=-sign;x1=-x1;y1=-y1;}
else{swap=-x1;x1=x2;x2=swap;swap=-y1;y1=y2;y2=swap;}}
else{if(y1>=y2){x1=-x1;y1=-y1;x2=-x2;y2=-y2;}
else{sign=-sign;swap=-x1;x1=-x2;x2=swap;swap=-y1;y1=-y2;y2=swap;}}}
if(0.0<x1){if(0.0<x2){if(x1>x2){return sign;}}
else{return sign;}}
else{if(0.0<x2){return-sign;}
else{if(x1>=x2){sign=-sign;x1=-x1;x2=-x2;}
else{return-sign;}}}
while(true){count=count+1;k=Math.floor(x2/x1);x2=x2-k*x1;y2=y2-k*y1;if(y2<0.0){return-sign;}
if(y2>y1){return sign;}
if(x1>x2+x2){if(y1<y2+y2){return sign;}}
else{if(y1>y2+y2){return-sign;}
else{x2=x1-x2;y2=y1-y2;sign=-sign;}}
if(y2===0.0){if(x2===0.0){return 0;}
else{return-sign;}}
if(x2===0.0){return sign;}
k=Math.floor(x1/x2);x1=x1-k*x2;y1=y1-k*y2;if(y1<0.0){return sign;}
if(y1>y2){return-sign;}
if(x2>x1+x1){if(y2<y1+y1){return-sign;}}
else{if(y2>y1+y1){return sign;}
else{x1=x2-x1;y1=y2-y1;sign=-sign;}}
if(y1===0.0){if(x1===0.0){return 0;}
else{return sign;}}
if(x1===0.0){return-sign;}}};(function(){jsts_old.triangulate.quadedge.QuadEdge=function(){this.rot=null;this.vertex=null;this.next=null;this.data=null;};var QuadEdge=jsts_old.triangulate.quadedge.QuadEdge;jsts_old.triangulate.quadedge.QuadEdge.makeEdge=function(o,d){var q0,q1,q2,q3,base;q0=new QuadEdge();q1=new QuadEdge();q2=new QuadEdge();q3=new QuadEdge();q0.rot=q1;q1.rot=q2;q2.rot=q3;q3.rot=q0;q0.setNext(q0);q1.setNext(q3);q2.setNext(q2);q3.setNext(q1);base=q0;base.setOrig(o);base.setDest(d);return base;};jsts_old.triangulate.quadedge.QuadEdge.connect=function(a,b){var e=QuadEdge.makeEdge(a.dest(),b.orig());QuadEdge.splice(e,a.lNext());QuadEdge.splice(e.sym(),b);return e;};jsts_old.triangulate.quadedge.QuadEdge.splice=function(a,b){var alpha,beta,t1,t2,t3,t4;alpha=a.oNext().rot;beta=b.oNext().rot;t1=b.oNext();t2=a.oNext();t3=beta.oNext();t4=alpha.oNext();a.setNext(t1);b.setNext(t2);alpha.setNext(t3);beta.setNext(t4);};jsts_old.triangulate.quadedge.QuadEdge.swap=function(e){var a,b;a=e.oPrev();b=e.sym().oPrev();QuadEdge.splice(e,a);QuadEdge.splice(e.sym(),b);QuadEdge.splice(e,a.lNext());QuadEdge.splice(e.sym(),b.lNext());e.setOrig(a.dest());e.setDest(b.dest());};jsts_old.triangulate.quadedge.QuadEdge.prototype.getPrimary=function(){if(this.orig().getCoordinate().compareTo(this.dest().getCoordinate())<=0){return this;}
else{return this.sym();}};jsts_old.triangulate.quadedge.QuadEdge.prototype.setData=function(data){this.data=data;};jsts_old.triangulate.quadedge.QuadEdge.prototype.getData=function(){return this.data;};jsts_old.triangulate.quadedge.QuadEdge.prototype.delete_jsts_old=function(){this.rot=null;};jsts_old.triangulate.quadedge.QuadEdge.prototype.isLive=function(){return this.rot!==null;};jsts_old.triangulate.quadedge.QuadEdge.prototype.setNext=function(next){this.next=next;};jsts_old.triangulate.quadedge.QuadEdge.prototype.invRot=function(){return this.rot.sym();};jsts_old.triangulate.quadedge.QuadEdge.prototype.sym=function(){return this.rot.rot;};jsts_old.triangulate.quadedge.QuadEdge.prototype.oNext=function(){return this.next;};jsts_old.triangulate.quadedge.QuadEdge.prototype.oPrev=function(){return this.rot.next.rot;};jsts_old.triangulate.quadedge.QuadEdge.prototype.dNext=function(){return this.sym().oNext().sym();};jsts_old.triangulate.quadedge.QuadEdge.prototype.dPrev=function(){return this.invRot().oNext().invRot();};jsts_old.triangulate.quadedge.QuadEdge.prototype.lNext=function(){return this.invRot().oNext().rot;};jsts_old.triangulate.quadedge.QuadEdge.prototype.lPrev=function(){return this.next.sym();};jsts_old.triangulate.quadedge.QuadEdge.prototype.rNext=function(){return this.rot.next.invRot();};jsts_old.triangulate.quadedge.QuadEdge.prototype.rPrev=function(){return this.sym().oNext();};jsts_old.triangulate.quadedge.QuadEdge.prototype.setOrig=function(o){this.vertex=o;};jsts_old.triangulate.quadedge.QuadEdge.prototype.setDest=function(d){this.sym().setOrig(d);};jsts_old.triangulate.quadedge.QuadEdge.prototype.orig=function(){return this.vertex;};jsts_old.triangulate.quadedge.QuadEdge.prototype.dest=function(){return this.sym().orig();};jsts_old.triangulate.quadedge.QuadEdge.prototype.getLength=function(){return this.orig().getCoordinate().distance(dest().getCoordinate());};jsts_old.triangulate.quadedge.QuadEdge.prototype.equalsNonOriented=function(qe){if(this.equalsOriented(qe)){return true;}
if(this.equalsOriented(qe.sym())){return true;}
return false;};jsts_old.triangulate.quadedge.QuadEdge.prototype.equalsOriented=function(qe){if(this.orig().getCoordinate().equals2D(qe.orig().getCoordinate())&&this.dest().getCoordinate().equals2D(qe.dest().getCoordinate())){return true;}
return false;};jsts_old.triangulate.quadedge.QuadEdge.prototype.toLineSegment=function()
{return new jsts_old.geom.LineSegment(this.vertex.getCoordinate(),this.dest().getCoordinate());};jsts_old.triangulate.quadedge.QuadEdge.prototype.toString=function(){var p0,p1;p0=this.vertex.getCoordinate();p1=this.dest().getCoordinate();return jsts_old.io.WKTWriter.toLineString(p0,p1);};})();(function(){var Assert=jsts_old.util.Assert;jsts_old.geomgraph.EdgeEnd=function(edge,p0,p1,label){this.edge=edge;if(p0&&p1){this.init(p0,p1);}
if(label){this.label=label||null;}};jsts_old.geomgraph.EdgeEnd.prototype.edge=null;jsts_old.geomgraph.EdgeEnd.prototype.label=null;jsts_old.geomgraph.EdgeEnd.prototype.node=null;jsts_old.geomgraph.EdgeEnd.prototype.p0=null;jsts_old.geomgraph.EdgeEnd.prototype.p1=null;jsts_old.geomgraph.EdgeEnd.prototype.dx=null;jsts_old.geomgraph.EdgeEnd.prototype.dy=null;jsts_old.geomgraph.EdgeEnd.prototype.quadrant=null;jsts_old.geomgraph.EdgeEnd.prototype.init=function(p0,p1){this.p0=p0;this.p1=p1;this.dx=p1.x-p0.x;this.dy=p1.y-p0.y;this.quadrant=jsts_old.geomgraph.Quadrant.quadrant(this.dx,this.dy);Assert.isTrue(!(this.dx===0&&this.dy===0),'EdgeEnd with identical endpoints found');};jsts_old.geomgraph.EdgeEnd.prototype.getEdge=function(){return this.edge;};jsts_old.geomgraph.EdgeEnd.prototype.getLabel=function(){return this.label;};jsts_old.geomgraph.EdgeEnd.prototype.getCoordinate=function(){return this.p0;};jsts_old.geomgraph.EdgeEnd.prototype.getDirectedCoordinate=function(){return this.p1;};jsts_old.geomgraph.EdgeEnd.prototype.getQuadrant=function(){return this.quadrant;};jsts_old.geomgraph.EdgeEnd.prototype.getDx=function(){return this.dx;};jsts_old.geomgraph.EdgeEnd.prototype.getDy=function(){return this.dy;};jsts_old.geomgraph.EdgeEnd.prototype.setNode=function(node){this.node=node;};jsts_old.geomgraph.EdgeEnd.prototype.getNode=function(){return this.node;};jsts_old.geomgraph.EdgeEnd.prototype.compareTo=function(e){return this.compareDirection(e);};jsts_old.geomgraph.EdgeEnd.prototype.compareDirection=function(e){if(this.dx===e.dx&&this.dy===e.dy)
return 0;if(this.quadrant>e.quadrant)
return 1;if(this.quadrant<e.quadrant)
return-1;return jsts_old.algorithm.CGAlgorithms.computeOrientation(e.p0,e.p1,this.p1);};jsts_old.geomgraph.EdgeEnd.prototype.computeLabel=function(boundaryNodeRule){};})();jsts_old.operation.valid.IndexedNestedRingTester=function(graph){this.graph=graph;this.rings=new javascript.util.ArrayList();this.totalEnv=new jsts_old.geom.Envelope();this.index=null;this.nestedPt=null;};jsts_old.operation.valid.IndexedNestedRingTester.prototype.getNestedPoint=function(){return this.nestedPt;};jsts_old.operation.valid.IndexedNestedRingTester.prototype.add=function(ring){this.rings.add(ring);this.totalEnv.expandToInclude(ring.getEnvelopeInternal());};jsts_old.operation.valid.IndexedNestedRingTester.prototype.isNonNested=function(){this.buildIndex();for(var i=0;i<this.rings.size();i++){var innerRing=this.rings.get(i);var innerRingPts=innerRing.getCoordinates();var results=this.index.query(innerRing.getEnvelopeInternal());for(var j=0;j<results.length;j++){var searchRing=results[j];var searchRingPts=searchRing.getCoordinates();if(innerRing==searchRing){continue;}
if(!innerRing.getEnvelopeInternal().intersects(searchRing.getEnvelopeInternal())){continue;}
var innerRingPt=jsts_old.operation.valid.IsValidOp.findPtNotNode(innerRingPts,searchRing,this.graph);if(innerRingPt==null){continue;}
var isInside=jsts_old.algorithm.CGAlgorithms.isPointInRing(innerRingPt,searchRingPts);if(isInside){this.nestedPt=innerRingPt;return false;}}}
return true;};jsts_old.operation.valid.IndexedNestedRingTester.prototype.buildIndex=function(){this.index=new jsts_old.index.strtree.STRtree();for(var i=0;i<this.rings.size();i++){var ring=this.rings.get(i);var env=ring.getEnvelopeInternal();this.index.insert(env,ring);}};(function(){jsts_old.triangulate.IncrementalDelaunayTriangulator=function(subdiv){this.subdiv=subdiv;this.isUsingTolerance=subdiv.getTolerance()>0.0;};jsts_old.triangulate.IncrementalDelaunayTriangulator.prototype.insertSites=function(vertices){var i=0,il=vertices.length,v;for(i;i<il;i++){v=vertices[i];this.insertSite(v);}};jsts_old.triangulate.IncrementalDelaunayTriangulator.prototype.insertSite=function(v){var e,base,startEdge,t;e=this.subdiv.locate(v);if(this.subdiv.isVertexOfEdge(e,v)){return e;}
else if(this.subdiv.isOnEdge(e,v.getCoordinate())){e=e.oPrev();this.subdiv.delete_jsts_old(e.oNext());}
base=this.subdiv.makeEdge(e.orig(),v);jsts_old.triangulate.quadedge.QuadEdge.splice(base,e);startEdge=base;do{base=this.subdiv.connect(e,base.sym());e=base.oPrev();}while(e.lNext()!=startEdge);do{t=e.oPrev();if(t.dest().rightOf(e)&&v.isInCircle(e.orig(),t.dest(),e.dest())){jsts_old.triangulate.quadedge.QuadEdge.swap(e);e=e.oPrev();}else if(e.oNext()==startEdge){return base;}else{e=e.oNext().lPrev();}}while(true);};}());jsts_old.noding.OrientedCoordinateArray=function(pts){this.pts=pts;this._orientation=jsts_old.noding.OrientedCoordinateArray.orientation(pts);};jsts_old.noding.OrientedCoordinateArray.prototype.pts=null;jsts_old.noding.OrientedCoordinateArray.prototype._orientation=undefined;jsts_old.noding.OrientedCoordinateArray.orientation=function(pts){return jsts_old.geom.CoordinateArrays.increasingDirection(pts)===1;};jsts_old.noding.OrientedCoordinateArray.prototype.compareTo=function(o1){var oca=o1;var comp=jsts_old.noding.OrientedCoordinateArray.compareOriented(this.pts,this._orientation,oca.pts,oca._orientation);return comp;};jsts_old.noding.OrientedCoordinateArray.compareOriented=function(pts1,orientation1,pts2,orientation2){var dir1=orientation1?1:-1;var dir2=orientation2?1:-1;var limit1=orientation1?pts1.length:-1;var limit2=orientation2?pts2.length:-1;var i1=orientation1?0:pts1.length-1;var i2=orientation2?0:pts2.length-1;var comp=0;while(true){var compPt=pts1[i1].compareTo(pts2[i2]);if(compPt!==0)
return compPt;i1+=dir1;i2+=dir2;var done1=i1===limit1;var done2=i2===limit2;if(done1&&!done2)
return-1;if(!done1&&done2)
return 1;if(done1&&done2)
return 0;}};jsts_old.index.quadtree.Root=function(){jsts_old.index.quadtree.NodeBase.prototype.constructor.apply(this,arguments);this.origin=new jsts_old.geom.Coordinate(0.0,0.0);};jsts_old.index.quadtree.Root.prototype=new jsts_old.index.quadtree.NodeBase();jsts_old.index.quadtree.Root.prototype.insert=function(itemEnv,item){var index=this.getSubnodeIndex(itemEnv,this.origin);if(index===-1){this.add(item);return;}
var node=this.subnode[index];if(node===null||!node.getEnvelope().contains(itemEnv)){var largerNode=jsts_old.index.quadtree.Node.createExpanded(node,itemEnv);this.subnode[index]=largerNode;}
this.insertContained(this.subnode[index],itemEnv,item);};jsts_old.index.quadtree.Root.prototype.insertContained=function(tree,itemEnv,item){var isZeroX,isZeroY,node;isZeroX=jsts_old.index.IntervalSize.isZeroWidth(itemEnv.getMinX(),itemEnv.getMaxX());isZeroY=jsts_old.index.IntervalSize.isZeroWidth(itemEnv.getMinY(),itemEnv.getMaxY());if(isZeroX||isZeroY){node=tree.find(itemEnv);}else{node=tree.getNode(itemEnv);}
node.add(item);};jsts_old.index.quadtree.Root.prototype.isSearchMatch=function(searchEnv){return true;};jsts_old.noding.IntersectionAdder=function(li){this.li=li;};jsts_old.noding.IntersectionAdder.prototype=new jsts_old.noding.SegmentIntersector();jsts_old.noding.IntersectionAdder.constructor=jsts_old.noding.IntersectionAdder;jsts_old.noding.IntersectionAdder.isAdjacentSegments=function(i1,i2){return Math.abs(i1-i2)===1;};jsts_old.noding.IntersectionAdder.prototype._hasIntersection=false;jsts_old.noding.IntersectionAdder.prototype.hasProper=false;jsts_old.noding.IntersectionAdder.prototype.hasProperInterior=false;jsts_old.noding.IntersectionAdder.prototype.hasInterior=false;jsts_old.noding.IntersectionAdder.prototype.properIntersectionPoint=null;jsts_old.noding.IntersectionAdder.prototype.li=null;jsts_old.noding.IntersectionAdder.prototype.isSelfIntersection=null;jsts_old.noding.IntersectionAdder.prototype.numIntersections=0;jsts_old.noding.IntersectionAdder.prototype.numInteriorIntersections=0;jsts_old.noding.IntersectionAdder.prototype.numProperIntersections=0;jsts_old.noding.IntersectionAdder.prototype.numTests=0;jsts_old.noding.IntersectionAdder.prototype.getLineIntersector=function(){return this.li;};jsts_old.noding.IntersectionAdder.prototype.getProperIntersectionPoint=function(){return this.properIntersectionPoint;};jsts_old.noding.IntersectionAdder.prototype.hasIntersection=function(){return this._hasIntersection;};jsts_old.noding.IntersectionAdder.prototype.hasProperIntersection=function(){return this.hasProper;};jsts_old.noding.IntersectionAdder.prototype.hasProperInteriorIntersection=function(){return this.hasProperInterior;};jsts_old.noding.IntersectionAdder.prototype.hasInteriorIntersection=function(){return this.hasInterior;};jsts_old.noding.IntersectionAdder.prototype.isTrivialIntersection=function(e0,segIndex0,e1,segIndex1){if(e0==e1){if(this.li.getIntersectionNum()==1){if(jsts_old.noding.IntersectionAdder.isAdjacentSegments(segIndex0,segIndex1))
return true;if(e0.isClosed()){var maxSegIndex=e0.size()-1;if((segIndex0===0&&segIndex1===maxSegIndex)||(segIndex1===0&&segIndex0===maxSegIndex)){return true;}}}}
return false;};jsts_old.noding.IntersectionAdder.prototype.processIntersections=function(e0,segIndex0,e1,segIndex1){if(e0===e1&&segIndex0===segIndex1)
return;this.numTests++;var p00=e0.getCoordinates()[segIndex0];var p01=e0.getCoordinates()[segIndex0+1];var p10=e1.getCoordinates()[segIndex1];var p11=e1.getCoordinates()[segIndex1+1];this.li.computeIntersection(p00,p01,p10,p11);if(this.li.hasIntersection()){this.numIntersections++;if(this.li.isInteriorIntersection()){this.numInteriorIntersections++;this.hasInterior=true;}
if(!this.isTrivialIntersection(e0,segIndex0,e1,segIndex1)){this._hasIntersection=true;e0.addIntersections(this.li,segIndex0,0);e1.addIntersections(this.li,segIndex1,1);if(this.li.isProper()){this.numProperIntersections++;this.hasProper=true;this.hasProperInterior=true;}}}};jsts_old.noding.IntersectionAdder.prototype.isDone=function(){return false;};jsts_old.operation.union.CascadedPolygonUnion=function(polys){this.inputPolys=polys;};jsts_old.operation.union.CascadedPolygonUnion.union=function(polys){var op=new jsts_old.operation.union.CascadedPolygonUnion(polys);return op.union();};jsts_old.operation.union.CascadedPolygonUnion.prototype.inputPolys;jsts_old.operation.union.CascadedPolygonUnion.prototype.geomFactory=null;jsts_old.operation.union.CascadedPolygonUnion.prototype.STRTREE_NODE_CAPACITY=4;jsts_old.operation.union.CascadedPolygonUnion.prototype.union=function(){if(this.inputPolys.length===0){return null;}
this.geomFactory=this.inputPolys[0].getFactory();var index=new jsts_old.index.strtree.STRtree(this.STRTREE_NODE_CAPACITY);for(var i=0,l=this.inputPolys.length;i<l;i++){var item=this.inputPolys[i];index.insert(item.getEnvelopeInternal(),item);}
var itemTree=index.itemsTree();var unionAll=this.unionTree(itemTree);return unionAll;};jsts_old.operation.union.CascadedPolygonUnion.prototype.unionTree=function(geomTree){var geoms=this.reduceToGeometries(geomTree);var union=this.bindayUnion(geoms);return union;};jsts_old.operation.union.CascadedPolygonUnion.prototype.binaryUnion=function(geoms,start,end){start=start||0;end=end||geoms.length;if(end-start<=1){var g0=this.getGeometry(geoms,start);return this.unionSafe(g0,null);}
else if(end-start===2){return this.unionSafe(this.getGeometry(geoms,start),this.getGeometry(geoms,start+1));}
else{var mid=(end+start)/2;var g0=this.binaryUnion(geoms,start,mid);var g1=this.binaryUnion(geoms,mid,end);return this.unionSafe(g0,g1);}};jsts_old.operation.union.CascadedPolygonUnion.getGeometry=function(list,index){if(index>=list.length){return null;}
return list[i];};jsts_old.operation.union.CascadedPolygonUnion.prototype.reduceToGeometries=function(geomTree){var geoms=[];for(var i=0,l=geomTree.length;i<l;i++){var o=geomTree[i],geom=null;if(o instanceof Array){geom=this.unionTree(o);}
else if(o instanceof jsts_old.geom.Geometry){geom=o;}
geoms.push(geom);}
return geoms;};jsts_old.operation.union.CascadedPolygonUnion.prototype.unionSafe=function(g0,g1){if(g0===null&&g1===null){return null;}
if(g0===null){return g1.clone();}
if(g1===null){return g0.clone();}
return unionOptimized(g0,g1);};jsts_old.operation.union.CascadedPolygonUnion.prototype.unionOptimized=function(g0,g1){var g0Env=g0.getEnvelopeInternal(),g1Env=g1.getEnvelopeInternal();if(!g0Env.intersects(g1Env)){var combo=jsts_old.geom.util.GeometryCombiner.combine(g0,g1);return combo;}
if(g0.getNumGeometries<=1&&g1.getNumGeometries<=1){return this.unionActual(g0,g1);}
var commonEnv=g0Env.intersection(g1Env);return this.unionUsingEnvelopeIntersection(g0,g1,commonEnv);};jsts_old.operation.union.CascadedPolygonUnion.prototype.unionUsingEnvelopeIntersection=function(g0,g1,common){var disjointPolys=[];var g0Int=this.extractByEnvelope(common,g0,disjointPolys);var g1Int=this.extractByEnvelope(common,g1,disjointPolys);var union=this.unionActual(g0Int,g1Int);disjointPolys.push(union);var overallUnion=jsts_old.geom.util.GeometryCombiner.combine(disjointPolys);return overallUnion;};jsts_old.operation.union.CascadedPolygonUnion.prototype.extractByEnvelope=function(env,geom,disjointGeoms){var intersectingGeoms=[];for(var i=0;i<geom.getNumGeometries();i++){var elem=geom.getGeometryN(i);if(elem.getEnvelopeInternal().intersects(env)){intersectingGeoms.push(elem);}
else{disjointGeoms.add(elem);}}
return this.geomFactory.buildGeometry(intersectingGeoms);};jsts_old.operation.union.CascadedPolygonUnion.prototype.unionActual=function(g0,g1){return g0.union(g1);};(function(){jsts_old.geom.MultiPoint=function(points,factory){this.geometries=points||[];this.factory=factory;};jsts_old.geom.MultiPoint.prototype=new jsts_old.geom.GeometryCollection();jsts_old.geom.MultiPoint.constructor=jsts_old.geom.MultiPoint;jsts_old.geom.MultiPoint.prototype.getBoundary=function(){return this.getFactory().createGeometryCollection(null);};jsts_old.geom.MultiPoint.prototype.getGeometryN=function(n){return this.geometries[n];};jsts_old.geom.MultiPoint.prototype.equalsExact=function(other,tolerance){if(!this.isEquivalentClass(other)){return false;}
return jsts_old.geom.GeometryCollection.prototype.equalsExact.call(this,other,tolerance);};jsts_old.geom.MultiPoint.prototype.CLASS_NAME='jsts_old.geom.MultiPoint';})();jsts_old.operation.buffer.OffsetCurveBuilder=function(precisionModel,bufParams){this.precisionModel=precisionModel;this.bufParams=bufParams;};jsts_old.operation.buffer.OffsetCurveBuilder.prototype.distance=0.0;jsts_old.operation.buffer.OffsetCurveBuilder.prototype.precisionModel=null;jsts_old.operation.buffer.OffsetCurveBuilder.prototype.bufParams=null;jsts_old.operation.buffer.OffsetCurveBuilder.prototype.getBufferParameters=function(){return this.bufParams;};jsts_old.operation.buffer.OffsetCurveBuilder.prototype.getLineCurve=function(inputPts,distance){this.distance=distance;if(this.distance<0.0&&!this.bufParams.isSingleSided())
return null;if(this.distance==0.0)
return null;var posDistance=Math.abs(this.distance);var segGen=this.getSegGen(posDistance);if(inputPts.length<=1){this.computePointCurve(inputPts[0],segGen);}else{if(this.bufParams.isSingleSided()){var isRightSide=distance<0.0;this.computeSingleSidedBufferCurve(inputPts,isRightSide,segGen);}else
this.computeLineBufferCurve(inputPts,segGen);}
var lineCoord=segGen.getCoordinates();return lineCoord;};jsts_old.operation.buffer.OffsetCurveBuilder.prototype.getRingCurve=function(inputPts,side,distance){this.distance=distance;if(inputPts.length<=2)
return this.getLineCurve(inputPts,distance);if(this.distance==0.0){return jsts_old.operation.buffer.OffsetCurveBuilder.copyCoordinates(inputPts);}
var segGen=this.getSegGen(this.distance);this.computeRingBufferCurve(inputPts,side,segGen);return segGen.getCoordinates();};jsts_old.operation.buffer.OffsetCurveBuilder.prototype.getOffsetCurve=function(inputPts,distance){this.distance=distance;if(this.distance===0.0)
return null;var isRightSide=this.distance<0.0;var posDistance=Math.abs(this.distance);var segGen=this.getSegGen(posDistance);if(inputPts.length<=1){this.computePointCurve(inputPts[0],segGen);}else{this.computeOffsetCurve(inputPts,isRightSide,segGen);}
var curvePts=segGen.getCoordinates();if(isRightSide)
jsts_old.geom.CoordinateArrays.reverse(curvePts);return curvePts;};jsts_old.operation.buffer.OffsetCurveBuilder.copyCoordinates=function(pts){var copy=[];for(var i=0;i<pts.length;i++){copy.push(pts[i].clone());}
return copy;};jsts_old.operation.buffer.OffsetCurveBuilder.prototype.getSegGen=function(distance){return new jsts_old.operation.buffer.OffsetSegmentGenerator(this.precisionModel,this.bufParams,distance);};jsts_old.operation.buffer.OffsetCurveBuilder.SIMPLIFY_FACTOR=100.0;jsts_old.operation.buffer.OffsetCurveBuilder.simplifyTolerance=function(bufDistance){return bufDistance/jsts_old.operation.buffer.OffsetCurveBuilder.SIMPLIFY_FACTOR;};jsts_old.operation.buffer.OffsetCurveBuilder.prototype.computePointCurve=function(pt,segGen){switch(this.bufParams.getEndCapStyle()){case jsts_old.operation.buffer.BufferParameters.CAP_ROUND:segGen.createCircle(pt);break;case jsts_old.operation.buffer.BufferParameters.CAP_SQUARE:segGen.createSquare(pt);break;}};jsts_old.operation.buffer.OffsetCurveBuilder.prototype.computeLineBufferCurve=function(inputPts,segGen){var distTol=jsts_old.operation.buffer.OffsetCurveBuilder.simplifyTolerance(this.distance);var simp1=jsts_old.operation.buffer.BufferInputLineSimplifier.simplify(inputPts,distTol);var n1=simp1.length-1;segGen.initSideSegments(simp1[0],simp1[1],jsts_old.geomgraph.Position.LEFT);for(var i=2;i<=n1;i++){segGen.addNextSegment(simp1[i],true);}
segGen.addLastSegment();segGen.addLineEndCap(simp1[n1-1],simp1[n1]);var simp2=jsts_old.operation.buffer.BufferInputLineSimplifier.simplify(inputPts,-distTol);var n2=simp2.length-1;segGen.initSideSegments(simp2[n2],simp2[n2-1],jsts_old.geomgraph.Position.LEFT);for(var i=n2-2;i>=0;i--){segGen.addNextSegment(simp2[i],true);}
segGen.addLastSegment();segGen.addLineEndCap(simp2[1],simp2[0]);segGen.closeRing();};jsts_old.operation.buffer.OffsetCurveBuilder.prototype.computeSingleSidedBufferCurve=function(inputPts,isRightSide,segGen){var distTol=jsts_old.operation.buffer.OffsetCurveBuilder.simplifyTolerance(this.distance);if(isRightSide){segGen.addSegments(inputPts,true);var simp2=jsts_old.operation.buffer.BufferInputLineSimplifier.simplify(inputPts,-distTol);var n2=simp2.length-1;segGen.initSideSegments(simp2[n2],simp2[n2-1],jsts_old.geomgraph.Position.LEFT);segGen.addFirstSegment();for(var i=n2-2;i>=0;i--){segGen.addNextSegment(simp2[i],true);}}else{segGen.addSegments(inputPts,false);var simp1=jsts_old.operation.buffer.BufferInputLineSimplifier.simplify(inputPts,distTol);var n1=simp1.length-1;segGen.initSideSegments(simp1[0],simp1[1],jsts_old.geomgraph.Position.LEFT);segGen.addFirstSegment();for(var i=2;i<=n1;i++){segGen.addNextSegment(simp1[i],true);}}
segGen.addLastSegment();segGen.closeRing();};jsts_old.operation.buffer.OffsetCurveBuilder.prototype.computeOffsetCurve=function(inputPts,isRightSide,segGen){var distTol=jsts_old.operation.buffer.OffsetCurveBuilder.simplifyTolerance(distance);if(isRightSide){var simp2=jsts_old.operation.buffer.BufferInputLineSimplifier.simplify(inputPts,-distTol);var n2=simp2.length-1;segGen.initSideSegments(simp2[n2],simp2[n2-1],jsts_old.geomgraph.Position.LEFT);segGen.addFirstSegment();for(var i=n2-2;i>=0;i--){segGen.addNextSegment(simp2[i],true);}}else{var simp1=jsts_old.operation.buffer.BufferInputLineSimplifier.simplify(inputPts,distTol);var n1=simp1.length-1;segGen.initSideSegments(simp1[0],simp1[1],jsts_old.geomgraph.Position.LEFT);segGen.addFirstSegment();for(var i=2;i<=n1;i++){segGen.addNextSegment(simp1[i],true);}}
segGen.addLastSegment();};jsts_old.operation.buffer.OffsetCurveBuilder.prototype.computeRingBufferCurve=function(inputPts,side,segGen){var distTol=jsts_old.operation.buffer.OffsetCurveBuilder.simplifyTolerance(this.distance);if(side===jsts_old.geomgraph.Position.RIGHT)
distTol=-distTol;var simp=jsts_old.operation.buffer.BufferInputLineSimplifier.simplify(inputPts,distTol);var n=simp.length-1;segGen.initSideSegments(simp[n-1],simp[0],side);for(var i=1;i<=n;i++){var addStartPoint=i!==1;segGen.addNextSegment(simp[i],addStartPoint);}
segGen.closeRing();};(function(){var HotPixelSnapAction=function(hotPixel,parentEdge,vertexIndex){this.hotPixel=hotPixel;this.parentEdge=parentEdge;this.vertexIndex=vertexIndex;};HotPixelSnapAction.prototype=new jsts_old.index.chain.MonotoneChainSelectAction();HotPixelSnapAction.constructor=HotPixelSnapAction;HotPixelSnapAction.prototype.hotPixel=null;HotPixelSnapAction.prototype.parentEdge=null;HotPixelSnapAction.prototype.vertexIndex=null;HotPixelSnapAction.prototype._isNodeAdded=false;HotPixelSnapAction.prototype.isNodeAdded=function(){return this._isNodeAdded;};HotPixelSnapAction.prototype.select=function(mc,startIndex){var ss=mc.getContext();if(this.parentEdge!==null){if(ss===this.parentEdge&&startIndex===this.vertexIndex)
return;}
this._isNodeAdded=this.hotPixel.addSnappedNode(ss,startIndex);};jsts_old.noding.snapround.MCIndexPointSnapper=function(index){this.index=index;};jsts_old.noding.snapround.MCIndexPointSnapper.prototype.index=null;jsts_old.noding.snapround.MCIndexPointSnapper.prototype.snap=function(hotPixel,parentEdge,vertexIndex){if(arguments.length===1){this.snap2.apply(this,arguments);return;}
var pixelEnv=hotPixel.getSafeEnvelope();var hotPixelSnapAction=new HotPixelSnapAction(hotPixel,parentEdge,vertexIndex);this.index.query(pixelEnv,{visitItem:function(testChain){testChain.select(pixelEnv,hotPixelSnapAction);}});return hotPixelSnapAction.isNodeAdded();};jsts_old.noding.snapround.MCIndexPointSnapper.prototype.snap2=function(hotPixel){return this.snap(hotPixel,null,-1);};})();jsts_old.geomgraph.Quadrant=function(){};jsts_old.geomgraph.Quadrant.NE=0;jsts_old.geomgraph.Quadrant.NW=1;jsts_old.geomgraph.Quadrant.SW=2;jsts_old.geomgraph.Quadrant.SE=3;jsts_old.geomgraph.Quadrant.quadrant=function(dx,dy){if(dx instanceof jsts_old.geom.Coordinate){return jsts_old.geomgraph.Quadrant.quadrant2.apply(this,arguments);}
if(dx===0.0&&dy===0.0)
throw new jsts_old.error.IllegalArgumentError('Cannot compute the quadrant for point ( '+dx+', '+dy+' )');if(dx>=0.0){if(dy>=0.0)
return jsts_old.geomgraph.Quadrant.NE;else
return jsts_old.geomgraph.Quadrant.SE;}else{if(dy>=0.0)
return jsts_old.geomgraph.Quadrant.NW;else
return jsts_old.geomgraph.Quadrant.SW;}};jsts_old.geomgraph.Quadrant.quadrant2=function(p0,p1){if(p1.x===p0.x&&p1.y===p0.y)
throw new jsts_old.error.IllegalArgumentError('Cannot compute the quadrant for two identical points '+p0);if(p1.x>=p0.x){if(p1.y>=p0.y)
return jsts_old.geomgraph.Quadrant.NE;else
return jsts_old.geomgraph.Quadrant.SE;}else{if(p1.y>=p0.y)
return jsts_old.geomgraph.Quadrant.NW;else
return jsts_old.geomgraph.Quadrant.SW;}};jsts_old.geomgraph.Quadrant.isOpposite=function(quad1,quad2){if(quad1===quad2)
return false;var diff=(quad1-quad2+4)%4;if(diff===2)
return true;return false;};jsts_old.geomgraph.Quadrant.commonHalfPlane=function(quad1,quad2){if(quad1===quad2)
return quad1;var diff=(quad1-quad2+4)%4;if(diff===2)
return-1;var min=(quad1<quad2)?quad1:quad2;var max=(quad1>quad2)?quad1:quad2;if(min===0&&max===3)
return 3;return min;};jsts_old.geomgraph.Quadrant.isInHalfPlane=function(quad,halfPlane){if(halfPlane===jsts_old.geomgraph.Quadrant.SE){return quad===jsts_old.geomgraph.Quadrant.SE||quad===jsts_old.geomgraph.Quadrant.SW;}
return quad===halfPlane||quad===halfPlane+1;};jsts_old.geomgraph.Quadrant.isNorthern=function(quad){return quad===jsts_old.geomgraph.Quadrant.NE||quad===jsts_old.geomgraph.Quadrant.NW;};jsts_old.planargraph.PlanarGraph=function(){this.nodeMap={};this.edges=[];this.dirEdges=[];};jsts_old.planargraph.PlanarGraph.prototype.edges=null;jsts_old.planargraph.PlanarGraph.prototype.dirEdges=null;jsts_old.planargraph.PlanarGraph.prototype.nodeMap=null;jsts_old.planargraph.PlanarGraph.prototype.getNodes=function(){var array=[];for(var key in this.nodeMap){if(this.nodeMap.hasOwnProperty(key)){array.push(this.nodeMap[key]);}}
var compare=function(a,b){return a.compareTo(b);};array.sort(compare);return array;};jsts_old.operation.valid.ConsistentAreaTester=function(geomGraph){this.geomGraph=geomGraph;this.li=new jsts_old.algorithm.RobustLineIntersector();this.nodeGraph=new jsts_old.operation.relate.RelateNodeGraph();this.invalidPoint=null;};jsts_old.operation.valid.ConsistentAreaTester.prototype.getInvalidPoint=function(){return this.invalidPoint;};jsts_old.operation.valid.ConsistentAreaTester.prototype.isNodeConsistentArea=function(){var intersector=this.geomGraph.computeSelfNodes(this.li,true);if(intersector.hasProperIntersection()){this.invalidPoint=intersector.getProperIntersectionPoint();return false;}
this.nodeGraph.build(this.geomGraph);return this.isNodeEdgeAreaLabelsConsistent();};jsts_old.operation.valid.ConsistentAreaTester.prototype.isNodeEdgeAreaLabelsConsistent=function(){for(var nodeIt=this.nodeGraph.getNodeIterator();nodeIt.hasNext();){var node=nodeIt.next();if(!node.getEdges().isAreaLabelsConsistent(this.geomGraph)){this.invalidPoint=node.getCoordinate().clone();return false;}}
return true;};jsts_old.operation.valid.ConsistentAreaTester.prototype.hasDuplicateRings=function(){for(var nodeIt=this.nodeGraph.getNodeIterator();nodeIt.hasNext();){var node=nodeIt.next();for(var i=node.getEdges().iterator();i.hasNext();){var eeb=i.next();if(eeb.getEdgeEnds().length>1){invalidPoint=eeb.getEdge().getCoordinate(0);return true;}}}
return false;};jsts_old.index.strtree.AbstractNode=function(level){this.level=level;this.childBoundables=[];};jsts_old.index.strtree.AbstractNode.prototype=new jsts_old.index.strtree.Boundable();jsts_old.index.strtree.AbstractNode.constructor=jsts_old.index.strtree.AbstractNode;jsts_old.index.strtree.AbstractNode.prototype.childBoundables=null;jsts_old.index.strtree.AbstractNode.prototype.bounds=null;jsts_old.index.strtree.AbstractNode.prototype.level=null;jsts_old.index.strtree.AbstractNode.prototype.getChildBoundables=function(){return this.childBoundables;};jsts_old.index.strtree.AbstractNode.prototype.computeBounds=function(){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.index.strtree.AbstractNode.prototype.getBounds=function(){if(this.bounds===null){this.bounds=this.computeBounds();}
return this.bounds;};jsts_old.index.strtree.AbstractNode.prototype.getLevel=function(){return this.level;};jsts_old.index.strtree.AbstractNode.prototype.addChildBoundable=function(childBoundable){this.childBoundables.push(childBoundable);};(function(){var Location=jsts_old.geom.Location;var Position=jsts_old.geomgraph.Position;var EdgeEnd=jsts_old.geomgraph.EdgeEnd;jsts_old.geomgraph.DirectedEdge=function(edge,isForward){EdgeEnd.call(this,edge);this.depth=[0,-999,-999];this._isForward=isForward;if(isForward){this.init(edge.getCoordinate(0),edge.getCoordinate(1));}else{var n=edge.getNumPoints()-1;this.init(edge.getCoordinate(n),edge.getCoordinate(n-1));}
this.computeDirectedLabel();};jsts_old.geomgraph.DirectedEdge.prototype=new EdgeEnd();jsts_old.geomgraph.DirectedEdge.constructor=jsts_old.geomgraph.DirectedEdge;jsts_old.geomgraph.DirectedEdge.depthFactor=function(currLocation,nextLocation){if(currLocation===Location.EXTERIOR&&nextLocation===Location.INTERIOR)
return 1;else if(currLocation===Location.INTERIOR&&nextLocation===Location.EXTERIOR)
return-1;return 0;};jsts_old.geomgraph.DirectedEdge.prototype._isForward=null;jsts_old.geomgraph.DirectedEdge.prototype._isInResult=false;jsts_old.geomgraph.DirectedEdge.prototype._isVisited=false;jsts_old.geomgraph.DirectedEdge.prototype.sym=null;jsts_old.geomgraph.DirectedEdge.prototype.next=null;jsts_old.geomgraph.DirectedEdge.prototype.nextMin=null;jsts_old.geomgraph.DirectedEdge.prototype.edgeRing=null;jsts_old.geomgraph.DirectedEdge.prototype.minEdgeRing=null;jsts_old.geomgraph.DirectedEdge.prototype.depth=null;jsts_old.geomgraph.DirectedEdge.prototype.getEdge=function(){return this.edge;};jsts_old.geomgraph.DirectedEdge.prototype.setInResult=function(isInResult){this._isInResult=isInResult;};jsts_old.geomgraph.DirectedEdge.prototype.isInResult=function(){return this._isInResult;};jsts_old.geomgraph.DirectedEdge.prototype.isVisited=function(){return this._isVisited;};jsts_old.geomgraph.DirectedEdge.prototype.setVisited=function(isVisited){this._isVisited=isVisited;};jsts_old.geomgraph.DirectedEdge.prototype.setEdgeRing=function(edgeRing){this.edgeRing=edgeRing;};jsts_old.geomgraph.DirectedEdge.prototype.getEdgeRing=function(){return this.edgeRing;};jsts_old.geomgraph.DirectedEdge.prototype.setMinEdgeRing=function(minEdgeRing){this.minEdgeRing=minEdgeRing;};jsts_old.geomgraph.DirectedEdge.prototype.getMinEdgeRing=function(){return this.minEdgeRing;};jsts_old.geomgraph.DirectedEdge.prototype.getDepth=function(position){return this.depth[position];};jsts_old.geomgraph.DirectedEdge.prototype.setDepth=function(position,depthVal){if(this.depth[position]!==-999){if(this.depth[position]!==depthVal)
throw new jsts_old.error.TopologyError('assigned depths do not match',this.getCoordinate());}
this.depth[position]=depthVal;};jsts_old.geomgraph.DirectedEdge.prototype.getDepthDelta=function(){var depthDelta=this.edge.getDepthDelta();if(!this._isForward)
depthDelta=-depthDelta;return depthDelta;};jsts_old.geomgraph.DirectedEdge.prototype.setVisitedEdge=function(isVisited){this.setVisited(isVisited);this.sym.setVisited(isVisited);};jsts_old.geomgraph.DirectedEdge.prototype.getSym=function(){return this.sym;};jsts_old.geomgraph.DirectedEdge.prototype.isForward=function(){return this._isForward;};jsts_old.geomgraph.DirectedEdge.prototype.setSym=function(de){this.sym=de;};jsts_old.geomgraph.DirectedEdge.prototype.getNext=function(){return this.next;};jsts_old.geomgraph.DirectedEdge.prototype.setNext=function(next){this.next=next;};jsts_old.geomgraph.DirectedEdge.prototype.getNextMin=function(){return this.nextMin;};jsts_old.geomgraph.DirectedEdge.prototype.setNextMin=function(nextMin){this.nextMin=nextMin;};jsts_old.geomgraph.DirectedEdge.prototype.isLineEdge=function(){var isLine=this.label.isLine(0)||this.label.isLine(1);var isExteriorIfArea0=!this.label.isArea(0)||this.label.allPositionsEqual(0,Location.EXTERIOR);var isExteriorIfArea1=!this.label.isArea(1)||this.label.allPositionsEqual(1,Location.EXTERIOR);return isLine&&isExteriorIfArea0&&isExteriorIfArea1;};jsts_old.geomgraph.DirectedEdge.prototype.isInteriorAreaEdge=function(){var isInteriorAreaEdge=true;for(var i=0;i<2;i++){if(!(this.label.isArea(i)&&this.label.getLocation(i,Position.LEFT)===Location.INTERIOR&&this.label.getLocation(i,Position.RIGHT)===Location.INTERIOR)){isInteriorAreaEdge=false;}}
return isInteriorAreaEdge;};jsts_old.geomgraph.DirectedEdge.prototype.computeDirectedLabel=function(){this.label=new jsts_old.geomgraph.Label(this.edge.getLabel());if(!this._isForward)
this.label.flip();};jsts_old.geomgraph.DirectedEdge.prototype.setEdgeDepths=function(position,depth){var depthDelta=this.getEdge().getDepthDelta();if(!this._isForward)
depthDelta=-depthDelta;var directionFactor=1;if(position===Position.LEFT)
directionFactor=-1;var oppositePos=Position.opposite(position);var delta=depthDelta*directionFactor;var oppositeDepth=depth+delta;this.setDepth(position,depth);this.setDepth(oppositePos,oppositeDepth);};})();jsts_old.operation.distance.DistanceOp=function(g0,g1,terminateDistance){this.ptLocator=new jsts_old.algorithm.PointLocator();this.geom=[];this.geom[0]=g0;this.geom[1]=g1;this.terminateDistance=terminateDistance;};jsts_old.operation.distance.DistanceOp.prototype.geom=null;jsts_old.operation.distance.DistanceOp.prototype.terminateDistance=0.0;jsts_old.operation.distance.DistanceOp.prototype.ptLocator=null;jsts_old.operation.distance.DistanceOp.prototype.minDistanceLocation=null;jsts_old.operation.distance.DistanceOp.prototype.minDistance=Number.MAX_VALUE;jsts_old.operation.distance.DistanceOp.distance=function(g0,g1){var distOp=new jsts_old.operation.distance.DistanceOp(g0,g1,0.0);return distOp.distance();};jsts_old.operation.distance.DistanceOp.isWithinDistance=function(g0,g1,distance){var distOp=new jsts_old.operation.distance.DistanceOp(g0,g1,distance);return distOp.distance()<=distance;};jsts_old.operation.distance.DistanceOp.nearestPoints=function(g0,g1){var distOp=new jsts_old.operation.distance.DistanceOp(g0,g1,0.0);return distOp.nearestPoints();};jsts_old.operation.distance.DistanceOp.prototype.distance=function(){if(this.geom[0]===null||this.geom[1]===null)
throw new jsts_old.error.IllegalArgumentError('null geometries are not supported');if(this.geom[0].isEmpty()||this.geom[1].isEmpty())
return 0.0;this.computeMinDistance();return this.minDistance;};jsts_old.operation.distance.DistanceOp.prototype.nearestPoints=function(){this.computeMinDistance();var nearestPts=[this.minDistanceLocation[0].getCoordinate(),this.minDistanceLocation[1].getCoordinate()];return nearestPts;};jsts_old.operation.distance.DistanceOp.prototype.nearestLocations=function(){this.computeMinDistance();return this.minDistanceLocation;};jsts_old.operation.distance.DistanceOp.prototype.updateMinDistance=function(locGeom,flip){if(locGeom[0]===null)
return;if(flip){this.minDistanceLocation[0]=locGeom[1];this.minDistanceLocation[1]=locGeom[0];}else{this.minDistanceLocation[0]=locGeom[0];this.minDistanceLocation[1]=locGeom[1];}};jsts_old.operation.distance.DistanceOp.prototype.computeMinDistance=function(){if(arguments.length>0){this.computeMinDistance2.apply(this,arguments);return;}
if(this.minDistanceLocation!==null)
return;this.minDistanceLocation=[];this.computeContainmentDistance();if(this.minDistance<=this.terminateDistance)
return;this.computeFacetDistance();};jsts_old.operation.distance.DistanceOp.prototype.computeContainmentDistance=function(){if(arguments.length===2){this.computeContainmentDistance2.apply(this,arguments);return;}else if(arguments.length===3&&(!arguments[0]instanceof jsts_old.operation.distance.GeometryLocation)){this.computeContainmentDistance3.apply(this,arguments);return;}else if(arguments.length===3){this.computeContainmentDistance4.apply(this,arguments);return;}
var locPtPoly=[];this.computeContainmentDistance2(0,locPtPoly);if(this.minDistance<=this.terminateDistance)
return;this.computeContainmentDistance2(1,locPtPoly);};jsts_old.operation.distance.DistanceOp.prototype.computeContainmentDistance2=function(polyGeomIndex,locPtPoly){var locationsIndex=1-polyGeomIndex;var polys=jsts_old.geom.util.PolygonExtracter.getPolygons(this.geom[polyGeomIndex]);if(polys.length>0){var insideLocs=jsts_old.operation.distance.ConnectedElementLocationFilter.getLocations(this.geom[locationsIndex]);this.computeContainmentDistance3(insideLocs,polys,locPtPoly);if(this.minDistance<=this.terminateDistance){this.minDistanceLocation[locationsIndex]=locPtPoly[0];this.minDistanceLocation[polyGeomIndex]=locPtPoly[1];return;}}};jsts_old.operation.distance.DistanceOp.prototype.computeContainmentDistance3=function(locs,polys,locPtPoly){for(var i=0;i<locs.length;i++){var loc=locs[i];for(var j=0;j<polys.length;j++){this.computeContainmentDistance4(loc,polys[j],locPtPoly);if(this.minDistance<=this.terminateDistance)
return;}}};jsts_old.operation.distance.DistanceOp.prototype.computeContainmentDistance4=function(ptLoc,poly,locPtPoly){var pt=ptLoc.getCoordinate();if(jsts_old.geom.Location.EXTERIOR!==this.ptLocator.locate(pt,poly)){this.minDistance=0.0;locPtPoly[0]=ptLoc;locPtPoly[1]=new jsts_old.operation.distance.GeometryLocation(poly,pt);return;}};jsts_old.operation.distance.DistanceOp.prototype.computeFacetDistance=function(){var locGeom=[];var lines0=jsts_old.geom.util.LinearComponentExtracter.getLines(this.geom[0]);var lines1=jsts_old.geom.util.LinearComponentExtracter.getLines(this.geom[1]);var pts0=jsts_old.geom.util.PointExtracter.getPoints(this.geom[0]);var pts1=jsts_old.geom.util.PointExtracter.getPoints(this.geom[1]);this.computeMinDistanceLines(lines0,lines1,locGeom);this.updateMinDistance(locGeom,false);if(this.minDistance<=this.terminateDistance)
return;locGeom[0]=null;locGeom[1]=null;this.computeMinDistanceLinesPoints(lines0,pts1,locGeom);this.updateMinDistance(locGeom,false);if(this.minDistance<=this.terminateDistance)
return;locGeom[0]=null;locGeom[1]=null;this.computeMinDistanceLinesPoints(lines1,pts0,locGeom);this.updateMinDistance(locGeom,true);if(this.minDistance<=this.terminateDistance)
return;locGeom[0]=null;locGeom[1]=null;this.computeMinDistancePoints(pts0,pts1,locGeom);this.updateMinDistance(locGeom,false);};jsts_old.operation.distance.DistanceOp.prototype.computeMinDistanceLines=function(lines0,lines1,locGeom){for(var i=0;i<lines0.length;i++){var line0=lines0[i];for(var j=0;j<lines1.length;j++){var line1=lines1[j];this.computeMinDistance(line0,line1,locGeom);if(this.minDistance<=this.terminateDistance)
return;}}};jsts_old.operation.distance.DistanceOp.prototype.computeMinDistancePoints=function(points0,points1,locGeom){for(var i=0;i<points0.length;i++){var pt0=points0[i];for(var j=0;j<points1.length;j++){var pt1=points1[j];var dist=pt0.getCoordinate().distance(pt1.getCoordinate());if(dist<this.minDistance){this.minDistance=dist;locGeom[0]=new jsts_old.operation.distance.GeometryLocation(pt0,0,pt0.getCoordinate());locGeom[1]=new jsts_old.operation.distance.GeometryLocation(pt1,0,pt1.getCoordinate());}
if(this.minDistance<=this.terminateDistance)
return;}}};jsts_old.operation.distance.DistanceOp.prototype.computeMinDistanceLinesPoints=function(lines,points,locGeom){for(var i=0;i<lines.length;i++){var line=lines[i];for(var j=0;j<points.length;j++){var pt=points[j];this.computeMinDistance(line,pt,locGeom);if(this.minDistance<=this.terminateDistance)
return;}}};jsts_old.operation.distance.DistanceOp.prototype.computeMinDistance2=function(line0,line1,locGeom){if(line1 instanceof jsts_old.geom.Point){this.computeMinDistance3(line0,line1,locGeom);return;}
if(line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal())>this.minDistance){return;}
var coord0=line0.getCoordinates();var coord1=line1.getCoordinates();for(var i=0;i<coord0.length-1;i++){for(var j=0;j<coord1.length-1;j++){var dist=jsts_old.algorithm.CGAlgorithms.distanceLineLine(coord0[i],coord0[i+1],coord1[j],coord1[j+1]);if(dist<this.minDistance){this.minDistance=dist;var seg0=new jsts_old.geom.LineSegment(coord0[i],coord0[i+1]);var seg1=new jsts_old.geom.LineSegment(coord1[j],coord1[j+1]);var closestPt=seg0.closestPoints(seg1);locGeom[0]=new jsts_old.operation.distance.GeometryLocation(line0,i,closestPt[0]);locGeom[1]=new jsts_old.operation.distance.GeometryLocation(line1,j,closestPt[1]);}
if(this.minDistance<=this.terminateDistance){return;}}}};jsts_old.operation.distance.DistanceOp.prototype.computeMinDistance3=function(line,pt,locGeom){if(line.getEnvelopeInternal().distance(pt.getEnvelopeInternal())>this.minDistance){return;}
var coord0=line.getCoordinates();var coord=pt.getCoordinate();for(var i=0;i<coord0.length-1;i++){var dist=jsts_old.algorithm.CGAlgorithms.distancePointLine(coord,coord0[i],coord0[i+1]);if(dist<this.minDistance){this.minDistance=dist;var seg=new jsts_old.geom.LineSegment(coord0[i],coord0[i+1]);var segClosestPoint=seg.closestPoint(coord);locGeom[0]=new jsts_old.operation.distance.GeometryLocation(line,i,segClosestPoint);locGeom[1]=new jsts_old.operation.distance.GeometryLocation(pt,0,coord);}
if(this.minDistance<=this.terminateDistance){return;}}};jsts_old.index.strtree.SIRtree=function(nodeCapacity){nodeCapacity=nodeCapacity||10;jsts_old.index.strtree.AbstractSTRtree.call(this,nodeCapacity);};jsts_old.index.strtree.SIRtree.prototype=new jsts_old.index.strtree.AbstractSTRtree();jsts_old.index.strtree.SIRtree.constructor=jsts_old.index.strtree.SIRtree;jsts_old.index.strtree.SIRtree.prototype.comperator={compare:function(o1,o2){return o1.getBounds().getCentre()-o2.getBounds().getCentre();}};jsts_old.index.strtree.SIRtree.prototype.intersectionOp={intersects:function(aBounds,bBounds){return aBounds.intersects(bBounds);}};jsts_old.index.strtree.SIRtree.prototype.createNode=function(level){var AbstractNode=function(level){jsts_old.index.strtree.AbstractNode.apply(this,arguments);};AbstractNode.prototype=new jsts_old.index.strtree.AbstractNode();AbstractNode.constructor=AbstractNode;AbstractNode.prototype.computeBounds=function(){var bounds=null,childBoundables=this.getChildBoundables(),childBoundable;for(var i=0,l=childBoundables.length;i<l;i++){childBoundable=childBoundables[i];if(bounds===null){bounds=new jsts_old.index.strtree.Interval(childBoundable.getBounds());}
else{bounds.expandToInclude(childBoundable.getBounds());}}
return bounds;};return AbstractNode;};jsts_old.index.strtree.SIRtree.prototype.insert=function(x1,x2,item){jsts_old.index.strtree.AbstractSTRtree.prototype.insert(new jsts_old.index.strtree.Interval(Math.min(x1,x2),Math.max(x1,x2)),item);};jsts_old.index.strtree.SIRtree.prototype.query=function(x1,x2){x2=x2||x1;jsts_old.index.strtree.AbstractSTRtree.prototype.query(new jsts_old.index.strtree.Interval(Math.min(x1,x2),Math.max(x1,x2)));};jsts_old.index.strtree.SIRtree.prototype.getIntersectsOp=function(){return this.intersectionOp;};jsts_old.index.strtree.SIRtree.prototype.getComparator=function(){return this.comperator;};(function(){var Location=jsts_old.geom.Location;jsts_old.operation.relate.RelateNodeGraph=function(){this.nodes=new jsts_old.geomgraph.NodeMap(new jsts_old.operation.relate.RelateNodeFactory());};jsts_old.operation.relate.RelateNodeGraph.prototype.nodes=null;jsts_old.operation.relate.RelateNodeGraph.prototype.build=function(geomGraph){this.computeIntersectionNodes(geomGraph,0);this.copyNodesAndLabels(geomGraph,0);var eeBuilder=new jsts_old.operation.relate.EdgeEndBuilder();var eeList=eeBuilder.computeEdgeEnds(geomGraph.getEdgeIterator());this.insertEdgeEnds(eeList);};jsts_old.operation.relate.RelateNodeGraph.prototype.computeIntersectionNodes=function(geomGraph,argIndex){for(var edgeIt=geomGraph.getEdgeIterator();edgeIt.hasNext();){var e=edgeIt.next();var eLoc=e.getLabel().getLocation(argIndex);for(var eiIt=e.getEdgeIntersectionList().iterator();eiIt.hasNext();){var ei=eiIt.next();var n=this.nodes.addNode(ei.coord);if(eLoc===Location.BOUNDARY)
n.setLabelBoundary(argIndex);else{if(n.getLabel().isNull(argIndex))
n.setLabel(argIndex,Location.INTERIOR);}}}};jsts_old.operation.relate.RelateNodeGraph.prototype.copyNodesAndLabels=function(geomGraph,argIndex){for(var nodeIt=geomGraph.getNodeIterator();nodeIt.hasNext();){var graphNode=nodeIt.next();var newNode=this.nodes.addNode(graphNode.getCoordinate());newNode.setLabel(argIndex,graphNode.getLabel().getLocation(argIndex));}};jsts_old.operation.relate.RelateNodeGraph.prototype.insertEdgeEnds=function(ee){for(var i=ee.iterator();i.hasNext();){var e=i.next();this.nodes.add(e);}};jsts_old.operation.relate.RelateNodeGraph.prototype.getNodeIterator=function(){return this.nodes.iterator();};})();jsts_old.noding.SegmentNodeList=function(edge){this.nodeMap=new javascript.util.TreeMap();this.edge=edge;};jsts_old.noding.SegmentNodeList.prototype.nodeMap=null;jsts_old.noding.SegmentNodeList.prototype.iterator=function(){return this.nodeMap.values().iterator();};jsts_old.noding.SegmentNodeList.prototype.edge=null;jsts_old.noding.SegmentNodeList.prototype.getEdge=function(){return this.edge;};jsts_old.noding.SegmentNodeList.prototype.add=function(intPt,segmentIndex){var eiNew=new jsts_old.noding.SegmentNode(this.edge,intPt,segmentIndex,this.edge.getSegmentOctant(segmentIndex));var ei=this.nodeMap.get(eiNew);if(ei!==null){jsts_old.util.Assert.isTrue(ei.coord.equals2D(intPt),'Found equal nodes with different coordinates');return ei;}
this.nodeMap.put(eiNew,eiNew);return eiNew;};jsts_old.noding.SegmentNodeList.prototype.addEndpoints=function(){var maxSegIndex=this.edge.size()-1;this.add(this.edge.getCoordinate(0),0);this.add(this.edge.getCoordinate(maxSegIndex),maxSegIndex);};jsts_old.noding.SegmentNodeList.prototype.addCollapsedNodes=function(){var collapsedVertexIndexes=[];this.findCollapsesFromInsertedNodes(collapsedVertexIndexes);this.findCollapsesFromExistingVertices(collapsedVertexIndexes);for(var i=0;i<collapsedVertexIndexes.length;i++){var vertexIndex=collapsedVertexIndexes[i];this.add(this.edge.getCoordinate(vertexIndex),vertexIndex);}};jsts_old.noding.SegmentNodeList.prototype.findCollapsesFromExistingVertices=function(collapsedVertexIndexes){for(var i=0;i<this.edge.size()-2;i++){var p0=this.edge.getCoordinate(i);var p1=this.edge.getCoordinate(i+1);var p2=this.edge.getCoordinate(i+2);if(p0.equals2D(p2)){collapsedVertexIndexes.push(i+1);}}};jsts_old.noding.SegmentNodeList.prototype.findCollapsesFromInsertedNodes=function(collapsedVertexIndexes){var collapsedVertexIndex=[null];var it=this.iterator();var eiPrev=it.next();while(it.hasNext()){var ei=it.next();var isCollapsed=this.findCollapseIndex(eiPrev,ei,collapsedVertexIndex);if(isCollapsed)
collapsedVertexIndexes.push(collapsedVertexIndex[0]);eiPrev=ei;}};jsts_old.noding.SegmentNodeList.prototype.findCollapseIndex=function(ei0,ei1,collapsedVertexIndex){if(!ei0.coord.equals2D(ei1.coord))
return false;var numVerticesBetween=ei1.segmentIndex-ei0.segmentIndex;if(!ei1.isInterior()){numVerticesBetween--;}
if(numVerticesBetween===1){collapsedVertexIndex[0]=ei0.segmentIndex+1;return true;}
return false;};jsts_old.noding.SegmentNodeList.prototype.addSplitEdges=function(edgeList){this.addEndpoints();this.addCollapsedNodes();var it=this.iterator();var eiPrev=it.next();while(it.hasNext()){var ei=it.next();var newEdge=this.createSplitEdge(eiPrev,ei);edgeList.add(newEdge);eiPrev=ei;}};jsts_old.noding.SegmentNodeList.prototype.checkSplitEdgesCorrectness=function(splitEdges){var edgePts=edge.getCoordinates();var split0=splitEdges[0];var pt0=split0.getCoordinate(0);if(!pt0.equals2D(edgePts[0]))
throw new Error('bad split edge start point at '+pt0);var splitn=splitEdges[splitEdges.length-1];var splitnPts=splitn.getCoordinates();var ptn=splitnPts[splitnPts.length-1];if(!ptn.equals2D(edgePts[edgePts.length-1]))
throw new Error('bad split edge end point at '+ptn);};jsts_old.noding.SegmentNodeList.prototype.createSplitEdge=function(ei0,ei1){var npts=ei1.segmentIndex-ei0.segmentIndex+2;var lastSegStartPt=this.edge.getCoordinate(ei1.segmentIndex);var useIntPt1=ei1.isInterior()||!ei1.coord.equals2D(lastSegStartPt);if(!useIntPt1){npts--;}
var pts=[];var ipt=0;pts[ipt++]=new jsts_old.geom.Coordinate(ei0.coord);for(var i=ei0.segmentIndex+1;i<=ei1.segmentIndex;i++){pts[ipt++]=this.edge.getCoordinate(i);}
if(useIntPt1)
pts[ipt]=ei1.coord;return new jsts_old.noding.NodedSegmentString(pts,this.edge.getData());};jsts_old.operation.buffer.OffsetCurveSetBuilder=function(inputGeom,distance,curveBuilder){this.inputGeom=inputGeom;this.distance=distance;this.curveBuilder=curveBuilder;this.curveList=new javascript.util.ArrayList();};jsts_old.operation.buffer.OffsetCurveSetBuilder.prototype.inputGeom=null;jsts_old.operation.buffer.OffsetCurveSetBuilder.prototype.distance=null;jsts_old.operation.buffer.OffsetCurveSetBuilder.prototype.curveBuilder=null;jsts_old.operation.buffer.OffsetCurveSetBuilder.prototype.curveList=null;jsts_old.operation.buffer.OffsetCurveSetBuilder.prototype.getCurves=function(){this.add(this.inputGeom);return this.curveList;};jsts_old.operation.buffer.OffsetCurveSetBuilder.prototype.addCurve=function(coord,leftLoc,rightLoc){if(coord==null||coord.length<2)
return;var e=new jsts_old.noding.NodedSegmentString(coord,new jsts_old.geomgraph.Label(0,jsts_old.geom.Location.BOUNDARY,leftLoc,rightLoc));this.curveList.add(e);};jsts_old.operation.buffer.OffsetCurveSetBuilder.prototype.add=function(g){if(g.isEmpty())
return;if(g instanceof jsts_old.geom.Polygon)
this.addPolygon(g);else if(g instanceof jsts_old.geom.LineString)
this.addLineString(g);else if(g instanceof jsts_old.geom.Point)
this.addPoint(g);else if(g instanceof jsts_old.geom.MultiPoint)
this.addCollection(g);else if(g instanceof jsts_old.geom.MultiLineString)
this.addCollection(g);else if(g instanceof jsts_old.geom.MultiPolygon)
this.addCollection(g);else if(g instanceof jsts_old.geom.GeometryCollection)
this.addCollection(g);else
throw new jsts_old.error.IllegalArgumentError();};jsts_old.operation.buffer.OffsetCurveSetBuilder.prototype.addCollection=function(gc){for(var i=0;i<gc.getNumGeometries();i++){var g=gc.getGeometryN(i);this.add(g);}};jsts_old.operation.buffer.OffsetCurveSetBuilder.prototype.addPoint=function(p){if(this.distance<=0.0)
return;var coord=p.getCoordinates();var curve=this.curveBuilder.getLineCurve(coord,this.distance);this.addCurve(curve,jsts_old.geom.Location.EXTERIOR,jsts_old.geom.Location.INTERIOR);};jsts_old.operation.buffer.OffsetCurveSetBuilder.prototype.addLineString=function(line){if(this.distance<=0.0&&!this.curveBuilder.getBufferParameters().isSingleSided())
return;var coord=jsts_old.geom.CoordinateArrays.removeRepeatedPoints(line.getCoordinates());var curve=this.curveBuilder.getLineCurve(coord,this.distance);this.addCurve(curve,jsts_old.geom.Location.EXTERIOR,jsts_old.geom.Location.INTERIOR);};jsts_old.operation.buffer.OffsetCurveSetBuilder.prototype.addPolygon=function(p){var offsetDistance=this.distance;var offsetSide=jsts_old.geomgraph.Position.LEFT;if(this.distance<0.0){offsetDistance=-this.distance;offsetSide=jsts_old.geomgraph.Position.RIGHT;}
var shell=p.getExteriorRing();var shellCoord=jsts_old.geom.CoordinateArrays.removeRepeatedPoints(shell.getCoordinates());if(this.distance<0.0&&this.isErodedCompletely(shell,this.distance))
return;if(this.distance<=0.0&&shellCoord.length<3)
return;this.addPolygonRing(shellCoord,offsetDistance,offsetSide,jsts_old.geom.Location.EXTERIOR,jsts_old.geom.Location.INTERIOR);for(var i=0;i<p.getNumInteriorRing();i++){var hole=p.getInteriorRingN(i);var holeCoord=jsts_old.geom.CoordinateArrays.removeRepeatedPoints(hole.getCoordinates());if(this.distance>0.0&&this.isErodedCompletely(hole,-this.distance))
continue;this.addPolygonRing(holeCoord,offsetDistance,jsts_old.geomgraph.Position.opposite(offsetSide),jsts_old.geom.Location.INTERIOR,jsts_old.geom.Location.EXTERIOR);}};jsts_old.operation.buffer.OffsetCurveSetBuilder.prototype.addPolygonRing=function(coord,offsetDistance,side,cwLeftLoc,cwRightLoc){if(offsetDistance==0.0&&coord.length<jsts_old.geom.LinearRing.MINIMUM_VALID_SIZE)
return;var leftLoc=cwLeftLoc;var rightLoc=cwRightLoc;if(coord.length>=jsts_old.geom.LinearRing.MINIMUM_VALID_SIZE&&jsts_old.algorithm.CGAlgorithms.isCCW(coord)){leftLoc=cwRightLoc;rightLoc=cwLeftLoc;side=jsts_old.geomgraph.Position.opposite(side);}
var curve=this.curveBuilder.getRingCurve(coord,side,offsetDistance);this.addCurve(curve,leftLoc,rightLoc);};jsts_old.operation.buffer.OffsetCurveSetBuilder.prototype.isErodedCompletely=function(ring,bufferDistance){var ringCoord=ring.getCoordinates();var minDiam=0.0;if(ringCoord.length<4)
return bufferDistance<0;if(ringCoord.length==4)
return this.isTriangleErodedCompletely(ringCoord,bufferDistance);var env=ring.getEnvelopeInternal();var envMinDimension=Math.min(env.getHeight(),env.getWidth());if(bufferDistance<0.0&&2*Math.abs(bufferDistance)>envMinDimension)
return true;return false;};jsts_old.operation.buffer.OffsetCurveSetBuilder.prototype.isTriangleErodedCompletely=function(triangleCoord,bufferDistance){var tri=new Triangle(triangleCoord[0],triangleCoord[1],triangleCoord[2]);var inCentre=tri.inCentre();var distToCentre=jsts_old.algorithm.CGAlgorithms.distancePointLine(inCentre,tri.p0,tri.p1);return distToCentre<Math.abs(bufferDistance);};jsts_old.operation.buffer.BufferParameters=function(quadrantSegments,endCapStyle,joinStyle,mitreLimit){if(quadrantSegments)
this.setQuadrantSegments(quadrantSegments);if(endCapStyle)
this.setEndCapStyle(endCapStyle);if(joinStyle)
this.setJoinStyle(joinStyle);if(mitreLimit)
this.setMitreLimit(mitreLimit);};jsts_old.operation.buffer.BufferParameters.CAP_ROUND=1;jsts_old.operation.buffer.BufferParameters.CAP_FLAT=2;jsts_old.operation.buffer.BufferParameters.CAP_SQUARE=3;jsts_old.operation.buffer.BufferParameters.JOIN_ROUND=1;jsts_old.operation.buffer.BufferParameters.JOIN_MITRE=2;jsts_old.operation.buffer.BufferParameters.JOIN_BEVEL=3;jsts_old.operation.buffer.BufferParameters.DEFAULT_QUADRANT_SEGMENTS=8;jsts_old.operation.buffer.BufferParameters.DEFAULT_MITRE_LIMIT=5.0;jsts_old.operation.buffer.BufferParameters.prototype.quadrantSegments=jsts_old.operation.buffer.BufferParameters.DEFAULT_QUADRANT_SEGMENTS;jsts_old.operation.buffer.BufferParameters.prototype.endCapStyle=jsts_old.operation.buffer.BufferParameters.CAP_ROUND;jsts_old.operation.buffer.BufferParameters.prototype.joinStyle=jsts_old.operation.buffer.BufferParameters.JOIN_ROUND;jsts_old.operation.buffer.BufferParameters.prototype.mitreLimit=jsts_old.operation.buffer.BufferParameters.DEFAULT_MITRE_LIMIT;jsts_old.operation.buffer.BufferParameters.prototype._isSingleSided=false;jsts_old.operation.buffer.BufferParameters.prototype.getQuadrantSegments=function(){return this.quadrantSegments;};jsts_old.operation.buffer.BufferParameters.prototype.setQuadrantSegments=function(quadrantSegments){this.quadrantSegments=quadrantSegments;};jsts_old.operation.buffer.BufferParameters.prototype.setQuadrantSegments=function(quadSegs){this.quadrantSegments=quadSegs;if(this.quadrantSegments===0)
this.joinStyle=jsts_old.operation.buffer.BufferParameters.JOIN_BEVEL;if(this.quadrantSegments<0){this.joinStyle=jsts_old.operation.buffer.BufferParameters.JOIN_MITRE;this.mitreLimit=Math.abs(this.quadrantSegments);}
if(quadSegs<=0){this.quadrantSegments=1;}
if(this.joinStyle!==jsts_old.operation.buffer.BufferParameters.JOIN_ROUND){this.quadrantSegments=jsts_old.operation.buffer.BufferParameters.DEFAULT_QUADRANT_SEGMENTS;}};jsts_old.operation.buffer.BufferParameters.bufferDistanceError=function(quadSegs){var alpha=Math.PI/2.0/quadSegs;return 1-Math.cos(alpha/2.0);};jsts_old.operation.buffer.BufferParameters.prototype.getEndCapStyle=function(){return this.endCapStyle;};jsts_old.operation.buffer.BufferParameters.prototype.setEndCapStyle=function(endCapStyle){this.endCapStyle=endCapStyle;};jsts_old.operation.buffer.BufferParameters.prototype.getJoinStyle=function(){return this.joinStyle;};jsts_old.operation.buffer.BufferParameters.prototype.setJoinStyle=function(joinStyle){this.joinStyle=joinStyle;};jsts_old.operation.buffer.BufferParameters.prototype.getMitreLimit=function(){return this.mitreLimit;};jsts_old.operation.buffer.BufferParameters.prototype.setMitreLimit=function(mitreLimit){this.mitreLimit=mitreLimit;};jsts_old.operation.buffer.BufferParameters.prototype.setSingleSided=function(isSingleSided){this._isSingleSided=isSingleSided;};jsts_old.operation.buffer.BufferParameters.prototype.isSingleSided=function(){return this._isSingleSided;};jsts_old.geom.CoordinateSequenceFilter=function(){};jsts_old.geom.CoordinateSequenceFilter.prototype.filter=jsts_old.abstractFunc;jsts_old.geom.CoordinateSequenceFilter.prototype.isDone=jsts_old.abstractFunc;jsts_old.geom.CoordinateSequenceFilter.prototype.isGeometryChanged=jsts_old.abstractFunc;jsts_old.algorithm.distance.PointPairDistance=function(){this.pt=[new jsts_old.geom.Coordinate(),new jsts_old.geom.Coordinate()];};jsts_old.algorithm.distance.PointPairDistance.prototype.pt=null;jsts_old.algorithm.distance.PointPairDistance.prototype.distance=NaN;jsts_old.algorithm.distance.PointPairDistance.prototype.isNull=true;jsts_old.algorithm.distance.PointPairDistance.prototype.initialize=function(p0,p1,distance){if(p0===undefined){this.isNull=true;return;}
this.pt[0].setCoordinate(p0);this.pt[1].setCoordinate(p1);this.distance=distance!==undefined?distance:p0.distance(p1);this.isNull=false;};jsts_old.algorithm.distance.PointPairDistance.prototype.getDistance=function(){return this.distance;};jsts_old.algorithm.distance.PointPairDistance.prototype.getCoordinates=function(){return this.pt;};jsts_old.algorithm.distance.PointPairDistance.prototype.getCoordinate=function(i){return this.pt[i];};jsts_old.algorithm.distance.PointPairDistance.prototype.setMaximum=function(ptDist){if(arguments.length===2){this.setMaximum2.apply(this,arguments);return;}
this.setMaximum(ptDist.pt[0],ptDist.pt[1]);};jsts_old.algorithm.distance.PointPairDistance.prototype.setMaximum2=function(p0,p1){if(this.isNull){this.initialize(p0,p1);return;}
var dist=p0.distance(p1);if(dist>this.distance)
this.initialize(p0,p1,dist);};jsts_old.algorithm.distance.PointPairDistance.prototype.setMinimum=function(ptDist){if(arguments.length===2){this.setMinimum2.apply(this,arguments);return;}
this.setMinimum(ptDist.pt[0],ptDist.pt[1]);};jsts_old.algorithm.distance.PointPairDistance.prototype.setMinimum2=function(p0,p1){if(this.isNull){this.initialize(p0,p1);return;}
var dist=p0.distance(p1);if(dist<this.distance)
this.initialize(p0,p1,dist);};(function(){var PointPairDistance=jsts_old.algorithm.distance.PointPairDistance;var DistanceToPoint=jsts_old.algorithm.distance.DistanceToPoint;var MaxPointDistanceFilter=function(geom){this.maxPtDist=new PointPairDistance();this.minPtDist=new PointPairDistance();this.euclideanDist=new DistanceToPoint();this.geom=geom;};MaxPointDistanceFilter.prototype=new jsts_old.geom.CoordinateFilter();MaxPointDistanceFilter.prototype.maxPtDist=new PointPairDistance();MaxPointDistanceFilter.prototype.minPtDist=new PointPairDistance();MaxPointDistanceFilter.prototype.euclideanDist=new DistanceToPoint();MaxPointDistanceFilter.prototype.geom;MaxPointDistanceFilter.prototype.filter=function(pt){this.minPtDist.initialize();DistanceToPoint.computeDistance(this.geom,pt,this.minPtDist);this.maxPtDist.setMaximum(this.minPtDist);};MaxPointDistanceFilter.prototype.getMaxPointDistance=function(){return this.maxPtDist;};var MaxDensifiedByFractionDistanceFilter=function(geom,fraction){this.maxPtDist=new PointPairDistance();this.minPtDist=new PointPairDistance();this.geom=geom;this.numSubSegs=Math.round(1.0/fraction);};MaxDensifiedByFractionDistanceFilter.prototype=new jsts_old.geom.CoordinateSequenceFilter();MaxDensifiedByFractionDistanceFilter.prototype.maxPtDist=new PointPairDistance();MaxDensifiedByFractionDistanceFilter.prototype.minPtDist=new PointPairDistance();MaxDensifiedByFractionDistanceFilter.prototype.geom;MaxDensifiedByFractionDistanceFilter.prototype.numSubSegs=0;MaxDensifiedByFractionDistanceFilter.prototype.filter=function(seq,index){if(index==0)
return;var p0=seq[index-1];var p1=seq[index];var delx=(p1.x-p0.x)/this.numSubSegs;var dely=(p1.y-p0.y)/this.numSubSegs;for(var i=0;i<this.numSubSegs;i++){var x=p0.x+i*delx;var y=p0.y+i*dely;var pt=new jsts_old.geom.Coordinate(x,y);this.minPtDist.initialize();DistanceToPoint.computeDistance(this.geom,pt,this.minPtDist);this.maxPtDist.setMaximum(this.minPtDist);}};MaxDensifiedByFractionDistanceFilter.prototype.isGeometryChanged=function(){return false;};MaxDensifiedByFractionDistanceFilter.prototype.isDone=function(){return false;};MaxDensifiedByFractionDistanceFilter.prototype.getMaxPointDistance=function(){return this.maxPtDist;};jsts_old.algorithm.distance.DiscreteHausdorffDistance=function(g0,g1){this.g0=g0;this.g1=g1;this.ptDist=new jsts_old.algorithm.distance.PointPairDistance();};jsts_old.algorithm.distance.DiscreteHausdorffDistance.prototype.g0=null;jsts_old.algorithm.distance.DiscreteHausdorffDistance.prototype.g1=null;jsts_old.algorithm.distance.DiscreteHausdorffDistance.prototype.ptDist=null;jsts_old.algorithm.distance.DiscreteHausdorffDistance.prototype.densifyFrac=0.0;jsts_old.algorithm.distance.DiscreteHausdorffDistance.distance=function(g0,g1,densifyFrac){var dist=new jsts_old.algorithm.distance.DiscreteHausdorffDistance(g0,g1);if(densifyFrac!==undefined)
dist.setDensifyFraction(densifyFrac);return dist.distance();};jsts_old.algorithm.distance.DiscreteHausdorffDistance.prototype.setDensifyFraction=function(densifyFrac){if(densifyFrac>1.0||densifyFrac<=0.0)
throw new jsts_old.error.IllegalArgumentError('Fraction is not in range (0.0 - 1.0]');this.densifyFrac=densifyFrac;};jsts_old.algorithm.distance.DiscreteHausdorffDistance.prototype.distance=function(){this.compute(this.g0,this.g1);return ptDist.getDistance();};jsts_old.algorithm.distance.DiscreteHausdorffDistance.prototype.orientedDistance=function(){this.computeOrientedDistance(this.g0,this.g1,this.ptDist);return this.ptDist.getDistance();};jsts_old.algorithm.distance.DiscreteHausdorffDistance.prototype.getCoordinates=function(){return ptDist.getCoordinates();};jsts_old.algorithm.distance.DiscreteHausdorffDistance.prototype.compute=function(g0,g1){this.computeOrientedDistance(g0,g1,this.ptDist);this.computeOrientedDistance(g1,g0,this.ptDist);};jsts_old.algorithm.distance.DiscreteHausdorffDistance.prototype.computeOrientedDistance=function(discreteGeom,geom,ptDist){var distFilter=new MaxPointDistanceFilter(geom);discreteGeom.apply(distFilter);ptDist.setMaximum(distFilter.getMaxPointDistance());if(this.densifyFrac>0){var fracFilter=new MaxDensifiedByFractionDistanceFilter(geom,this.densifyFrac);discreteGeom.apply(fracFilter);ptDist.setMaximum(fracFilter.getMaxPointDistance());}};})();jsts_old.operation.distance.GeometryLocation=function(component,segIndex,pt){this.component=component;this.segIndex=segIndex;this.pt=pt;};jsts_old.operation.distance.GeometryLocation.INSIDE_AREA=-1;jsts_old.operation.distance.GeometryLocation.prototype.component=null;jsts_old.operation.distance.GeometryLocation.prototype.segIndex=null;jsts_old.operation.distance.GeometryLocation.prototype.pt=null;jsts_old.operation.distance.GeometryLocation.prototype.getGeometryComponent=function(){return this.component;};jsts_old.operation.distance.GeometryLocation.prototype.getSegmentIndex=function(){return this.segIndex;};jsts_old.operation.distance.GeometryLocation.prototype.getCoordinate=function(){return this.pt;};jsts_old.operation.distance.GeometryLocation.prototype.isInsideArea=function(){return this.segIndex===jsts_old.operation.distance.GeometryLocation.INSIDE_AREA;};jsts_old.io.WKTReader=function(geometryFactory){this.geometryFactory=geometryFactory||new jsts_old.geom.GeometryFactory();this.precisionModel=this.geometryFactory.getPrecisionModel();this.parser=new jsts_old.io.WKTParser(this.geometryFactory);};jsts_old.io.WKTReader.prototype.read=function(wkt){var geometry=this.parser.read(wkt);if(this.precisionModel.getType()===jsts_old.geom.PrecisionModel.FIXED){this.reducePrecision(geometry);}
return geometry;};jsts_old.io.WKTReader.prototype.reducePrecision=function(geometry){var i,len;if(geometry.coordinate){this.precisionModel.makePrecise(geometry.coordinate);}else if(geometry.points){for(i=0,len=geometry.points.length;i<len;i++){this.precisionModel.makePrecise(geometry.points[i]);}}else if(geometry.geometries){for(i=0,len=geometry.geometries.length;i<len;i++){this.reducePrecision(geometry.geometries[i]);}}};jsts_old.noding.ScaledNoder=function(noder,scaleFactor,offsetX,offsetY){this.offsetX=offsetX?offsetX:0;this.offsetY=offsetY?offsetY:0;this.noder=noder;this.scaleFactor=scaleFactor;this.isScaled=!this.isIntegerPrecision();};jsts_old.noding.ScaledNoder.prototype=new jsts_old.noding.Noder();jsts_old.noding.ScaledNoder.constructor=jsts_old.noding.ScaledNoder;jsts_old.noding.ScaledNoder.prototype.noder=null;jsts_old.noding.ScaledNoder.prototype.scaleFactor=undefined;jsts_old.noding.ScaledNoder.prototype.offsetX=undefined;jsts_old.noding.ScaledNoder.prototype.offsetY=undefined;jsts_old.noding.ScaledNoder.prototype.isScaled=false;jsts_old.noding.ScaledNoder.prototype.isIntegerPrecision=function(){return this.scaleFactor===1.0;};jsts_old.noding.ScaledNoder.prototype.getNodedSubstrings=function(){var splitSS=this.noder.getNodedSubstrings();if(this.isScaled)
this.rescale(splitSS);return splitSS;};jsts_old.noding.ScaledNoder.prototype.computeNodes=function(inputSegStrings){var intSegStrings=inputSegStrings;if(this.isScaled)
intSegStrings=this.scale(inputSegStrings);this.noder.computeNodes(intSegStrings);};jsts_old.noding.ScaledNoder.prototype.scale=function(segStrings){if(segStrings instanceof Array){return this.scale2(segStrings);}
var transformed=new javascript.util.ArrayList();for(var i=segStrings.iterator();i.hasNext();){var ss=i.next();transformed.add(new jsts_old.noding.NodedSegmentString(this.scale(ss.getCoordinates()),ss.getData()));}
return transformed;};jsts_old.noding.ScaledNoder.prototype.scale2=function(pts){var roundPts=[];for(var i=0;i<pts.length;i++){roundPts[i]=new jsts_old.geom.Coordinate(Math.round((pts[i].x-this.offsetX)*this.scaleFactor),Math.round((pts[i].y-this.offsetY)*this.scaleFactor));}
var roundPtsNoDup=jsts_old.geom.CoordinateArrays.removeRepeatedPoints(roundPts);return roundPtsNoDup;};jsts_old.noding.ScaledNoder.prototype.rescale=function(segStrings){if(segStrings instanceof Array){this.rescale2(segStrings);return;}
for(var i=segStrings.iterator();i.hasNext();){var ss=i.next();this.rescale(ss.getCoordinates());}};jsts_old.noding.ScaledNoder.prototype.rescale2=function(pts){for(var i=0;i<pts.length;i++){pts[i].x=pts[i].x/this.scaleFactor+this.offsetX;pts[i].y=pts[i].y/this.scaleFactor+this.offsetY;}};jsts_old.triangulate.VoronoiDiagramBuilder=function(){this.siteCoords=null;this.tolerance=0.0;this.subdiv=null;this.clipEnv=null;this.diagramEnv=null;};jsts_old.triangulate.VoronoiDiagramBuilder.prototype.setSites=function(){var arg=arguments[0];if(arg instanceof jsts_old.geom.Geometry||arg instanceof jsts_old.geom.Coordinate||arg instanceof jsts_old.geom.Point||arg instanceof jsts_old.geom.MultiPoint||arg instanceof jsts_old.geom.LineString||arg instanceof jsts_old.geom.MultiLineString||arg instanceof jsts_old.geom.LinearRing||arg instanceof jsts_old.geom.Polygon||arg instanceof jsts_old.geom.MultiPolygon){this.setSitesByGeometry(arg);}else{this.setSitesByArray(arg);}};jsts_old.triangulate.VoronoiDiagramBuilder.prototype.setSitesByGeometry=function(geom){this.siteCoords=jsts_old.triangulate.DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);};jsts_old.triangulate.VoronoiDiagramBuilder.prototype.setSitesByArray=function(coords){this.siteCoords=jsts_old.triangulate.DelaunayTriangulationBuilder.unique(coords);};jsts_old.triangulate.VoronoiDiagramBuilder.prototype.setClipEnvelope=function(clipEnv){this.clipEnv=clipEnv;};jsts_old.triangulate.VoronoiDiagramBuilder.prototype.setTolerance=function(tolerance)
{this.tolerance=tolerance;};jsts_old.triangulate.VoronoiDiagramBuilder.prototype.create=function(){if(this.subdiv!==null){return;}
var siteEnv,expandBy,vertices,triangulator;siteEnv=jsts_old.triangulate.DelaunayTriangulationBuilder.envelope(this.siteCoords);this.diagramEnv=siteEnv;expandBy=Math.max(this.diagramEnv.getWidth(),this.diagramEnv.getHeight());this.diagramEnv.expandBy(expandBy);if(this.clipEnv!==null){this.diagramEnv.expandToInclude(this.clipEnv);}
vertices=jsts_old.triangulate.DelaunayTriangulationBuilder.toVertices(this.siteCoords);this.subdiv=new jsts_old.triangulate.quadedge.QuadEdgeSubdivision(siteEnv,this.tolerance);triangulator=new jsts_old.triangulate.IncrementalDelaunayTriangulator(this.subdiv);triangulator.insertSites(vertices);};jsts_old.triangulate.VoronoiDiagramBuilder.prototype.getSubdivision=function(){this.create();return this.subdiv;};jsts_old.triangulate.VoronoiDiagramBuilder.prototype.getDiagram=function(geomFact){this.create();var polys=this.subdiv.getVoronoiDiagram(geomFact);return this.clipGeometryCollection(polys,this.diagramEnv);};jsts_old.triangulate.VoronoiDiagramBuilder.prototype.clipGeometryCollection=function(geom,clipEnv){var clipPoly,clipped,i,il,g,result;clipPoly=geom.getFactory().toGeometry(clipEnv);clipped=[];i=0,il=geom.getNumGeometries();for(i;i<il;i++){g=geom.getGeometryN(i);result=null;if(clipEnv.contains(g.getEnvelopeInternal())){result=g;}
else if(clipEnv.intersects(g.getEnvelopeInternal())){result=clipPoly.intersection(g);}
if(result!==null&&!result.isEmpty()){clipped.push(result);}}
return geom.getFactory().createGeometryCollection(clipped);};jsts_old.geom.util.GeometryExtracter=function(clz,comps){this.clz=clz;this.comps=comps;};jsts_old.geom.util.GeometryExtracter.prototype=new jsts_old.geom.GeometryFilter();jsts_old.geom.util.GeometryExtracter.prototype.clz=null;jsts_old.geom.util.GeometryExtracter.prototype.comps=null;jsts_old.geom.util.GeometryExtracter.extract=function(geom,clz,list){list=list||new javascript.util.ArrayList();if(geom instanceof clz){list.add(geom);}
else if(geom instanceof jsts_old.geom.GeometryCollection||geom instanceof jsts_old.geom.MultiPoint||geom instanceof jsts_old.geom.MultiLineString||geom instanceof jsts_old.geom.MultiPolygon){geom.apply(new jsts_old.geom.util.GeometryExtracter(clz,list));}
return list;};jsts_old.geom.util.GeometryExtracter.prototype.filter=function(geom){if(this.clz===null||geom instanceof this.clz){this.comps.add(geom);}};jsts_old.noding.SegmentNode=function(segString,coord,segmentIndex,segmentOctant){this.segString=segString;this.coord=new jsts_old.geom.Coordinate(coord);this.segmentIndex=segmentIndex;this.segmentOctant=segmentOctant;this._isInterior=!coord.equals2D(segString.getCoordinate(segmentIndex));};jsts_old.noding.SegmentNode.prototype.segString=null;jsts_old.noding.SegmentNode.prototype.coord=null;jsts_old.noding.SegmentNode.prototype.segmentIndex=null;jsts_old.noding.SegmentNode.prototype.segmentOctant=null;jsts_old.noding.SegmentNode.prototype._isInterior=null;jsts_old.noding.SegmentNode.prototype.getCoordinate=function(){return this.coord;};jsts_old.noding.SegmentNode.prototype.isInterior=function(){return this._isInterior;};jsts_old.noding.SegmentNode.prototype.isEndPoint=function(maxSegmentIndex){if(this.segmentIndex===0&&!this._isInterior)return true;if(this.segmentIndex===this.maxSegmentIndex)return true;return false;};jsts_old.noding.SegmentNode.prototype.compareTo=function(obj){var other=obj;if(this.segmentIndex<other.segmentIndex)return-1;if(this.segmentIndex>other.segmentIndex)return 1;if(this.coord.equals2D(other.coord))return 0;return jsts_old.noding.SegmentPointComparator.compare(this.segmentOctant,this.coord,other.coord);};(function(){var LineStringSnapper=function(){this.snapTolerance=0.0;this.seg=new jsts_old.geom.LineSegment();this.allowSnappingToSourceVertices=false;this.isClosed=false;this.srcPts=[];if(arguments[0]instanceof jsts_old.geom.LineString){this.initFromLine.apply(this,arguments);}else{this.initFromPoints.apply(this,arguments);}};LineStringSnapper.prototype.initFromLine=function(srcLine,snapTolerance){this.initFromPoints(srcLine.getCoordinates(),snapTolerance);};LineStringSnapper.prototype.initFromPoints=function(srcPts,snapTolerance){this.srcPts=srcPts;this.isClosed=this.calcIsClosed(srcPts);this.snapTolerance=snapTolerance;};LineStringSnapper.prototype.setAllowSnappingToSourceVertices=function(allowSnappingToSourceVertices){this.allowSnappingToSourceVertices=allowSnappingToSourceVertices;};LineStringSnapper.prototype.calcIsClosed=function(pts){if(pts.length<=1){return false;}
return pts[0].equals(pts[pts.length-1]);};LineStringSnapper.prototype.snapTo=function(snapPts){var coordList=new jsts_old.geom.CoordinateList(this.srcPts);this.snapVertices(coordList,snapPts);this.snapSegments(coordList,snapPts);return coordList;};LineStringSnapper.prototype.snapVertices=function(srcCoords,snapPts){var end=this.isClosed?srcCoords.length-1:srcCoords.length,i=0,srcPt,snapVert;for(i;i<end;i++){srcPt=srcCoords[i];snapVert=this.findSnapForVertex(srcPt,snapPts);if(snapVert!==null){srcCoords[i]=new jsts_old.geom.Coordinate(snapVert);if(i===0&&this.isClosed)
srcCoords[srcCoords.length-1]=new jsts_old.geom.Coordinate(snapVert);}}};LineStringSnapper.prototype.findSnapForVertex=function(pt,snapPts){var i=0,il=snapPts.length;for(i=0;i<il;i++){if(pt.equals(snapPts[i])){return null;}
if(pt.distance(snapPts[i])<this.snapTolerance){return snapPts[i];}}
return null;};LineStringSnapper.prototype.snapSegments=function(srcCoords,snapPts){if(snapPts.length==0){return;}
var distinctPtCount=snapPts.length,i,snapPt,index;if(snapPts.length>1&&snapPts[0].equals(snapPts[snapPts.length-1])){distinctPtCount=snapPts.length-1;}
i=0;for(i;i<distinctPtCount;i++){snapPt=snapPts[i];index=this.findSegmentIndexToSnap(snapPt,srcCoords);if(index>=0){srcCoords.insertCoordinate(index+1,new jsts_old.geom.Coordinate(snapPt),false);}}};LineStringSnapper.prototype.findSegmentIndexToSnap=function(snapPt,srcCoords){var minDist=Number.MAX_VALUE,snapIndex=-1,i=0,dist;for(i;i<srcCoords.length-1;i++){this.seg.p0=srcCoords[i];this.seg.p1=srcCoords[i+1];if(this.seg.p0.equals(snapPt)||this.seg.p1.equals(snapPt)){if(this.allowSnappingToSourceVertices){continue;}else{return-1;}}
dist=this.seg.distance(snapPt);if(dist<this.snapTolerance&&dist<minDist){minDist=dist;snapIndex=i;}}
return snapIndex;};jsts_old.operation.overlay.snap.LineStringSnapper=LineStringSnapper;})();jsts_old.index.quadtree.Quadtree=function(){this.root=new jsts_old.index.quadtree.Root();this.minExtent=1.0;};jsts_old.index.quadtree.Quadtree.ensureExtent=function(itemEnv,minExtent){var minx,maxx,miny,maxy;minx=itemEnv.getMinX();maxx=itemEnv.getMaxX();miny=itemEnv.getMinY();maxy=itemEnv.getMaxY();if(minx!==maxx&&miny!==maxy){return itemEnv;}
if(minx===maxx){minx=minx-(minExtent/2.0);maxx=minx+(minExtent/2.0);}
if(miny===maxy){miny=miny-(minExtent/2.0);maxy=miny+(minExtent/2.0);}
return new jsts_old.geom.Envelope(minx,maxx,miny,maxy);};jsts_old.index.quadtree.Quadtree.prototype.depth=function(){return this.root.depth();};jsts_old.index.quadtree.Quadtree.prototype.size=function(){return this.root.size();};jsts_old.index.quadtree.Quadtree.prototype.insert=function(itemEnv,item){this.collectStats(itemEnv);var insertEnv=jsts_old.index.quadtree.Quadtree.ensureExtent(itemEnv,this.minExtent);this.root.insert(insertEnv,item);};jsts_old.index.quadtree.Quadtree.prototype.remove=function(itemEnv,item){var posEnv=jsts_old.index.quadtree.Quadtree.ensureExtent(itemEnv,this.minExtent);return this.root.remove(posEnv,item);};jsts_old.index.quadtree.Quadtree.prototype.query=function(){if(arguments.length===1){return jsts_old.index.quadtree.Quadtree.prototype.queryByEnvelope.apply(this,arguments);}else{jsts_old.index.quadtree.Quadtree.prototype.queryWithVisitor.apply(this,arguments);}};jsts_old.index.quadtree.Quadtree.prototype.queryByEnvelope=function(searchEnv){var visitor=new jsts_old.index.ArrayListVisitor();this.query(searchEnv,visitor);return visitor.getItems();};jsts_old.index.quadtree.Quadtree.prototype.queryWithVisitor=function(searchEnv,visitor){this.root.visit(searchEnv,visitor);};jsts_old.index.quadtree.Quadtree.prototype.queryAll=function(){var foundItems=[];foundItems=this.root.addAllItems(foundItems);return foundItems;};jsts_old.index.quadtree.Quadtree.prototype.collectStats=function(itemEnv){var delX=itemEnv.getWidth();if(delX<this.minExtent&&delX>0.0){this.minExtent=delX;}
var delY=itemEnv.getHeight();if(delY<this.minExtent&&delY>0.0){this.minExtent=delY;}};jsts_old.operation.relate.RelateNodeFactory=function(){};jsts_old.operation.relate.RelateNodeFactory.prototype=new jsts_old.geomgraph.NodeFactory();jsts_old.operation.relate.RelateNodeFactory.prototype.createNode=function(coord){return new jsts_old.operation.relate.RelateNode(coord,new jsts_old.operation.relate.EdgeEndBundleStar());};jsts_old.index.quadtree.Key=function(itemEnv){this.pt=new jsts_old.geom.Coordinate();this.level=0;this.env=null;this.computeKey(itemEnv);};jsts_old.index.quadtree.Key.computeQuadLevel=function(env){var dx,dy,dMax,level;dx=env.getWidth();dy=env.getHeight();dMax=dx>dy?dx:dy;level=jsts_old.index.DoubleBits.exponent(dMax)+1;return level;};jsts_old.index.quadtree.Key.prototype.getPoint=function(){return this.pt;};jsts_old.index.quadtree.Key.prototype.getLevel=function(){return this.level;};jsts_old.index.quadtree.Key.prototype.getEnvelope=function(){return this.env;};jsts_old.index.quadtree.Key.prototype.getCentre=function(){var x,y;x=(this.env.getMinX()+this.env.getMaxX())/2;y=(this.env.getMinY()+this.env.getMaxY())/2;return new jsts_old.geom.Coordinate(x,y);};jsts_old.index.quadtree.Key.prototype.computeKey=function(){if(arguments[0]instanceof jsts_old.geom.Envelope){this.computeKeyFromEnvelope(arguments[0]);}else{this.computeKeyFromLevel(arguments[0],arguments[1]);}};jsts_old.index.quadtree.Key.prototype.computeKeyFromEnvelope=function(env){this.level=jsts_old.index.quadtree.Key.computeQuadLevel(env);this.env=new jsts_old.geom.Envelope();this.computeKey(this.level,env);while(!this.env.contains(env)){this.level+=1;this.computeKey(this.level,env);}};jsts_old.index.quadtree.Key.prototype.computeKeyFromLevel=function(level,env){var quadSize=jsts_old.index.DoubleBits.powerOf2(level);this.pt.x=Math.floor(env.getMinX()/quadSize)*quadSize;this.pt.y=Math.floor(env.getMinY()/quadSize)*quadSize;this.env.init(this.pt.x,this.pt.x+quadSize,this.pt.y,this.pt.y+
quadSize);};jsts_old.operation.buffer.OffsetSegmentGenerator=function(precisionModel,bufParams,distance){this.seg0=new jsts_old.geom.LineSegment();this.seg1=new jsts_old.geom.LineSegment();this.offset0=new jsts_old.geom.LineSegment();this.offset1=new jsts_old.geom.LineSegment();this.precisionModel=precisionModel;this.bufParams=bufParams;this.li=new jsts_old.algorithm.RobustLineIntersector();this.filletAngleQuantum=Math.PI/2.0/bufParams.getQuadrantSegments();if(this.bufParams.getQuadrantSegments()>=8&&this.bufParams.getJoinStyle()===jsts_old.operation.buffer.BufferParameters.JOIN_ROUND){this.closingSegLengthFactor=jsts_old.operation.buffer.OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR;}
this.init(distance);};jsts_old.operation.buffer.OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR=1.0E-3;jsts_old.operation.buffer.OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR=1.0E-3;jsts_old.operation.buffer.OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR=1.0E-6;jsts_old.operation.buffer.OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR=80;jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.maxCurveSegmentError=0.0;jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.filletAngleQuantum=null;jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.closingSegLengthFactor=1;jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.segList=null;jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.distance=0.0;jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.precisionModel=null;jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.bufParams=null;jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.li=null;jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.s0=null;jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.s1=null;jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.s2=null;jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.seg0=null;jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.seg1=null;jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.offset0=null;jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.offset1=null;jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.side=0;jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.hasNarrowConcaveAngle=false;jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.hasNarrowConcaveAngle=function(){return this.hasNarrowConcaveAngle;};jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.init=function(distance){this.distance=distance;this.maxCurveSegmentError=this.distance*(1-Math.cos(this.filletAngleQuantum/2.0));this.segList=new jsts_old.operation.buffer.OffsetSegmentString();this.segList.setPrecisionModel(this.precisionModel);this.segList.setMinimumVertexDistance(this.distance*jsts_old.operation.buffer.OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR);};jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.initSideSegments=function(s1,s2,side){this.s1=s1;this.s2=s2;this.side=side;this.seg1.setCoordinates(this.s1,this.s2);this.computeOffsetSegment(this.seg1,this.side,this.distance,this.offset1);};jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.getCoordinates=function(){return this.segList.getCoordinates();};jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.closeRing=function(){this.segList.closeRing();};jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.addSegments=function(pt,isForward){this.segList.addPts(pt,isForward);};jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.addFirstSegment=function(){this.segList.addPt(this.offset1.p0);};jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.addLastSegment=function(){this.segList.addPt(this.offset1.p1);};jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.addNextSegment=function(p,addStartPoint){this.s0=this.s1;this.s1=this.s2;this.s2=p;this.seg0.setCoordinates(this.s0,this.s1);this.computeOffsetSegment(this.seg0,this.side,this.distance,this.offset0);this.seg1.setCoordinates(this.s1,this.s2);this.computeOffsetSegment(this.seg1,this.side,this.distance,this.offset1);if(this.s1.equals(this.s2))
return;var orientation=jsts_old.algorithm.CGAlgorithms.computeOrientation(this.s0,this.s1,this.s2);var outsideTurn=(orientation===jsts_old.algorithm.CGAlgorithms.CLOCKWISE&&this.side===jsts_old.geomgraph.Position.LEFT)||(orientation===jsts_old.algorithm.CGAlgorithms.COUNTERCLOCKWISE&&this.side===jsts_old.geomgraph.Position.RIGHT);if(orientation==0){this.addCollinear(addStartPoint);}else if(outsideTurn){this.addOutsideTurn(orientation,addStartPoint);}else{this.addInsideTurn(orientation,addStartPoint);}};jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.addCollinear=function(addStartPoint){this.li.computeIntersection(this.s0,this.s1,this.s1,this.s2);var numInt=this.li.getIntersectionNum();if(numInt>=2){if(this.bufParams.getJoinStyle()===jsts_old.operation.buffer.BufferParameters.JOIN_BEVEL||this.bufParams.getJoinStyle()===jsts_old.operation.buffer.BufferParameters.JOIN_MITRE){if(addStartPoint)
this.segList.addPt(this.offset0.p1);this.segList.addPt(this.offset1.p0);}else{this.addFillet(this.s1,this.offset0.p1,this.offset1.p0,jsts_old.algorithm.CGAlgorithms.CLOCKWISE,this.distance);}}};jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.addOutsideTurn=function(orientation,addStartPoint){if(this.offset0.p1.distance(this.offset1.p0)<this.distance*jsts_old.operation.buffer.OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR){this.segList.addPt(this.offset0.p1);return;}
if(this.bufParams.getJoinStyle()===jsts_old.operation.buffer.BufferParameters.JOIN_MITRE){this.addMitreJoin(this.s1,this.offset0,this.offset1,this.distance);}else if(this.bufParams.getJoinStyle()===jsts_old.operation.buffer.BufferParameters.JOIN_BEVEL){this.addBevelJoin(this.offset0,this.offset1);}else{if(addStartPoint)
this.segList.addPt(this.offset0.p1);this.addFillet(this.s1,this.offset0.p1,this.offset1.p0,orientation,this.distance);this.segList.addPt(this.offset1.p0);}};jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.addInsideTurn=function(orientation,addStartPoint){this.li.computeIntersection(this.offset0.p0,this.offset0.p1,this.offset1.p0,this.offset1.p1);if(this.li.hasIntersection()){this.segList.addPt(this.li.getIntersection(0));}else{this.hasNarrowConcaveAngle=true;if(this.offset0.p1.distance(this.offset1.p0)<this.distance*jsts_old.operation.buffer.OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR){this.segList.addPt(this.offset0.p1);}else{this.segList.addPt(this.offset0.p1);if(this.closingSegLengthFactor>0){var mid0=new jsts_old.geom.Coordinate((this.closingSegLengthFactor*this.offset0.p1.x+this.s1.x)/(this.closingSegLengthFactor+1),(this.closingSegLengthFactor*this.offset0.p1.y+this.s1.y)/(this.closingSegLengthFactor+1));this.segList.addPt(mid0);var mid1=new jsts_old.geom.Coordinate((this.closingSegLengthFactor*this.offset1.p0.x+this.s1.x)/(this.closingSegLengthFactor+1),(this.closingSegLengthFactor*this.offset1.p0.y+this.s1.y)/(this.closingSegLengthFactor+1));this.segList.addPt(mid1);}else{this.segList.addPt(this.s1);}
this.segList.addPt(this.offset1.p0);}}};jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.computeOffsetSegment=function(seg,side,distance,offset){var sideSign=side===jsts_old.geomgraph.Position.LEFT?1:-1;var dx=seg.p1.x-seg.p0.x;var dy=seg.p1.y-seg.p0.y;var len=Math.sqrt(dx*dx+dy*dy);var ux=sideSign*distance*dx/len;var uy=sideSign*distance*dy/len;offset.p0.x=seg.p0.x-uy;offset.p0.y=seg.p0.y+ux;offset.p1.x=seg.p1.x-uy;offset.p1.y=seg.p1.y+ux;};jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.addLineEndCap=function(p0,p1){var seg=new jsts_old.geom.LineSegment(p0,p1);var offsetL=new jsts_old.geom.LineSegment();this.computeOffsetSegment(seg,jsts_old.geomgraph.Position.LEFT,this.distance,offsetL);var offsetR=new jsts_old.geom.LineSegment();this.computeOffsetSegment(seg,jsts_old.geomgraph.Position.RIGHT,this.distance,offsetR);var dx=p1.x-p0.x;var dy=p1.y-p0.y;var angle=Math.atan2(dy,dx);switch(this.bufParams.getEndCapStyle()){case jsts_old.operation.buffer.BufferParameters.CAP_ROUND:this.segList.addPt(offsetL.p1);this.addFillet(p1,angle+Math.PI/2,angle-Math.PI/2,jsts_old.algorithm.CGAlgorithms.CLOCKWISE,this.distance);this.segList.addPt(offsetR.p1);break;case jsts_old.operation.buffer.BufferParameters.CAP_FLAT:this.segList.addPt(offsetL.p1);this.segList.addPt(offsetR.p1);break;case jsts_old.operation.buffer.BufferParameters.CAP_SQUARE:var squareCapSideOffset=new jsts_old.geom.Coordinate();squareCapSideOffset.x=Math.abs(this.distance)*Math.cos(angle);squareCapSideOffset.y=Math.abs(this.distance)*Math.sin(angle);var squareCapLOffset=new jsts_old.geom.Coordinate(offsetL.p1.x+
squareCapSideOffset.x,offsetL.p1.y+squareCapSideOffset.y);var squareCapROffset=new jsts_old.geom.Coordinate(offsetR.p1.x+
squareCapSideOffset.x,offsetR.p1.y+squareCapSideOffset.y);this.segList.addPt(squareCapLOffset);this.segList.addPt(squareCapROffset);break;}};jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.addMitreJoin=function(p,offset0,offset1,distance){var isMitreWithinLimit=true;var intPt=null;try{intPt=jsts_old.algorithm.HCoordinate.intersection(offset0.p0,offset0.p1,offset1.p0,offset1.p1);var mitreRatio=distance<=0.0?1.0:intPt.distance(p)/Math.abs(distance);if(mitreRatio>this.bufParams.getMitreLimit())
this.isMitreWithinLimit=false;}catch(e){if(e instanceof jsts_old.error.NotRepresentableError){intPt=new jsts_old.geom.Coordinate(0,0);this.isMitreWithinLimit=false;}}
if(isMitreWithinLimit){this.segList.addPt(intPt);}else{this.addLimitedMitreJoin(offset0,offset1,distance,bufParams.getMitreLimit());}};jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.addLimitedMitreJoin=function(offset0,offset1,distance,mitreLimit){var basePt=this.seg0.p1;var ang0=jsts_old.algorithm.Angle.angle(basePt,this.seg0.p0);var ang1=jsts_old.algorithm.Angle.angle(basePt,this.seg1.p1);var angDiff=jsts_old.algorithm.Angle.angleBetweenOriented(this.seg0.p0,basePt,this.seg1.p1);var angDiffHalf=angDiff/2;var midAng=jsts_old.algorithm.Angle.normalize(ang0+angDiffHalf);var mitreMidAng=jsts_old.algorithm.Angle.normalize(midAng+Math.PI);var mitreDist=mitreLimit*distance;var bevelDelta=mitreDist*Math.abs(Math.sin(angDiffHalf));var bevelHalfLen=distance-bevelDelta;var bevelMidX=basePt.x+mitreDist*Math.cos(mitreMidAng);var bevelMidY=basePt.y+mitreDist*Math.sin(mitreMidAng);var bevelMidPt=new jsts_old.geom.Coordinate(bevelMidX,bevelMidY);var mitreMidLine=new jsts_old.geom.LineSegment(basePt,bevelMidPt);var bevelEndLeft=mitreMidLine.pointAlongOffset(1.0,bevelHalfLen);var bevelEndRight=mitreMidLine.pointAlongOffset(1.0,-bevelHalfLen);if(this.side==jsts_old.geomgraph.Position.LEFT){this.segList.addPt(bevelEndLeft);this.segList.addPt(bevelEndRight);}else{this.segList.addPt(bevelEndRight);this.segList.addPt(bevelEndLeft);}};jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.addBevelJoin=function(offset0,offset1){this.segList.addPt(offset0.p1);this.segList.addPt(offset1.p0);};jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.addFillet=function(p,p0,p1,direction,radius){if(!(p1 instanceof jsts_old.geom.Coordinate)){this.addFillet2.apply(this,arguments);return;}
var dx0=p0.x-p.x;var dy0=p0.y-p.y;var startAngle=Math.atan2(dy0,dx0);var dx1=p1.x-p.x;var dy1=p1.y-p.y;var endAngle=Math.atan2(dy1,dx1);if(direction===jsts_old.algorithm.CGAlgorithms.CLOCKWISE){if(startAngle<=endAngle)
startAngle+=2.0*Math.PI;}else{if(startAngle>=endAngle)
startAngle-=2.0*Math.PI;}
this.segList.addPt(p0);this.addFillet(p,startAngle,endAngle,direction,radius);this.segList.addPt(p1);};jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.addFillet2=function(p,startAngle,endAngle,direction,radius){var directionFactor=direction===jsts_old.algorithm.CGAlgorithms.CLOCKWISE?-1:1;var totalAngle=Math.abs(startAngle-endAngle);var nSegs=parseInt((totalAngle/this.filletAngleQuantum+0.5));if(nSegs<1)
return;var initAngle,currAngleInc;initAngle=0.0;currAngleInc=totalAngle/nSegs;var currAngle=initAngle;var pt=new jsts_old.geom.Coordinate();while(currAngle<totalAngle){var angle=startAngle+directionFactor*currAngle;pt.x=p.x+radius*Math.cos(angle);pt.y=p.y+radius*Math.sin(angle);this.segList.addPt(pt);currAngle+=currAngleInc;}};jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.createCircle=function(p){var pt=new jsts_old.geom.Coordinate(p.x+this.distance,p.y);this.segList.addPt(pt);this.addFillet(p,0.0,2.0*Math.PI,-1,this.distance);this.segList.closeRing();};jsts_old.operation.buffer.OffsetSegmentGenerator.prototype.createSquare=function(p){this.segList.addPt(new jsts_old.geom.Coordinate(p.x+distance,p.y+distance));this.segList.addPt(new jsts_old.geom.Coordinate(p.x+distance,p.y-distance));this.segList.addPt(new jsts_old.geom.Coordinate(p.x-distance,p.y-distance));this.segList.addPt(new jsts_old.geom.Coordinate(p.x-distance,p.y+distance));this.segList.closeRing();};jsts_old.geom.CoordinateArrays=function(){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.geom.CoordinateArrays.removeRepeatedPoints=function(coord){var coordList;if(!this.hasRepeatedPoints(coord)){return coord;}
coordList=new jsts_old.geom.CoordinateList(coord,false);return coordList;};jsts_old.geom.CoordinateArrays.hasRepeatedPoints=function(coord){var i;for(i=1;i<coord.length;i++){if(coord[i-1].equals(coord[i])){return true;}}
return false;};jsts_old.geom.CoordinateArrays.increasingDirection=function(pts){for(var i=0;i<parseInt(pts.length/2);i++){var j=pts.length-1-i;var comp=pts[i].compareTo(pts[j]);if(comp!=0)
return comp;}
return 1;};jsts_old.geom.CoordinateArrays.minCoordinate=function(coordinates){var minCoord=null;for(var i=0;i<coordinates.length;i++){if(minCoord===null||minCoord.compareTo(coordinates[i])>0){minCoord=coordinates[i];}}
return minCoord;};jsts_old.geom.CoordinateArrays.scroll=function(coordinates,firstCoordinate){var i=jsts_old.geom.CoordinateArrays.indexOf(firstCoordinate,coordinates);if(i<0)
return;var newCoordinates=coordinates.slice(i).concat(coordinates.slice(0,i));for(i=0;i<newCoordinates.length;i++){coordinates[i]=newCoordinates[i];}};jsts_old.geom.CoordinateArrays.indexOf=function(coordinate,coordinates){for(var i=0;i<coordinates.length;i++){if(coordinate.equals(coordinates[i])){return i;}}
return-1;};jsts_old.operation.overlay.MinimalEdgeRing=function(start,geometryFactory){jsts_old.geomgraph.EdgeRing.call(this,start,geometryFactory);};jsts_old.operation.overlay.MinimalEdgeRing.prototype=new jsts_old.geomgraph.EdgeRing();jsts_old.operation.overlay.MinimalEdgeRing.constructor=jsts_old.operation.overlay.MinimalEdgeRing;jsts_old.operation.overlay.MinimalEdgeRing.prototype.getNext=function(de){return de.getNextMin();};jsts_old.operation.overlay.MinimalEdgeRing.prototype.setEdgeRing=function(de,er){de.setMinEdgeRing(er);};jsts_old.triangulate.DelaunayTriangulationBuilder=function(){this.siteCoords=null;this.tolerance=0.0;this.subdiv=null;};jsts_old.triangulate.DelaunayTriangulationBuilder.extractUniqueCoordinates=function(geom){if(geom===undefined||geom===null){return new jsts_old.geom.CoordinateList([],false);}
var coords=geom.getCoordinates();return jsts_old.triangulate.DelaunayTriangulationBuilder.unique(coords);};jsts_old.triangulate.DelaunayTriangulationBuilder.unique=function(coords){coords.sort(function(a,b){return a.compareTo(b);});var coordList=new jsts_old.geom.CoordinateList(coords,false);return coordList.toArray();};jsts_old.triangulate.DelaunayTriangulationBuilder.toVertices=function(coords){var verts=new Array(coords.length),i=0,il=coords.length,coord;for(i;i<il;i++){coord=coords[i];verts[i]=new jsts_old.triangulate.quadedge.Vertex(coord);}
return verts;};jsts_old.triangulate.DelaunayTriangulationBuilder.envelope=function(coords){var env=new jsts_old.geom.Envelope(),i=0,il=coords.length;for(i;i<il;i++){env.expandToInclude(coords[i]);}
return env;};jsts_old.triangulate.DelaunayTriangulationBuilder.prototype.setSites=function(){var arg=arguments[0];if(arg instanceof jsts_old.geom.Geometry||arg instanceof jsts_old.geom.Coordinate||arg instanceof jsts_old.geom.Point||arg instanceof jsts_old.geom.MultiPoint||arg instanceof jsts_old.geom.LineString||arg instanceof jsts_old.geom.MultiLineString||arg instanceof jsts_old.geom.LinearRing||arg instanceof jsts_old.geom.Polygon||arg instanceof jsts_old.geom.MultiPolygon){this.setSitesFromGeometry(arg);}else{this.setSitesFromCollection(arg);}};jsts_old.triangulate.DelaunayTriangulationBuilder.prototype.setSitesFromGeometry=function(geom){this.siteCoords=jsts_old.triangulate.DelaunayTriangulationBuilder.extractUniqueCoordinates(geom);};jsts_old.triangulate.DelaunayTriangulationBuilder.prototype.setSitesFromCollection=function(coords){this.siteCoords=jsts_old.triangulate.DelaunayTriangulationBuilder.unique(coords);};jsts_old.triangulate.DelaunayTriangulationBuilder.prototype.setTolerance=function(tolerance){this.tolerance=tolerance;};jsts_old.triangulate.DelaunayTriangulationBuilder.prototype.create=function(){if(this.subdiv===null){var siteEnv,vertices,triangulator;siteEnv=jsts_old.triangulate.DelaunayTriangulationBuilder.envelope(this.siteCoords);vertices=jsts_old.triangulate.DelaunayTriangulationBuilder.toVertices(this.siteCoords);this.subdiv=new jsts_old.triangulate.quadedge.QuadEdgeSubdivision(siteEnv,this.tolerance);triangulator=new jsts_old.triangulate.IncrementalDelaunayTriangulator(this.subdiv);triangulator.insertSites(vertices);}};jsts_old.triangulate.DelaunayTriangulationBuilder.prototype.getSubdivision=function(){this.create();return this.subdiv;};jsts_old.triangulate.DelaunayTriangulationBuilder.prototype.getEdges=function(geomFact){this.create();return this.subdiv.getEdges(geomFact);};jsts_old.triangulate.DelaunayTriangulationBuilder.prototype.getTriangles=function(geomFact){this.create();return this.subdiv.getTriangles(geomFact);};jsts_old.algorithm.RayCrossingCounter=function(p){this.p=p;};jsts_old.algorithm.RayCrossingCounter.locatePointInRing=function(p,ring){var counter=new jsts_old.algorithm.RayCrossingCounter(p);for(var i=1;i<ring.length;i++){var p1=ring[i];var p2=ring[i-1];counter.countSegment(p1,p2);if(counter.isOnSegment())
return counter.getLocation();}
return counter.getLocation();};jsts_old.algorithm.RayCrossingCounter.prototype.p=null;jsts_old.algorithm.RayCrossingCounter.prototype.crossingCount=0;jsts_old.algorithm.RayCrossingCounter.prototype.isPointOnSegment=false;jsts_old.algorithm.RayCrossingCounter.prototype.countSegment=function(p1,p2){if(p1.x<this.p.x&&p2.x<this.p.x)
return;if(this.p.x==p2.x&&this.p.y===p2.y){this.isPointOnSegment=true;return;}
if(p1.y===this.p.y&&p2.y===this.p.y){var minx=p1.x;var maxx=p2.x;if(minx>maxx){minx=p2.x;maxx=p1.x;}
if(this.p.x>=minx&&this.p.x<=maxx){this.isPointOnSegment=true;}
return;}
if(((p1.y>this.p.y)&&(p2.y<=this.p.y))||((p2.y>this.p.y)&&(p1.y<=this.p.y))){var x1=p1.x-this.p.x;var y1=p1.y-this.p.y;var x2=p2.x-this.p.x;var y2=p2.y-this.p.y;var xIntSign=jsts_old.algorithm.RobustDeterminant.signOfDet2x2(x1,y1,x2,y2);if(xIntSign===0.0){this.isPointOnSegment=true;return;}
if(y2<y1)
xIntSign=-xIntSign;if(xIntSign>0.0){this.crossingCount++;}}};jsts_old.algorithm.RayCrossingCounter.prototype.isOnSegment=function(){return jsts_old.geom.isPointOnSegment;};jsts_old.algorithm.RayCrossingCounter.prototype.getLocation=function(){if(this.isPointOnSegment)
return jsts_old.geom.Location.BOUNDARY;if((this.crossingCount%2)===1){return jsts_old.geom.Location.INTERIOR;}
return jsts_old.geom.Location.EXTERIOR;};jsts_old.algorithm.RayCrossingCounter.prototype.isPointInPolygon=function(){return this.getLocation()!==jsts_old.geom.Location.EXTERIOR;};jsts_old.operation.BoundaryOp=function(geom,bnRule){this.geom=geom;this.geomFact=geom.getFactory();this.bnRule=bnRule||jsts_old.algorithm.BoundaryNodeRule.MOD2_BOUNDARY_RULE;};jsts_old.operation.BoundaryOp.prototype.geom=null;jsts_old.operation.BoundaryOp.prototype.geomFact=null;jsts_old.operation.BoundaryOp.prototype.bnRule=null;jsts_old.operation.BoundaryOp.prototype.getBoundary=function(){if(this.geom instanceof jsts_old.geom.LineString)return this.boundaryLineString(this.geom);if(this.geom instanceof jsts_old.geom.MultiLineString)return this.boundaryMultiLineString(this.geom);return this.geom.getBoundary();};jsts_old.operation.BoundaryOp.prototype.getEmptyMultiPoint=function(){return this.geomFact.createMultiPoint(null);};jsts_old.operation.BoundaryOp.prototype.boundaryMultiLineString=function(mLine){if(this.geom.isEmpty()){return this.getEmptyMultiPoint();}
var bdyPts=this.computeBoundaryCoordinates(mLine);if(bdyPts.length==1){return this.geomFact.createPoint(bdyPts[0]);}
return this.geomFact.createMultiPoint(bdyPts);};jsts_old.operation.BoundaryOp.prototype.endpoints=null;jsts_old.operation.BoundaryOp.prototype.computeBoundaryCoordinates=function(mLine){var i,line,endpoint,bdyPts=[];this.endpoints=[];for(i=0;i<mLine.getNumGeometries();i++){line=mLine.getGeometryN(i);if(line.getNumPoints()==0)
continue;this.addEndpoint(line.getCoordinateN(0));this.addEndpoint(line.getCoordinateN(line.getNumPoints()-1));}
for(i=0;i<this.endpoints.length;i++){endpoint=this.endpoints[i];if(this.bnRule.isInBoundary(endpoint.count)){bdyPts.push(endpoint.coordinate);}}
return bdyPts;};jsts_old.operation.BoundaryOp.prototype.addEndpoint=function(pt){var i,endpoint,found=false;for(i=0;i<this.endpoints.length;i++){endpoint=this.endpoints[i];if(endpoint.coordinate.equals(pt)){found=true;break;}}
if(!found){endpoint={};endpoint.coordinate=pt;endpoint.count=0;this.endpoints.push(endpoint);}
endpoint.count++;};jsts_old.operation.BoundaryOp.prototype.boundaryLineString=function(line){if(this.geom.isEmpty()){return this.getEmptyMultiPoint();}
if(line.isClosed()){var closedEndpointOnBoundary=this.bnRule.isInBoundary(2);if(closedEndpointOnBoundary){return line.getStartPoint();}
else{return this.geomFact.createMultiPoint(null);}}
return this.geomFact.createMultiPoint([line.getStartPoint(),line.getEndPoint()]);};jsts_old.operation.buffer.BufferSubgraph=function(){this.dirEdgeList=new javascript.util.ArrayList();this.nodes=new javascript.util.ArrayList();this.finder=new jsts_old.operation.buffer.RightmostEdgeFinder();};jsts_old.operation.buffer.BufferSubgraph.prototype.finder=null;jsts_old.operation.buffer.BufferSubgraph.prototype.dirEdgeList=null;jsts_old.operation.buffer.BufferSubgraph.prototype.nodes=null;jsts_old.operation.buffer.BufferSubgraph.prototype.rightMostCoord=null;jsts_old.operation.buffer.BufferSubgraph.prototype.env=null;jsts_old.operation.buffer.BufferSubgraph.prototype.getDirectedEdges=function(){return this.dirEdgeList;};jsts_old.operation.buffer.BufferSubgraph.prototype.getNodes=function(){return this.nodes;};jsts_old.operation.buffer.BufferSubgraph.prototype.getEnvelope=function(){if(this.env===null){var edgeEnv=new jsts_old.geom.Envelope();for(var it=this.dirEdgeList.iterator();it.hasNext();){var dirEdge=it.next();var pts=dirEdge.getEdge().getCoordinates();for(var j=0;j<pts.length-1;j++){edgeEnv.expandToInclude(pts[j]);}}
this.env=edgeEnv;}
return this.env;};jsts_old.operation.buffer.BufferSubgraph.prototype.getRightmostCoordinate=function(){return this.rightMostCoord;};jsts_old.operation.buffer.BufferSubgraph.prototype.create=function(node){this.addReachable(node);this.finder.findEdge(this.dirEdgeList);this.rightMostCoord=this.finder.getCoordinate();};jsts_old.operation.buffer.BufferSubgraph.prototype.addReachable=function(startNode){var nodeStack=[];nodeStack.push(startNode);while(nodeStack.length!==0){var node=nodeStack.pop();this.add(node,nodeStack);}};jsts_old.operation.buffer.BufferSubgraph.prototype.add=function(node,nodeStack){node.setVisited(true);this.nodes.add(node);for(var i=node.getEdges().iterator();i.hasNext();){var de=i.next();this.dirEdgeList.add(de);var sym=de.getSym();var symNode=sym.getNode();if(!symNode.isVisited())
nodeStack.push(symNode);}};jsts_old.operation.buffer.BufferSubgraph.prototype.clearVisitedEdges=function(){for(var it=this.dirEdgeList.iterator();it.hasNext();){var de=it.next();de.setVisited(false);}};jsts_old.operation.buffer.BufferSubgraph.prototype.computeDepth=function(outsideDepth){this.clearVisitedEdges();var de=this.finder.getEdge();var n=de.getNode();var label=de.getLabel();de.setEdgeDepths(jsts_old.geomgraph.Position.RIGHT,outsideDepth);this.copySymDepths(de);this.computeDepths(de);};jsts_old.operation.buffer.BufferSubgraph.prototype.computeDepths=function(startEdge){var nodesVisited=[];var nodeQueue=[];var startNode=startEdge.getNode();nodeQueue.push(startNode);nodesVisited.push(startNode);startEdge.setVisited(true);while(nodeQueue.length!==0){var n=nodeQueue.shift();nodesVisited.push(n);this.computeNodeDepth(n);for(var i=n.getEdges().iterator();i.hasNext();){var de=i.next();var sym=de.getSym();if(sym.isVisited())
continue;var adjNode=sym.getNode();if(nodesVisited.indexOf(adjNode)===-1){nodeQueue.push(adjNode);nodesVisited.push(adjNode);}}}};jsts_old.operation.buffer.BufferSubgraph.prototype.computeNodeDepth=function(n){var startEdge=null;for(var i=n.getEdges().iterator();i.hasNext();){var de=i.next();if(de.isVisited()||de.getSym().isVisited()){startEdge=de;break;}}
if(startEdge==null)
throw new jsts_old.error.TopologyError('unable to find edge to compute depths at '+n.getCoordinate());n.getEdges().computeDepths(startEdge);for(var i=n.getEdges().iterator();i.hasNext();){var de=i.next();de.setVisited(true);this.copySymDepths(de);}};jsts_old.operation.buffer.BufferSubgraph.prototype.copySymDepths=function(de){var sym=de.getSym();sym.setDepth(jsts_old.geomgraph.Position.LEFT,de.getDepth(jsts_old.geomgraph.Position.RIGHT));sym.setDepth(jsts_old.geomgraph.Position.RIGHT,de.getDepth(jsts_old.geomgraph.Position.LEFT));};jsts_old.operation.buffer.BufferSubgraph.prototype.findResultEdges=function(){for(var it=this.dirEdgeList.iterator();it.hasNext();){var de=it.next();if(de.getDepth(jsts_old.geomgraph.Position.RIGHT)>=1&&de.getDepth(jsts_old.geomgraph.Position.LEFT)<=0&&!de.isInteriorAreaEdge()){de.setInResult(true);}}};jsts_old.operation.buffer.BufferSubgraph.prototype.compareTo=function(o){var graph=o;if(this.rightMostCoord.x<graph.rightMostCoord.x){return-1;}
if(this.rightMostCoord.x>graph.rightMostCoord.x){return 1;}
return 0;};(function(){var OverlayOp=jsts_old.operation.overlay.OverlayOp;var SnapOverlayOp=jsts_old.operation.overlay.snap.SnapOverlayOp;var SnapIfNeededOverlayOp=function(g1,g2){this.geom=[];this.geom[0]=g1;this.geom[1]=g2;};SnapIfNeededOverlayOp.overlayOp=function(g0,g1,opCode){var op=new SnapIfNeededOverlayOp(g0,g1);return op.getResultGeometry(opCode);}
SnapIfNeededOverlayOp.intersection=function(g0,g1){return overlayOp(g0,g1,OverlayOp.INTERSECTION);}
SnapIfNeededOverlayOp.union=function(g0,g1){return overlayOp(g0,g1,OverlayOp.UNION);}
SnapIfNeededOverlayOp.difference=function(g0,g1){return overlayOp(g0,g1,OverlayOp.DIFFERENCE);}
SnapIfNeededOverlayOp.symDifference=function(g0,g1){return overlayOp(g0,g1,OverlayOp.SYMDIFFERENCE);}
SnapIfNeededOverlayOp.prototype.geom=null;SnapIfNeededOverlayOp.prototype.getResultGeometry=function(opCode){var result=null;var isSuccess=false;var savedException=null;try{result=OverlayOp.overlayOp(this.geom[0],this.geom[1],opCode);var isValid=true;if(isValid)
isSuccess=true;}catch(ex){savedException=ex;}
if(!isSuccess){try{result=SnapOverlayOp.overlayOp(this.geom[0],this.geom[1],opCode);}catch(ex){throw savedException;}}
return result;}
jsts_old.operation.overlay.snap.SnapIfNeededOverlayOp=SnapIfNeededOverlayOp;})();(function(){var GeometryExtracter=jsts_old.geom.util.GeometryExtracter;var CascadedPolygonUnion=jsts_old.operation.union.CascadedPolygonUnion;var PointGeometryUnion=jsts_old.operation.union.PointGeometryUnion;var OverlayOp=jsts_old.operation.overlay.OverlayOp;var SnapIfNeededOverlayOp=jsts_old.operation.overlay.snap.SnapIfNeededOverlayOp;var ArrayList=javascript.util.ArrayList;jsts_old.operation.union.UnaryUnionOp=function(geoms,geomFact){this.polygons=new ArrayList();this.lines=new ArrayList();this.points=new ArrayList();if(geomFact){this.geomFact=geomFact;}
this.extract(geoms);};jsts_old.operation.union.UnaryUnionOp.union=function(geoms,geomFact){var op=new jsts_old.operation.union.UnaryUnionOp(geoms,geomFact);return op.union();};jsts_old.operation.union.UnaryUnionOp.prototype.polygons=null;jsts_old.operation.union.UnaryUnionOp.prototype.lines=null;jsts_old.operation.union.UnaryUnionOp.prototype.points=null;jsts_old.operation.union.UnaryUnionOp.prototype.geomFact=null;jsts_old.operation.union.UnaryUnionOp.prototype.extract=function(geoms){if(geoms instanceof ArrayList){for(var i=geoms.iterator();i.hasNext();){var geom=i.next();this.extract(geom);}}else{if(this.geomFact===null){this.geomFact=geoms.getFactory();}
GeometryExtracter.extract(geoms,jsts_old.geom.Polygon,this.polygons);GeometryExtracter.extract(geoms,jsts_old.geom.LineString,this.lines);GeometryExtracter.extract(geoms,jsts_old.geom.Point,this.points);}};jsts_old.operation.union.UnaryUnionOp.prototype.union=function(){if(this.geomFact===null){return null;}
var unionPoints=null;if(this.points.size()>0){var ptGeom=this.geomFact.buildGeometry(this.points);unionPoints=this.unionNoOpt(ptGeom);}
var unionLines=null;if(this.lines.size()>0){var lineGeom=this.geomFact.buildGeometry(this.lines);unionLines=this.unionNoOpt(lineGeom);}
var unionPolygons=null;if(this.polygons.size()>0){unionPolygons=CascadedPolygonUnion.union(this.polygons);}
var unionLA=this.unionWithNull(unionLines,unionPolygons);var union=null;if(unionPoints===null){union=unionLA;}else if(unionLA===null){union=unionPoints;}else{union=PointGeometryUnion(unionPoints,unionLA);}
if(union===null){return this.geomFact.createGeometryCollection(null);}
return union;};jsts_old.operation.union.UnaryUnionOp.prototype.unionWithNull=function(g0,g1){if(g0===null&&g1===null){return null;}
if(g1===null){return g0;}
if(g0===null){return g1;}
return g0.union(g1);};jsts_old.operation.union.UnaryUnionOp.prototype.unionNoOpt=function(g0){var empty=this.geomFact.createPoint(null);return SnapIfNeededOverlayOp.overlayOp(g0,empty,OverlayOp.UNION);};}());jsts_old.index.kdtree.KdNode=function(){this.left=null;this.right=null;this.count=1;if(arguments.length===2){this.initializeFromCoordinate.apply(this,arguments[0],arguments[1]);}else if(arguments.length===3){this.initializeFromXY.apply(this,arguments[0],arguments[1],arguments[2]);}};jsts_old.index.kdtree.KdNode.prototype.initializeFromXY=function(x,y,data){this.p=new jsts_old.geom.Coordinate(x,y);this.data=data;};jsts_old.index.kdtree.KdNode.prototype.initializeFromCoordinate=function(p,data){this.p=p;this.data=data;};jsts_old.index.kdtree.KdNode.prototype.getX=function(){return this.p.x;};jsts_old.index.kdtree.KdNode.prototype.getY=function(){return this.p.y;};jsts_old.index.kdtree.KdNode.prototype.getCoordinate=function(){return this.p;};jsts_old.index.kdtree.KdNode.prototype.getData=function(){return this.data;};jsts_old.index.kdtree.KdNode.prototype.getLeft=function(){return this.left;};jsts_old.index.kdtree.KdNode.prototype.getRight=function(){return this.right;};jsts_old.index.kdtree.KdNode.prototype.increment=function(){this.count+=1;};jsts_old.index.kdtree.KdNode.prototype.getCount=function(){return this.count;};jsts_old.index.kdtree.KdNode.prototype.isRepeated=function(){return count>1;};jsts_old.index.kdtree.KdNode.prototype.setLeft=function(left){this.left=left;};jsts_old.index.kdtree.KdNode.prototype.setRight=function(right){this.right=right;};(function(){jsts_old.geom.MultiLineString=function(geometries,factory){this.geometries=geometries||[];this.factory=factory;};jsts_old.geom.MultiLineString.prototype=new jsts_old.geom.GeometryCollection();jsts_old.geom.MultiLineString.constructor=jsts_old.geom.MultiLineString;jsts_old.geom.MultiLineString.prototype.getBoundary=function(){return(new jsts_old.operation.BoundaryOp(this)).getBoundary();};jsts_old.geom.MultiLineString.prototype.equalsExact=function(other,tolerance){if(!this.isEquivalentClass(other)){return false;}
return jsts_old.geom.GeometryCollection.prototype.equalsExact.call(this,other,tolerance);};jsts_old.geom.MultiLineString.prototype.CLASS_NAME='jsts_old.geom.MultiLineString';})();jsts_old.algorithm.BoundaryNodeRule=function(){};jsts_old.algorithm.BoundaryNodeRule.prototype.isInBoundary=function(boundaryCount){throw new jsts_old.error.AbstractMethodInvocationError();};jsts_old.algorithm.Mod2BoundaryNodeRule=function(){};jsts_old.algorithm.Mod2BoundaryNodeRule.prototype=new jsts_old.algorithm.BoundaryNodeRule();jsts_old.algorithm.Mod2BoundaryNodeRule.prototype.isInBoundary=function(boundaryCount){return boundaryCount%2===1;};jsts_old.algorithm.BoundaryNodeRule.MOD2_BOUNDARY_RULE=new jsts_old.algorithm.Mod2BoundaryNodeRule();jsts_old.algorithm.BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE=jsts_old.algorithm.BoundaryNodeRule.MOD2_BOUNDARY_RULE;(function(){var Location=jsts_old.geom.Location;var Position=jsts_old.geomgraph.Position;jsts_old.geomgraph.Depth=function(){this.depth=[[],[]];for(var i=0;i<2;i++){for(var j=0;j<3;j++){this.depth[i][j]=jsts_old.geomgraph.Depth.NULL_VALUE;}}};jsts_old.geomgraph.Depth.NULL_VALUE=-1;jsts_old.geomgraph.Depth.depthAtLocation=function(location){if(location===Location.EXTERIOR)
return 0;if(location===Location.INTERIOR)
return 1;return jsts_old.geomgraph.Depth.NULL_VALUE;};jsts_old.geomgraph.Depth.prototype.depth=null;jsts_old.geomgraph.Depth.prototype.getDepth=function(geomIndex,posIndex){return this.depth[geomIndex][posIndex];};jsts_old.geomgraph.Depth.prototype.setDepth=function(geomIndex,posIndex,depthValue){this.depth[geomIndex][posIndex]=depthValue;};jsts_old.geomgraph.Depth.prototype.getLocation=function(geomIndex,posIndex){if(this.depth[geomIndex][posIndex]<=0)
return Location.EXTERIOR;return Location.INTERIOR;};jsts_old.geomgraph.Depth.prototype.add=function(geomIndex,posIndex,location){if(location===Location.INTERIOR)
this.depth[geomIndex][posIndex]++;};jsts_old.geomgraph.Depth.prototype.isNull=function(){if(arguments.length>0){return this.isNull2.apply(this,arguments);}
for(var i=0;i<2;i++){for(var j=0;j<3;j++){if(this.depth[i][j]!==jsts_old.geomgraph.Depth.NULL_VALUE)
return false;}}
return true;};jsts_old.geomgraph.Depth.prototype.isNull2=function(geomIndex){if(arguments.length>1){return this.isNull3.apply(this,arguments);}
return this.depth[geomIndex][1]==jsts_old.geomgraph.Depth.NULL_VALUE;};jsts_old.geomgraph.Depth.prototype.isNull3=function(geomIndex,posIndex){return this.depth[geomIndex][posIndex]==jsts_old.geomgraph.Depth.NULL_VALUE;};jsts_old.geomgraph.Depth.prototype.add=function(lbl){for(var i=0;i<2;i++){for(var j=1;j<3;j++){var loc=lbl.getLocation(i,j);if(loc===Location.EXTERIOR||loc===Location.INTERIOR){if(this.isNull(i,j)){this.depth[i][j]=jsts_old.geomgraph.Depth.depthAtLocation(loc);}else
this.depth[i][j]+=jsts_old.geomgraph.Depth.depthAtLocation(loc);}}}};jsts_old.geomgraph.Depth.prototype.getDelta=function(geomIndex){return this.depth[geomIndex][Position.RIGHT]-
this.depth[geomIndex][Position.LEFT];};jsts_old.geomgraph.Depth.prototype.normalize=function(){for(var i=0;i<2;i++){if(!this.isNull(i)){var minDepth=this.depth[i][1];if(this.depth[i][2]<minDepth)
minDepth=this.depth[i][2];if(minDepth<0)
minDepth=0;for(var j=1;j<3;j++){var newValue=0;if(this.depth[i][j]>minDepth)
newValue=1;this.depth[i][j]=newValue;}}}};jsts_old.geomgraph.Depth.prototype.toString=function(){return'A: '+this.depth[0][1]+','+this.depth[0][2]+' B: '+
this.depth[1][1]+','+this.depth[1][2];};})();jsts_old.operation.relate.EdgeEndBundle=function(){this.edgeEnds=[];var e=arguments[0]instanceof jsts_old.geomgraph.EdgeEnd?arguments[0]:arguments[1];var edge=e.getEdge();var coord=e.getCoordinate();var dirCoord=e.getDirectedCoordinate();var label=new jsts_old.geomgraph.Label(e.getLabel());jsts_old.geomgraph.EdgeEnd.call(this,edge,coord,dirCoord,label);this.insert(e);};jsts_old.operation.relate.EdgeEndBundle.prototype=new jsts_old.geomgraph.EdgeEnd();jsts_old.operation.relate.EdgeEndBundle.prototype.edgeEnds=null;jsts_old.operation.relate.EdgeEndBundle.prototype.getLabel=function(){return this.label;};jsts_old.operation.relate.EdgeEndBundle.prototype.getEdgeEnds=function(){return this.edgeEnds;};jsts_old.operation.relate.EdgeEndBundle.prototype.insert=function(e){this.edgeEnds.push(e);};jsts_old.operation.relate.EdgeEndBundle.prototype.computeLabel=function(boundaryNodeRule){var isArea=false;for(var i=0;i<this.edgeEnds.length;i++){var e=this.edgeEnds[i];if(e.getLabel().isArea())
isArea=true;}
if(isArea)
this.label=new jsts_old.geomgraph.Label(jsts_old.geom.Location.NONE,jsts_old.geom.Location.NONE,jsts_old.geom.Location.NONE);else
this.label=new jsts_old.geomgraph.Label(jsts_old.geom.Location.NONE);for(var i=0;i<2;i++){this.computeLabelOn(i,boundaryNodeRule);if(isArea)
this.computeLabelSides(i);}};jsts_old.operation.relate.EdgeEndBundle.prototype.computeLabelOn=function(geomIndex,boundaryNodeRule){var boundaryCount=0;var foundInterior=false;for(var i=0;i<this.edgeEnds.length;i++){var e=this.edgeEnds[i];var loc=e.getLabel().getLocation(geomIndex);if(loc==jsts_old.geom.Location.BOUNDARY)
boundaryCount++;if(loc==jsts_old.geom.Location.INTERIOR)
foundInterior=true;}
var loc=jsts_old.geom.Location.NONE;if(foundInterior)
loc=jsts_old.geom.Location.INTERIOR;if(boundaryCount>0){loc=jsts_old.geomgraph.GeometryGraph.determineBoundary(boundaryNodeRule,boundaryCount);}
this.label.setLocation(geomIndex,loc);};jsts_old.operation.relate.EdgeEndBundle.prototype.computeLabelSides=function(geomIndex){this.computeLabelSide(geomIndex,jsts_old.geomgraph.Position.LEFT);this.computeLabelSide(geomIndex,jsts_old.geomgraph.Position.RIGHT);};jsts_old.operation.relate.EdgeEndBundle.prototype.computeLabelSide=function(geomIndex,side){for(var i=0;i<this.edgeEnds.length;i++){var e=this.edgeEnds[i];if(e.getLabel().isArea()){var loc=e.getLabel().getLocation(geomIndex,side);if(loc===jsts_old.geom.Location.INTERIOR){this.label.setLocation(geomIndex,side,jsts_old.geom.Location.INTERIOR);return;}else if(loc===jsts_old.geom.Location.EXTERIOR)
this.label.setLocation(geomIndex,side,jsts_old.geom.Location.EXTERIOR);}}};jsts_old.operation.relate.EdgeEndBundle.prototype.updateIM=function(im){jsts_old.geomgraph.Edge.updateIM(this.label,im);};jsts_old.operation.buffer.BufferBuilder=function(bufParams){this.bufParams=bufParams;this.edgeList=new jsts_old.geomgraph.EdgeList();};jsts_old.operation.buffer.BufferBuilder.depthDelta=function(label){var lLoc=label.getLocation(0,jsts_old.geomgraph.Position.LEFT);var rLoc=label.getLocation(0,jsts_old.geomgraph.Position.RIGHT);if(lLoc===jsts_old.geom.Location.INTERIOR&&rLoc===jsts_old.geom.Location.EXTERIOR)
return 1;else if(lLoc===jsts_old.geom.Location.EXTERIOR&&rLoc===jsts_old.geom.Location.INTERIOR)
return-1;return 0;};jsts_old.operation.buffer.BufferBuilder.prototype.bufParams=null;jsts_old.operation.buffer.BufferBuilder.prototype.workingPrecisionModel=null;jsts_old.operation.buffer.BufferBuilder.prototype.workingNoder=null;jsts_old.operation.buffer.BufferBuilder.prototype.geomFact=null;jsts_old.operation.buffer.BufferBuilder.prototype.graph=null;jsts_old.operation.buffer.BufferBuilder.prototype.edgeList=null;jsts_old.operation.buffer.BufferBuilder.prototype.setWorkingPrecisionModel=function(pm){this.workingPrecisionModel=pm;};jsts_old.operation.buffer.BufferBuilder.prototype.setNoder=function(noder){this.workingNoder=noder;};jsts_old.operation.buffer.BufferBuilder.prototype.buffer=function(g,distance){var precisionModel=this.workingPrecisionModel;if(precisionModel===null)
precisionModel=g.getPrecisionModel();this.geomFact=g.getFactory();var curveBuilder=new jsts_old.operation.buffer.OffsetCurveBuilder(precisionModel,this.bufParams);var curveSetBuilder=new jsts_old.operation.buffer.OffsetCurveSetBuilder(g,distance,curveBuilder);var bufferSegStrList=curveSetBuilder.getCurves();if(bufferSegStrList.size()<=0){return this.createEmptyResultGeometry();}
this.computeNodedEdges(bufferSegStrList,precisionModel);this.graph=new jsts_old.geomgraph.PlanarGraph(new jsts_old.operation.overlay.OverlayNodeFactory());this.graph.addEdges(this.edgeList.getEdges());var subgraphList=this.createSubgraphs(this.graph);var polyBuilder=new jsts_old.operation.overlay.PolygonBuilder(this.geomFact);this.buildSubgraphs(subgraphList,polyBuilder);var resultPolyList=polyBuilder.getPolygons();if(resultPolyList.size()<=0){return this.createEmptyResultGeometry();}
var resultGeom=this.geomFact.buildGeometry(resultPolyList);return resultGeom;};jsts_old.operation.buffer.BufferBuilder.prototype.getNoder=function(precisionModel){if(this.workingNoder!==null)
return this.workingNoder;var noder=new jsts_old.noding.MCIndexNoder();var li=new jsts_old.algorithm.RobustLineIntersector();li.setPrecisionModel(precisionModel);noder.setSegmentIntersector(new jsts_old.noding.IntersectionAdder(li));return noder;};jsts_old.operation.buffer.BufferBuilder.prototype.computeNodedEdges=function(bufferSegStrList,precisionModel){var noder=this.getNoder(precisionModel);noder.computeNodes(bufferSegStrList);var nodedSegStrings=noder.getNodedSubstrings();for(var i=nodedSegStrings.iterator();i.hasNext();){var segStr=i.next();var oldLabel=segStr.getData();var edge=new jsts_old.geomgraph.Edge(segStr.getCoordinates(),new jsts_old.geomgraph.Label(oldLabel));this.insertUniqueEdge(edge);}};jsts_old.operation.buffer.BufferBuilder.prototype.insertUniqueEdge=function(e){var existingEdge=this.edgeList.findEqualEdge(e);if(existingEdge!=null){var existingLabel=existingEdge.getLabel();var labelToMerge=e.getLabel();if(!existingEdge.isPointwiseEqual(e)){labelToMerge=new jsts_old.geomgraph.Label(e.getLabel());labelToMerge.flip();}
existingLabel.merge(labelToMerge);var mergeDelta=jsts_old.operation.buffer.BufferBuilder.depthDelta(labelToMerge);var existingDelta=existingEdge.getDepthDelta();var newDelta=existingDelta+mergeDelta;existingEdge.setDepthDelta(newDelta);}else{this.edgeList.add(e);e.setDepthDelta(jsts_old.operation.buffer.BufferBuilder.depthDelta(e.getLabel()));}};jsts_old.operation.buffer.BufferBuilder.prototype.createSubgraphs=function(graph){var subgraphList=[];for(var i=graph.getNodes().iterator();i.hasNext();){var node=i.next();if(!node.isVisited()){var subgraph=new jsts_old.operation.buffer.BufferSubgraph();subgraph.create(node);subgraphList.push(subgraph);}}
var compare=function(a,b){return a.compareTo(b);};subgraphList.sort(compare);subgraphList.reverse();return subgraphList;};jsts_old.operation.buffer.BufferBuilder.prototype.buildSubgraphs=function(subgraphList,polyBuilder){var processedGraphs=[];for(var i=0;i<subgraphList.length;i++){var subgraph=subgraphList[i];var p=subgraph.getRightmostCoordinate();var locater=new jsts_old.operation.buffer.SubgraphDepthLocater(processedGraphs);var outsideDepth=locater.getDepth(p);subgraph.computeDepth(outsideDepth);subgraph.findResultEdges();processedGraphs.push(subgraph);polyBuilder.add(subgraph.getDirectedEdges(),subgraph.getNodes());}};jsts_old.operation.buffer.BufferBuilder.convertSegStrings=function(it){var fact=new jsts_old.geom.GeometryFactory();var lines=new javascript.util.ArrayList();while(it.hasNext()){var ss=it.next();var line=fact.createLineString(ss.getCoordinates());lines.add(line);}
return fact.buildGeometry(lines);};jsts_old.operation.buffer.BufferBuilder.prototype.createEmptyResultGeometry=function(){var emptyGeom=this.geomFact.createPolygon(null,null);return emptyGeom;};jsts_old.operation.relate.RelateOp=function(){jsts_old.operation.GeometryGraphOperation.apply(this,arguments);this._relate=new jsts_old.operation.relate.RelateComputer(this.arg);};jsts_old.operation.relate.RelateOp.prototype=new jsts_old.operation.GeometryGraphOperation();jsts_old.operation.relate.RelateOp.relate=function(a,b,boundaryNodeRule){var relOp=new jsts_old.operation.relate.RelateOp(a,b,boundaryNodeRule);var im=relOp.getIntersectionMatrix();return im;};jsts_old.operation.relate.RelateOp.prototype._relate=null;jsts_old.operation.relate.RelateOp.prototype.getIntersectionMatrix=function(){return this._relate.computeIM();};jsts_old.index.chain.MonotoneChain=function(pts,start,end,context){this.pts=pts;this.start=start;this.end=end;this.context=context;};jsts_old.index.chain.MonotoneChain.prototype.pts=null;jsts_old.index.chain.MonotoneChain.prototype.start=null;jsts_old.index.chain.MonotoneChain.prototype.end=null;jsts_old.index.chain.MonotoneChain.prototype.env=null;jsts_old.index.chain.MonotoneChain.prototype.context=null;jsts_old.index.chain.MonotoneChain.prototype.id=null;jsts_old.index.chain.MonotoneChain.prototype.setId=function(id){this.id=id;};jsts_old.index.chain.MonotoneChain.prototype.getId=function(){return this.id;};jsts_old.index.chain.MonotoneChain.prototype.getContext=function(){return this.context;};jsts_old.index.chain.MonotoneChain.prototype.getEnvelope=function(){if(this.env==null){var p0=this.pts[this.start];var p1=this.pts[this.end];this.env=new jsts_old.geom.Envelope(p0,p1);}
return this.env;};jsts_old.index.chain.MonotoneChain.prototype.getStartIndex=function(){return this.start;};jsts_old.index.chain.MonotoneChain.prototype.getEndIndex=function(){return this.end;};jsts_old.index.chain.MonotoneChain.prototype.getLineSegment=function(index,ls){ls.p0=this.pts[index];ls.p1=this.pts[index+1];};jsts_old.index.chain.MonotoneChain.prototype.getCoordinates=function(){var coord=[];var index=0;for(var i=this.start;i<=this.end;i++){coord[index++]=this.pts[i];}
return coord;};jsts_old.index.chain.MonotoneChain.prototype.select=function(searchEnv,mcs){this.computeSelect2(searchEnv,this.start,this.end,mcs);};jsts_old.index.chain.MonotoneChain.prototype.computeSelect2=function(searchEnv,start0,end0,mcs){var p0=this.pts[start0];var p1=this.pts[end0];mcs.tempEnv1.init(p0,p1);if(end0-start0===1){mcs.select(this,start0);return;}
if(!searchEnv.intersects(mcs.tempEnv1))
return;var mid=parseInt((start0+end0)/2);if(start0<mid){this.computeSelect2(searchEnv,start0,mid,mcs);}
if(mid<end0){this.computeSelect2(searchEnv,mid,end0,mcs);}};jsts_old.index.chain.MonotoneChain.prototype.computeOverlaps=function(mc,mco){if(arguments.length===6){return this.computeOverlaps2.apply(this,arguments);}
this.computeOverlaps2(this.start,this.end,mc,mc.start,mc.end,mco);};jsts_old.index.chain.MonotoneChain.prototype.computeOverlaps2=function(start0,end0,mc,start1,end1,mco){var p00=this.pts[start0];var p01=this.pts[end0];var p10=mc.pts[start1];var p11=mc.pts[end1];if(end0-start0===1&&end1-start1===1){mco.overlap(this,start0,mc,start1);return;}
mco.tempEnv1.init(p00,p01);mco.tempEnv2.init(p10,p11);if(!mco.tempEnv1.intersects(mco.tempEnv2))
return;var mid0=parseInt((start0+end0)/2);var mid1=parseInt((start1+end1)/2);if(start0<mid0){if(start1<mid1)
this.computeOverlaps2(start0,mid0,mc,start1,mid1,mco);if(mid1<end1)
this.computeOverlaps2(start0,mid0,mc,mid1,end1,mco);}
if(mid0<end0){if(start1<mid1)
this.computeOverlaps2(mid0,end0,mc,start1,mid1,mco);if(mid1<end1)
this.computeOverlaps2(mid0,end0,mc,mid1,end1,mco);}};(function(){var Location=jsts_old.geom.Location;var Dimension=jsts_old.geom.Dimension;jsts_old.geom.IntersectionMatrix=function(elements){var other=elements;if(elements===undefined||elements===null){this.matrix=[[],[],[]];this.setAll(Dimension.FALSE);}else if(typeof elements==='string'){this.set(elements);}else if(other instanceof jsts_old.geom.IntersectionMatrix){this.matrix[Location.INTERIOR][Location.INTERIOR]=other.matrix[Location.INTERIOR][Location.INTERIOR];this.matrix[Location.INTERIOR][Location.BOUNDARY]=other.matrix[Location.INTERIOR][Location.BOUNDARY];this.matrix[Location.INTERIOR][Location.EXTERIOR]=other.matrix[Location.INTERIOR][Location.EXTERIOR];this.matrix[Location.BOUNDARY][Location.INTERIOR]=other.matrix[Location.BOUNDARY][Location.INTERIOR];this.matrix[Location.BOUNDARY][Location.BOUNDARY]=other.matrix[Location.BOUNDARY][Location.BOUNDARY];this.matrix[Location.BOUNDARY][Location.EXTERIOR]=other.matrix[Location.BOUNDARY][Location.EXTERIOR];this.matrix[Location.EXTERIOR][Location.INTERIOR]=other.matrix[Location.EXTERIOR][Location.INTERIOR];this.matrix[Location.EXTERIOR][Location.BOUNDARY]=other.matrix[Location.EXTERIOR][Location.BOUNDARY];this.matrix[Location.EXTERIOR][Location.EXTERIOR]=other.matrix[Location.EXTERIOR][Location.EXTERIOR];}};jsts_old.geom.IntersectionMatrix.prototype.matrix=null;jsts_old.geom.IntersectionMatrix.prototype.add=function(im){var i,j;for(i=0;i<3;i++){for(j=0;j<3;j++){this.setAtLeast(i,j,im.get(i,j));}}};jsts_old.geom.IntersectionMatrix.matches=function(actualDimensionValue,requiredDimensionSymbol){if(typeof actualDimensionValue==='string'){return jsts_old.geom.IntersectionMatrix.matches2.call(this,arguments);}
if(requiredDimensionSymbol==='*'){return true;}
if(requiredDimensionSymbol==='T'&&(actualDimensionValue>=0||actualDimensionValue===Dimension.TRUE)){return true;}
if(requiredDimensionSymbol==='F'&&actualDimensionValue===Dimension.FALSE){return true;}
if(requiredDimensionSymbol==='0'&&actualDimensionValue===Dimension.P){return true;}
if(requiredDimensionSymbol==='1'&&actualDimensionValue===Dimension.L){return true;}
if(requiredDimensionSymbol==='2'&&actualDimensionValue===Dimension.A){return true;}
return false;};jsts_old.geom.IntersectionMatrix.matches2=function(actualDimensionSymbols,requiredDimensionSymbols){var m=new jsts_old.geom.IntersectionMatrix(actualDimensionSymbols);return m.matches(requiredDimensionSymbols);};jsts_old.geom.IntersectionMatrix.prototype.set=function(row,column,dimensionValue){if(typeof row==='string'){this.set2(row);return;}
this.matrix[row][column]=dimensionValue;};jsts_old.geom.IntersectionMatrix.prototype.set2=function(dimensionSymbols){for(var i=0;i<dimensionSymbols.length();i++){var row=i/3;var col=i%3;this.matrix[row][col]=Dimension.toDimensionValue(dimensionSymbols.charAt(i));}};jsts_old.geom.IntersectionMatrix.prototype.setAtLeast=function(row,column,minimumDimensionValue){if(arguments.length===1){this.setAtLeast2(arguments[0]);return;}
if(this.matrix[row][column]<minimumDimensionValue){this.matrix[row][column]=minimumDimensionValue;}};jsts_old.geom.IntersectionMatrix.prototype.setAtLeastIfValid=function(row,column,minimumDimensionValue){if(row>=0&&column>=0){this.setAtLeast(row,column,minimumDimensionValue);}};jsts_old.geom.IntersectionMatrix.prototype.setAtLeast2=function(minimumDimensionSymbols){var i;for(i=0;i<minimumDimensionSymbols.length;i++){var row=parseInt(i/3);var col=parseInt(i%3);this.setAtLeast(row,col,jsts_old.geom.Dimension.toDimensionValue(minimumDimensionSymbols.charAt(i)));}};jsts_old.geom.IntersectionMatrix.prototype.setAll=function(dimensionValue){var ai,bi;for(ai=0;ai<3;ai++){for(bi=0;bi<3;bi++){this.matrix[ai][bi]=dimensionValue;}}};jsts_old.geom.IntersectionMatrix.prototype.get=function(row,column){return this.matrix[row][column];};jsts_old.geom.IntersectionMatrix.prototype.isDisjoint=function(){return this.matrix[Location.INTERIOR][Location.INTERIOR]===Dimension.FALSE&&this.matrix[Location.INTERIOR][Location.BOUNDARY]===Dimension.FALSE&&this.matrix[Location.BOUNDARY][Location.INTERIOR]===Dimension.FALSE&&this.matrix[Location.BOUNDARY][Location.BOUNDARY]===Dimension.FALSE;};jsts_old.geom.IntersectionMatrix.prototype.isIntersects=function(){return!this.isDisjoint();};jsts_old.geom.IntersectionMatrix.prototype.isTouches=function(dimensionOfGeometryA,dimensionOfGeometryB){if(dimensionOfGeometryA>dimensionOfGeometryB){return this.isTouches(dimensionOfGeometryB,dimensionOfGeometryA);}
if((dimensionOfGeometryA==Dimension.A&&dimensionOfGeometryB==Dimension.A)||(dimensionOfGeometryA==Dimension.L&&dimensionOfGeometryB==Dimension.L)||(dimensionOfGeometryA==Dimension.L&&dimensionOfGeometryB==Dimension.A)||(dimensionOfGeometryA==Dimension.P&&dimensionOfGeometryB==Dimension.A)||(dimensionOfGeometryA==Dimension.P&&dimensionOfGeometryB==Dimension.L)){return this.matrix[Location.INTERIOR][Location.INTERIOR]===Dimension.FALSE&&(jsts_old.geom.IntersectionMatrix.matches(this.matrix[Location.INTERIOR][Location.BOUNDARY],'T')||jsts_old.geom.IntersectionMatrix.matches(this.matrix[Location.BOUNDARY][Location.INTERIOR],'T')||jsts_old.geom.IntersectionMatrix.matches(this.matrix[Location.BOUNDARY][Location.BOUNDARY],'T'));}
return false;};jsts_old.geom.IntersectionMatrix.prototype.isCrosses=function(dimensionOfGeometryA,dimensionOfGeometryB){if((dimensionOfGeometryA==Dimension.P&&dimensionOfGeometryB==Dimension.L)||(dimensionOfGeometryA==Dimension.P&&dimensionOfGeometryB==Dimension.A)||(dimensionOfGeometryA==Dimension.L&&dimensionOfGeometryB==Dimension.A)){return jsts_old.geom.IntersectionMatrix.matches(this.matrix[Location.INTERIOR][Location.INTERIOR],'T')&&jsts_old.geom.IntersectionMatrix.matches(this.matrix[Location.INTERIOR][Location.EXTERIOR],'T');}
if((dimensionOfGeometryA==Dimension.L&&dimensionOfGeometryB==Dimension.P)||(dimensionOfGeometryA==Dimension.A&&dimensionOfGeometryB==Dimension.P)||(dimensionOfGeometryA==Dimension.A&&dimensionOfGeometryB==Dimension.L)){return jsts_old.geom.IntersectionMatrix.matches(matrix[Location.INTERIOR][Location.INTERIOR],'T')&&jsts_old.geom.IntersectionMatrix.matches(this.matrix[Location.EXTERIOR][Location.INTERIOR],'T');}
if(dimensionOfGeometryA===Dimension.L&&dimensionOfGeometryB===Dimension.L){return this.matrix[Location.INTERIOR][Location.INTERIOR]===0;}
return false;};jsts_old.geom.IntersectionMatrix.prototype.isWithin=function(){return jsts_old.geom.IntersectionMatrix.matches(this.matrix[Location.INTERIOR][Location.INTERIOR],'T')&&this.matrix[Location.INTERIOR][Location.EXTERIOR]==Dimension.FALSE&&this.matrix[Location.BOUNDARY][Location.EXTERIOR]==Dimension.FALSE;};jsts_old.geom.IntersectionMatrix.prototype.isContains=function(){return jsts_old.geom.IntersectionMatrix.matches(this.matrix[Location.INTERIOR][Location.INTERIOR],'T')&&this.matrix[Location.EXTERIOR][Location.INTERIOR]==Dimension.FALSE&&this.matrix[Location.EXTERIOR][Location.BOUNDARY]==Dimension.FALSE;};jsts_old.geom.IntersectionMatrix.prototype.isCovers=function(){var hasPointInCommon=jsts_old.geom.IntersectionMatrix.matches(this.matrix[Location.INTERIOR][Location.INTERIOR],'T')||jsts_old.geom.IntersectionMatrix.matches(this.matrix[Location.INTERIOR][Location.BOUNDARY],'T')||jsts_old.geom.IntersectionMatrix.matches(this.matrix[Location.BOUNDARY][Location.INTERIOR],'T')||jsts_old.geom.IntersectionMatrix.matches(this.matrix[Location.BOUNDARY][Location.BOUNDARY],'T');return hasPointInCommon&&this.matrix[Location.EXTERIOR][Location.INTERIOR]==Dimension.FALSE&&this.matrix[Location.EXTERIOR][Location.BOUNDARY]==Dimension.FALSE;};jsts_old.geom.IntersectionMatrix.prototype.isCoveredBy=function(){var hasPointInCommon=jsts_old.geom.IntersectionMatrix.matches(this.matrix[Location.INTERIOR][Location.INTERIOR],'T')||jsts_old.geom.IntersectionMatrix.matches(this.matrix[Location.INTERIOR][Location.BOUNDARY],'T')||jsts_old.geom.IntersectionMatrix.matches(this.matrix[Location.BOUNDARY][Location.INTERIOR],'T')||jsts_old.geom.IntersectionMatrix.matches(this.matrix[Location.BOUNDARY][Location.BOUNDARY],'T');return hasPointInCommon&&this.matrix[Location.INTERIOR][Location.EXTERIOR]===Dimension.FALSE&&this.matrix[Location.BOUNDARY][Location.EXTERIOR]===Dimension.FALSE;};jsts_old.geom.IntersectionMatrix.prototype.isEquals=function(dimensionOfGeometryA,dimensionOfGeometryB){if(dimensionOfGeometryA!==dimensionOfGeometryB){return false;}
return jsts_old.geom.IntersectionMatrix.matches(this.matrix[Location.INTERIOR][Location.INTERIOR],'T')&&this.matrix[Location.EXTERIOR][Location.INTERIOR]===Dimension.FALSE&&this.matrix[Location.INTERIOR][Location.EXTERIOR]===Dimension.FALSE&&this.matrix[Location.EXTERIOR][Location.BOUNDARY]===Dimension.FALSE&&this.matrix[Location.BOUNDARY][Location.EXTERIOR]===Dimension.FALSE;};jsts_old.geom.IntersectionMatrix.prototype.isOverlaps=function(dimensionOfGeometryA,dimensionOfGeometryB){if((dimensionOfGeometryA==Dimension.P&&dimensionOfGeometryB===Dimension.P)||(dimensionOfGeometryA==Dimension.A&&dimensionOfGeometryB===Dimension.A)){return jsts_old.geom.IntersectionMatrix.matches(this.matrix[Location.INTERIOR][Location.INTERIOR],'T')&&jsts_old.geom.IntersectionMatrix.matches(this.matrix[Location.INTERIOR][Location.EXTERIOR],'T')&&jsts_old.geom.IntersectionMatrix.matches(this.matrix[Location.EXTERIOR][Location.INTERIOR],'T');}
if(dimensionOfGeometryA===Dimension.L&&dimensionOfGeometryB===Dimension.L){return this.matrix[Location.INTERIOR][Location.INTERIOR]==1&&jsts_old.geom.IntersectionMatrix.matches(this.matrix[Location.INTERIOR][Location.EXTERIOR],'T')&&jsts_old.geom.IntersectionMatrix.matches(this.matrix[Location.EXTERIOR][Location.INTERIOR],'T');}
return false;};jsts_old.geom.IntersectionMatrix.prototype.matches=function(requiredDimensionSymbols){if(requiredDimensionSymbols.length!=9){throw new jsts_old.error.IllegalArgumentException('Should be length 9: '+
requiredDimensionSymbols);}
for(var ai=0;ai<3;ai++){for(var bi=0;bi<3;bi++){if(!jsts_old.geom.IntersectionMatrix.matches(this.matrix[ai][bi],requiredDimensionSymbols.charAt(3*ai+bi))){return false;}}}
return true;};jsts_old.geom.IntersectionMatrix.prototype.transpose=function(){var temp=matrix[1][0];this.matrix[1][0]=this.matrix[0][1];this.matrix[0][1]=temp;temp=this.matrix[2][0];this.matrix[2][0]=this.matrix[0][2];this.matrix[0][2]=temp;temp=this.matrix[2][1];this.matrix[2][1]=this.matrix[1][2];this.matrix[1][2]=temp;return this;};jsts_old.geom.IntersectionMatrix.prototype.toString=function(){var ai,bi,buf='';for(ai=0;ai<3;ai++){for(bi=0;bi<3;bi++){buf+=Dimension.toDimensionSymbol(this.matrix[ai][bi]);}}
return buf;};})();jsts_old.index.ArrayListVisitor=function(){this.items=[];};jsts_old.index.ArrayListVisitor.prototype.visitItem=function(item){this.items.push(item);};jsts_old.index.ArrayListVisitor.prototype.getItems=function(){return this.items;};jsts_old.io.WKTWriter=function(){this.parser=new jsts_old.io.WKTParser(this.geometryFactory);};jsts_old.io.WKTWriter.prototype.write=function(geometry){var wkt=this.parser.write(geometry);return wkt;};jsts_old.geom.util.PointExtracter=function(pts){this.pts=pts;};jsts_old.geom.util.PointExtracter.prototype=new jsts_old.geom.GeometryFilter();jsts_old.geom.util.PointExtracter.prototype.pts=null;jsts_old.geom.util.PointExtracter.getPoints=function(geom,list){if(list===undefined){list=[];}
if(geom instanceof jsts_old.geom.Point){list.push(geom);}else if(geom instanceof jsts_old.geom.GeometryCollection||geom instanceof jsts_old.geom.MultiPoint||geom instanceof jsts_old.geom.MultiLineString||geom instanceof jsts_old.geom.MultiPolygon){geom.apply(new jsts_old.geom.util.PointExtracter(list));}
return list;};jsts_old.geom.util.PointExtracter.prototype.filter=function(geom){if(geom instanceof jsts_old.geom.Point)
this.pts.push(geom);};jsts_old.triangulate.quadedge.QuadEdgeSubdivision=function(env,tolerance){this.tolerance=tolerance;this.edgeCoincidenceTolerance=tolerance/jsts_old.triangulate.quadedge.QuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR;this.visitedKey=0;this.quadEdges=[];this.startingEdge;this.tolerance;this.edgeCoincidenceTolerance;this.frameEnv;this.locator=null;this.seg=new jsts_old.geom.LineSegment();this.triEdges=new Array(3);this.frameVertex=new Array(3);this.createFrame(env);this.startingEdge=this.initSubdiv();this.locator=new jsts_old.triangulate.quadedge.LastFoundQuadEdgeLocator(this);};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.EDGE_COINCIDENCE_TOL_FACTOR=1000;jsts_old.triangulate.quadedge.QuadEdgeSubdivision.getTriangleEdges=function(startQE,triEdge){triEdge[0]=startQE;triEdge[1]=triEdge[0].lNext();triEdge[2]=triEdge[1].lNext();if(triEdge[2].lNext()!=triEdge[0]){throw new jsts_old.IllegalArgumentError('Edges do not form a triangle');}};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.createFrame=function(env){var deltaX,deltaY,offset;deltaX=env.getWidth();deltaY=env.getHeight();offset=0.0;if(deltaX>deltaY){offset=deltaX*10.0;}else{offset=deltaY*10.0;}
this.frameVertex[0]=new jsts_old.triangulate.quadedge.Vertex((env.getMaxX()+env.getMinX())/2.0,env.getMaxY()
+offset);this.frameVertex[1]=new jsts_old.triangulate.quadedge.Vertex(env.getMinX()-offset,env.getMinY()-offset);this.frameVertex[2]=new jsts_old.triangulate.quadedge.Vertex(env.getMaxX()+offset,env.getMinY()-offset);this.frameEnv=new jsts_old.geom.Envelope(this.frameVertex[0].getCoordinate(),this.frameVertex[1].getCoordinate());this.frameEnv.expandToInclude(this.frameVertex[2].getCoordinate());};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.initSubdiv=function(){var ea,eb,ec;ea=this.makeEdge(this.frameVertex[0],this.frameVertex[1]);eb=this.makeEdge(this.frameVertex[1],this.frameVertex[2]);jsts_old.triangulate.quadedge.QuadEdge.splice(ea.sym(),eb);ec=this.makeEdge(this.frameVertex[2],this.frameVertex[0]);jsts_old.triangulate.quadedge.QuadEdge.splice(eb.sym(),ec);jsts_old.triangulate.quadedge.QuadEdge.splice(ec.sym(),ea);return ea;};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.getTolerance=function(){return this.tolerance;};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.getEnvelope=function(){return new jsts_old.geom.Envelope(this.frameEnv);};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.getEdges=function(){if(arguments.length>0){return this.getEdgesByFactory(arguments[0]);}else{return this.quadEdges;}};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.setLocator=function(locator){this.locator=locator;};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.makeEdge=function(o,d){var q=jsts_old.triangulate.quadedge.QuadEdge.makeEdge(o,d);this.quadEdges.push(q);return q;};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.connect=function(a,b){var q=jsts_old.triangulate.quadedge.QuadEdge.connect(a,b);this.quadEdges.push(q);return q;};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.delete_jsts_old=function(e){jsts_old.triangulate.quadedge.QuadEdge.splice(e,e.oPrev());jsts_old.triangulate.quadedge.QuadEdge.splice(e.sym(),e.sym().oPrev());var eSym,eRot,eRotSym;e.eSym=e.sym();eRot=e.rot;eRotSym=e.rot.sym();var idx=this.quadEdges.indexOf(e);if(idx!==-1){this.quadEdges.splice(idx,1);}
idx=this.quadEdges.indexOf(eSym);if(idx!==-1){this.quadEdges.splice(idx,1);}
idx=this.quadEdges.indexOf(eRot);if(idx!==-1){this.quadEdges.splice(idx,1);}
idx=this.quadEdges.indexOf(eRotSym);if(idx!==-1){this.quadEdges.splice(idx,1);}
e.delete_jsts_old();eSym.delete_jsts_old();eRot.delete_jsts_old();eRotSym.delete_jsts_old();};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.locateFromEdge=function(v,startEdge){var iter=0,maxIter=this.quadEdges.length,e;e=startEdge;while(true){iter++;if(iter>maxIter){throw new jsts_old.error.LocateFailureError(e.toLineSegment());}
if((v.equals(e.orig()))||(v.equals(e.dest()))){break;}else if(v.rightOf(e)){e=e.sym();}else if(!v.rightOf(e.oNext())){e=e.oNext();}else if(!v.rightOf(e.dPrev())){e=e.dPrev();}else{break;}}
return e;};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.locate=function(){if(arguments.length===1){if(arguments[0]instanceof jsts_old.triangulate.quadedge.Vertex){return this.locateByVertex(arguments[0]);}else{return this.locateByCoordinate(arguments[0]);}}else{return this.locateByCoordinates(arguments[0],arguments[1]);}};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.locateByVertex=function(v){return this.locator.locate(v);};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.locateByCoordinate=function(p){return this.locator.locate(new jsts_old.triangulate.quadedge.Vertex(p));};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.locateByCoordinates=function(p0,p1){var e,base,locEdge;var e=this.locator.locate(new jsts_old.triangulate.quadedge.Vertex(p0));if(e===null){return null;}
base=e;if(e.dest().getCoordinate().equals2D(p0)){base=e.sym();}
locEdge=base;do{if(locEdge.dest().getCoordinate().equals2D(p1)){return locEdge;}
locEdge=locEdge.oNext();}while(locEdge!=base);return null;};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.insertSite=function(v){var e,base,startEdge;e=this.locate(v);if((v.equals(e.orig(),this.tolerance))||(v.equals(e.dest(),this.tolerance))){return e;}
base=this.makeEdge(e.orig(),v);jsts_old.triangulate.quadedge.QuadEdge.splice(base,e);startEdge=base;do{base=this.connect(e,base.sym());e=base.oPrev();}while(e.lNext()!=startEdge);return startEdge;};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.isFrameEdge=function(e){if(this.isFrameVertex(e.orig())||this.isFrameVertex(e.dest())){return true;}
return false;};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.isFrameBorderEdge=function(e){var leftTri,rightTri,vLeftTriOther,vRightTriOther;leftTri=new Array(3);this.getTriangleEdges(e,leftTri);rightTri=new Array(3);this.getTriangleEdges(e.sym(),rightTri);vLeftTriOther=e.lNext().dest();if(this.isFrameVertex(vLeftTriOther)){return true;}
vRightTriOther=e.sym().lNext().dest();if(this.isFrameVertex(vRightTriOther)){return true;}
return false;};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.isFrameVertex=function(v){if(v.equals(this.frameVertex[0])){return true;}
if(v.equals(this.frameVertex[1])){return true;}
if(v.equals(this.frameVertex[2])){return true;}
return false;};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.isOnEdge=function(e,p){this.seg.setCoordinates(e.orig().getCoordinate(),e.dest().getCoordinate());var dist=this.seg.distance(p);return dist<this.edgeCoincidenceTolerance;};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.isVertexOfEdge=function(e,v){if((v.equals(e.orig(),this.tolerance))||(v.equals(e.dest(),this.tolerance))){return true;}
return false;};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.getVertices=function(includeFrame)
{var vertices=[],i,il,qe,v,vd;i=0,il=this.quadEdges.length;for(i;i<il;i++){qe=this.quadEdges[i];v=qe.orig();if(includeFrame||!this.isFrameVertex(v)){vertices.push(v);}
vd=qe.dest();if(includeFrame||!this.isFrameVertex(vd)){vertices.push(vd);}}
return vertices;};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.getVertexUniqueEdges=function(includeFrame)
{var edges,visitedVertices,i,il,qe,v,qd,vd;edges=[];visitedVertices=[];i=0,il=this.quadEdges.length;for(i;i<il;i++){qe=this.quadEdges[i];v=qe.orig();if(visitedVertices.indexOf(v)===-1){visitedVertices.push(v);if(includeFrame||!this.isFrameVertex(v)){edges.push(qe);}}
qd=qe.sym();vd=qd.orig();if(visitedVertices.indexOf(vd)===-1){visitedVertices.push(vd);if(includeFrame||!this.isFrameVertex(vd)){edges.push(qd);}}}
return edges;};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.getPrimaryEdges=function(includeFrame){this.visitedKey++;var edges,edgeStack,visitedEdges,edge,priQE;edges=[];edgeStack=[];edgeStack.push(this.startingEdge);visitedEdges=[];while(edgeStack.length>0){edge=edgeStack.pop();if(visitedEdges.indexOf(edge)===-1){priQE=edge.getPrimary();if(includeFrame||!this.isFrameEdge(priQE)){edges.push(priQE);}
edgeStack.push(edge.oNext());edgeStack.push(edge.sym().oNext());visitedEdges.push(edge);visitedEdges.push(edge.sym());}}
return edges;};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.visitTriangles=function(triVisitor,includeFrame){this.visitedKey++;var edgeStack,visitedEdges,edge,triEdges;edgeStack=[];edgeStack.push(this.startingEdge);visitedEdges=[];while(edgeStack.length>0){edge=edgeStack.pop();if(visitedEdges.indexOf(edge)===-1){triEdges=this.fetchTriangleToVisit(edge,edgeStack,includeFrame,visitedEdges);if(triEdges!==null)
triVisitor.visit(triEdges);}}};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.fetchTriangleToVisit=function(edge,edgeStack,includeFrame,visitedEdges){var curr,edgeCount,isFrame,sym;curr=edge;edgeCount=0;isFrame=false;do{this.triEdges[edgeCount]=curr;if(this.isFrameEdge(curr)){isFrame=true;}
sym=curr.sym();if(visitedEdges.indexOf(sym)===-1){edgeStack.push(sym);}
visitedEdges.push(curr);edgeCount++;curr=curr.lNext();}while(curr!==edge);if(isFrame&&!includeFrame){return null;}
return this.triEdges;};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.getTriangleEdges=function(includeFrame){var visitor=new jsts_old.triangulate.quadedge.TriangleEdgesListVisitor();this.visitTriangles(visitor,includeFrame);return visitor.getTriangleEdges();};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.getTriangleVertices=function(includeFrame){var visitor=new TriangleVertexListVisitor();this.visitTriangles(visitor,includeFrame);return visitor.getTriangleVertices();};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.getTriangleCoordinates=function(includeFrame){var visitor=new jsts_old.triangulate.quadedge.TriangleCoordinatesVisitor();this.visitTriangles(visitor,includeFrame);return visitor.getTriangles();};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.getEdgesByFactory=function(geomFact){var quadEdges,edges,i,il,qe,coords;quadEdges=this.getPrimaryEdges(false);edges=new Array(quadEdges.length);i=0,il=quadEdges.length;for(i;i<il;i++){qe=quadEdges[i];coords=new Array(2);coords[0]=(qe.orig().getCoordinate());coords[1]=(qe.dest().getCoordinate());edges[i]=geomFact.createLineString(coords);}
return geomFact.createMultiLineString(edges);};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.getTriangles=function(geomFact){var triPtsList,tris,triPt,i,il;triPtsList=this.getTriangleCoordinates(false);tris=new Array(triPtsList.length);i=0,il=triPtsList.length;for(i;i<il;i++){triPt=triPtsList[i];tris[i]=geomFact.createPolygon(geomFact.createLinearRing(triPt,null));}
return geomFact.createGeometryCollection(tris);};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.getVoronoiDiagram=function(geomFact)
{var vorCells=this.getVoronoiCellPolygons(geomFact);return geomFact.createGeometryCollection(vorCells);};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.getVoronoiCellPolygons=function(geomFact)
{this.visitTriangles(new jsts_old.triangulate.quadedge.TriangleCircumcentreVisitor(),true);var cells,edges,i,il,qe;cells=[];edges=this.getVertexUniqueEdges(false);i=0,il=edges.length;for(i;i<il;i++){qe=edges[i];cells.push(this.getVoronoiCellPolygon(qe,geomFact));}
return cells;};jsts_old.triangulate.quadedge.QuadEdgeSubdivision.prototype.getVoronoiCellPolygon=function(qe,geomFact)
{var cellPts,startQe,cc,coordList,cellPoly,v;cellPts=[];startQE=qe;do{cc=qe.rot.orig().getCoordinate();cellPts.push(cc);qe=qe.oPrev();}while(qe!==startQE);coordList=new jsts_old.geom.CoordinateList([],false);coordList.add(cellPts,false);coordList.closeRing();if(coordList.length<4){coordList.add(coordList.get(coordList.length-1),true);}
cellPoly=geomFact.createPolygon(geomFact.createLinearRing(coordList.toArray()),null);v=startQE.orig();return cellPoly;};jsts_old.triangulate.quadedge.TriangleCircumcentreVisitor=function(){};jsts_old.triangulate.quadedge.TriangleCircumcentreVisitor.prototype.visit=function(triEdges){var a,b,c,cc,ccVertex,i;a=triEdges[0].orig().getCoordinate();b=triEdges[1].orig().getCoordinate();c=triEdges[2].orig().getCoordinate();cc=jsts_old.geom.Triangle.circumcentre(a,b,c);ccVertex=new jsts_old.triangulate.quadedge.Vertex(cc);i=0;for(i;i<3;i++){triEdges[i].rot.setOrig(ccVertex);}};jsts_old.triangulate.quadedge.TriangleEdgesListVisitor=function(){this.triList=[];};jsts_old.triangulate.quadedge.TriangleEdgesListVisitor.prototype.visit=function(triEdges){var clone=triEdges.concat();this.triList.push(clone);};jsts_old.triangulate.quadedge.TriangleEdgesListVisitor.prototype.getTriangleEdges=function(){return this.triList;};jsts_old.triangulate.quadedge.TriangleVertexListVisitor=function(){this.triList=[];};jsts_old.triangulate.quadedge.TriangleVertexListVisitor.prototype.visit=function(triEdges){var vertices=[];vertices.push(trieEdges[0].orig());vertices.push(trieEdges[1].orig());vertices.push(trieEdges[2].orig());this.triList.push(vertices);};jsts_old.triangulate.quadedge.TriangleVertexListVisitor.prototype.getTriangleVertices=function(){return this.triList;};jsts_old.triangulate.quadedge.TriangleCoordinatesVisitor=function(){this.coordList=new jsts_old.geom.CoordinateList([],false);this.triCoords=[];};jsts_old.triangulate.quadedge.TriangleCoordinatesVisitor.prototype.visit=function(triEdges){this.coordList=new jsts_old.geom.CoordinateList([],false);var i=0,v,pts;for(i;i<3;i++){v=triEdges[i].orig();this.coordList.addCoordinate(v.getCoordinate());}
if(this.coordList.length>0){this.coordList.closeRing();pts=this.coordList.toArray();if(pts.length!==4){return;}
this.triCoords.push(pts);}};jsts_old.triangulate.quadedge.TriangleCoordinatesVisitor.prototype.getTriangles=function(){return this.triCoords;};jsts_old.index.kdtree.KdTree=function(tolerance){var tol=0.0;if(tolerance!==undefined){tol=tolerance;}
this.root=null;this.last=null;this.numberOfNodes=0;this.tolerance=tol;};jsts_old.index.kdtree.KdTree.prototype.insert=function(){if(arguments.length===1){return this.insertCoordinate.apply(this,arguments[0]);}else{return this.insertWithData.apply(this,arguments[0],arguments[1]);}};jsts_old.index.kdtree.KdTree.prototype.insertCoordinate=function(p){return this.insertWithData(p,null);};jsts_old.index.kdtree.KdTree.prototype.insertWithData=function(p,data){if(this.root===null){this.root=new jsts_old.index.kdtree.KdNode(p,data);return this.root;}
var currentNode=this.root,leafNode=this.root,isOddLevel=true,isLessThan=true;while(currentNode!==last){if(isOddLevel){isLessThan=p.x<currentNode.getX();}else{isLessThan=p.y<currentNode.getY();}
leafNode=currentNode;if(isLessThan){currentNode=currentNode.getLeft();}else{currentNode=currentNode.getRight();}
if(currentNode!==null){var isInTolerance=p.distance(currentNode.getCoordinate())<=this.tolerance;if(isInTolerance){currentNode.increment();return currentNode;}}
isOddLevel=!isOddLevel;}
this.numberOfNodes=numberOfNodes+1;var node=new jsts_old.index.kdtree.KdNode(p,data);node.setLeft(this.last);node.setRight(this.last);if(isLessThan){leafNode.setLeft(node);}else{leafNode.setRight(node);}
return node;};jsts_old.index.kdtree.KdTree.prototype.queryNode=function(currentNode,bottomNode,queryEnv,odd,result){if(currentNode===bottomNode){return;}
var min,max,discriminant;if(odd){min=queryEnv.getMinX();max=queryEnv.getMaxX();discriminant=currentNode.getX();}else{min=queryEnv.getMinY();max=queryEnv.getMaxY();discriminant=currentNode.getY();}
var searchLeft=min<discriminant;var searchRight=discriminant<=max;if(searchLeft){this.queryNode(currentNode.getLeft(),bottomNode,queryEnv,!odd,result);}
if(queryEnv.contains(currentNode.getCoordinate())){result.add(currentNode);}
if(searchRight){this.queryNode(currentNode.getRight(),bottomNode,queryEnv,!odd,result);}};jsts_old.index.kdtree.KdTree.prototype.query=function(){if(arguments.length===1){return this.queryByEnvelope.apply(this,arguments[0]);}else{return this.queryWithArray.apply(this,arguments[0],arguments[1]);}};jsts_old.index.kdtree.KdTree.prototype.queryByEnvelope=function(queryEnv){var result=[];this.queryNode(this.root,this.last,queryEnv,true,result);return result;};jsts_old.index.kdtree.KdTree.prototype.queryWithArray=function(queryEnv,result){this.queryNode(this.root,this.last,queryEnv,true,result);};jsts_old.geom.Triangle=function(){};jsts_old.geom.Triangle.isAcute=function(a,b,c){if(!jsts_old.algorithm.Angle.isAcute(a,b,c)){return false;}
if(!jsts_old.algorithm.Angle.isAcute(b,c,a)){return false;}
if(!jsts_old.algorithm.Angle.isAcute(c,a,b)){return false;}
return true;};jsts_old.geom.Triangle.perpendicularBisector=function(a,b){var dx,dy,l1,l2;dx=b.x-a.x;dy=b.y-a.y;l1=new jsts_old.algorithm.HCoordinate(a.x+dx/2.0,a.y+dy/2.0,1.0);l2=new jsts_old.algorithm.HCoordinate(a.x-dy+dx/2.0,a.y+dx+dy/2.0,1.0);return new jsts_old.algorithm.HCoordinate(l1,l2);};jsts_old.geom.Triangle.circumcentre=function(a,b,c){var cx,cy,ax,ay,bx,by,denom,numx,numy,ccx,ccy;cx=c.x;cy=c.y;ax=a.x-cx;ay=a.y-cy;bx=b.x-cx;by=b.y-cy;denom=2*jsts_old.geom.Triangle.det(ax,ay,bx,by);numx=jsts_old.geom.Triangle.det(ay,ax*ax+ay*ay,by,bx*bx+by*by);numy=jsts_old.geom.Triangle.det(ax,ax*ax+ay*ay,bx,bx*bx+by*by);ccx=cx-numx/denom;ccy=cy+numy/denom;return new jsts_old.geom.Coordinate(ccx,ccy);};jsts_old.geom.Triangle.det=function(m00,m01,m10,m11){return m00*m11-m01*m10;};jsts_old.geom.Triangle.inCentre=function(a,b,c){var len0,len1,len2,circum,inCentreX,inCentreY;len0=b.distance(c);len1=a.distance(c);len2=a.distance(b);circum=len0+len1+len2;inCentreX=(len0*a.x+len1*b.x+len2*c.x)/circum;inCentreY=(len0*a.y+len1*b.y+len2*c.y)/circum;return new jsts_old.geom.Coordinate(inCentreX,inCentreY);};jsts_old.geom.Triangle.centroid=function(a,b,c){var x,y;x=(a.x+b.x+c.x)/3;y=(a.y+b.y+c.y)/3;return new jsts_old.geom.Coordinate(x,y);};jsts_old.geom.Triangle.longestSideLength=function(a,b,c){var lenAB,lenBC,lenCA,maxLen;lenAB=a.distance(b);lenBC=b.distance(c);lenCA=c.distance(a);maxLen=lenAB;if(lenBC>maxLen){maxLen=lenBC;}
if(lenCA>maxLen){maxLen=lenCA;}
return maxLen;};jsts_old.geom.Triangle.angleBisector=function(a,b,c){var len0,len2,frac,dx,dy,splitPt;len0=b.distance(a);len2=b.distance(c);frac=len0/(len0+len2);dx=c.x-a.x;dy=c.y-a.y;splitPt=new jsts_old.geom.Coordinate(a.x+frac*dx,a.y+frac*dy);return splitPt;};jsts_old.geom.Triangle.area=function(a,b,c){return Math.abs(((c.x-a.x)*(b.y-a.y)-(b.x-a.x)*(c.y-a.y))/2.0);};jsts_old.geom.Triangle.signedArea=function(a,b,c){return((c.x-a.x)*(b.y-a.y)-(b.x-a.x)*(c.y-a.y))/2.0;};jsts_old.geom.Triangle.prototype.initialize=function(p0,p1,p2){this.p0=p0;this.p1=p1;this.p2=p2;};jsts_old.geom.Triangle.prototype.inCentre=function(){return jsts_old.geom.Triangle.inCentre(this.p0,this.p1,this.p2);};jsts_old.algorithm.CentroidArea=function(){this.basePt=null;this.triangleCent3=new jsts_old.geom.Coordinate();this.centSum=new jsts_old.geom.Coordinate();this.cg3=new jsts_old.geom.Coordinate();};jsts_old.algorithm.CentroidArea.prototype.basePt=null;jsts_old.algorithm.CentroidArea.prototype.triangleCent3=null;jsts_old.algorithm.CentroidArea.prototype.areasum2=0;jsts_old.algorithm.CentroidArea.prototype.cg3=null;jsts_old.algorithm.CentroidArea.prototype.centSum=null;jsts_old.algorithm.CentroidArea.prototype.totalLength=0.0;jsts_old.algorithm.CentroidArea.prototype.add=function(geom){if(geom instanceof jsts_old.geom.Polygon){var poly=geom;this.setBasePoint(poly.getExteriorRing().getCoordinateN(0));this.add3(poly);}else if(geom instanceof jsts_old.geom.GeometryCollection||geom instanceof jsts_old.geom.MultiPolygon){var gc=geom;for(var i=0;i<gc.getNumGeometries();i++){this.add(gc.getGeometryN(i));}}else if(geom instanceof Array){this.add2(geom);}};jsts_old.algorithm.CentroidArea.prototype.add2=function(ring){this.setBasePoint(ring[0]);this.addShell(ring);};jsts_old.algorithm.CentroidArea.prototype.getCentroid=function(){var cent=new jsts_old.geom.Coordinate();if(Math.abs(this.areasum2)>0.0){cent.x=this.cg3.x/3/this.areasum2;cent.y=this.cg3.y/3/this.areasum2;}else{cent.x=this.centSum.x/this.totalLength;cent.y=this.centSum.y/this.totalLength;}
return cent;};jsts_old.algorithm.CentroidArea.prototype.setBasePoint=function(basePt){if(this.basePt==null)
this.basePt=basePt;};jsts_old.algorithm.CentroidArea.prototype.add3=function(poly){this.addShell(poly.getExteriorRing().getCoordinates());for(var i=0;i<poly.getNumInteriorRing();i++){this.addHole(poly.getInteriorRingN(i).getCoordinates());}};jsts_old.algorithm.CentroidArea.prototype.addShell=function(pts){var isPositiveArea=!jsts_old.algorithm.CGAlgorithms.isCCW(pts);for(var i=0;i<pts.length-1;i++){this.addTriangle(this.basePt,pts[i],pts[i+1],isPositiveArea);}
this.addLinearSegments(pts);};jsts_old.algorithm.CentroidArea.prototype.addHole=function(pts){var isPositiveArea=jsts_old.algorithm.CGAlgorithms.isCCW(pts);for(var i=0;i<pts.length-1;i++){this.addTriangle(this.basePt,pts[i],pts[i+1],isPositiveArea);}
this.addLinearSegments(pts);};jsts_old.algorithm.CentroidArea.prototype.addTriangle=function(p0,p1,p2,isPositiveArea){var sign=(isPositiveArea)?1.0:-1.0;jsts_old.algorithm.CentroidArea.centroid3(p0,p1,p2,this.triangleCent3);var area2=jsts_old.algorithm.CentroidArea.area2(p0,p1,p2);this.cg3.x+=sign*area2*this.triangleCent3.x;this.cg3.y+=sign*area2*this.triangleCent3.y;this.areasum2+=sign*area2;};jsts_old.algorithm.CentroidArea.centroid3=function(p1,p2,p3,c){c.x=p1.x+p2.x+p3.x;c.y=p1.y+p2.y+p3.y;return;};jsts_old.algorithm.CentroidArea.area2=function(p1,p2,p3){return(p2.x-p1.x)*(p3.y-p1.y)-(p3.x-p1.x)*(p2.y-p1.y);};jsts_old.algorithm.CentroidArea.prototype.addLinearSegments=function(pts){for(var i=0;i<pts.length-1;i++){var segmentLen=pts[i].distance(pts[i+1]);this.totalLength+=segmentLen;var midx=(pts[i].x+pts[i+1].x)/2;this.centSum.x+=segmentLen*midx;var midy=(pts[i].y+pts[i+1].y)/2;this.centSum.y+=segmentLen*midy;}};jsts_old.algorithm.CentralEndpointIntersector=function(p00,p01,p10,p11){this.pts=[p00,p01,p10,p11];this.compute();};jsts_old.algorithm.CentralEndpointIntersector.getIntersection=function(p00,p01,p10,p11){var intor=new jsts_old.algorithm.CentralEndpointIntersector(p00,p01,p10,p11);return intor.getIntersection();};jsts_old.algorithm.CentralEndpointIntersector.prototype.pts=null;jsts_old.algorithm.CentralEndpointIntersector.prototype.intPt=null;jsts_old.algorithm.CentralEndpointIntersector.prototype.compute=function(){var centroid=jsts_old.algorithm.CentralEndpointIntersector.average(this.pts);this.intPt=this.findNearestPoint(centroid,this.pts);};jsts_old.algorithm.CentralEndpointIntersector.prototype.getIntersection=function(){return this.intPt;};jsts_old.algorithm.CentralEndpointIntersector.average=function(pts){var avg=new jsts_old.geom.Coordinate();var i,n=pts.length;for(i=0;i<n;i++){avg.x+=pts[i].x;avg.y+=pts[i].y;}
if(n>0){avg.x/=n;avg.y/=n;}
return avg;};jsts_old.algorithm.CentralEndpointIntersector.prototype.findNearestPoint=function(p,pts){var minDist=Number.MAX_VALUE;var i,result=null,dist;for(i=0;i<pts.length;i++){dist=p.distance(pts[i]);if(dist<minDist){minDist=dist;result=pts[i];}}
return result;};jsts_old.operation.relate.RelateNode=function(coord,edges){jsts_old.geomgraph.Node.apply(this,arguments);};jsts_old.operation.relate.RelateNode.prototype=new jsts_old.geomgraph.Node();jsts_old.operation.relate.RelateNode.prototype.computeIM=function(im){im.setAtLeastIfValid(this.label.getLocation(0),this.label.getLocation(1),0);};jsts_old.operation.relate.RelateNode.prototype.updateIMFromEdges=function(im){this.edges.updateIM(im);};jsts_old.operation.buffer.OffsetSegmentString=function(){this.ptList=[];};jsts_old.operation.buffer.OffsetSegmentString.prototype.ptList=null;jsts_old.operation.buffer.OffsetSegmentString.prototype.precisionModel=null;jsts_old.operation.buffer.OffsetSegmentString.prototype.minimimVertexDistance=0.0;jsts_old.operation.buffer.OffsetSegmentString.prototype.setPrecisionModel=function(precisionModel){this.precisionModel=precisionModel;};jsts_old.operation.buffer.OffsetSegmentString.prototype.setMinimumVertexDistance=function(minimimVertexDistance){this.minimimVertexDistance=minimimVertexDistance;};jsts_old.operation.buffer.OffsetSegmentString.prototype.addPt=function(pt){var bufPt=new jsts_old.geom.Coordinate(pt);this.precisionModel.makePrecise(bufPt);if(this.isRedundant(bufPt))
return;this.ptList.push(bufPt);};jsts_old.operation.buffer.OffsetSegmentString.prototype.addPts=function(pt,isForward){if(isForward){for(var i=0;i<pt.length;i++){this.addPt(pt[i]);}}else{for(var i=pt.length-1;i>=0;i--){this.addPt(pt[i]);}}};jsts_old.operation.buffer.OffsetSegmentString.prototype.isRedundant=function(pt){if(this.ptList.length<1)
return false;var lastPt=this.ptList[this.ptList.length-1];var ptDist=pt.distance(lastPt);if(ptDist<this.minimimVertexDistance)
return true;return false;};jsts_old.operation.buffer.OffsetSegmentString.prototype.closeRing=function(){if(this.ptList.length<1)
return;var startPt=new jsts_old.geom.Coordinate(this.ptList[0]);var lastPt=this.ptList[this.ptList.length-1];var last2Pt=null;if(this.ptList.length>=2)
last2Pt=this.ptList[this.ptList.length-2];if(startPt.equals(lastPt))
return;this.ptList.push(startPt);};jsts_old.operation.buffer.OffsetSegmentString.prototype.reverse=function(){};jsts_old.operation.buffer.OffsetSegmentString.prototype.getCoordinates=function(){return this.ptList;};(function(){var ArrayList=javascript.util.ArrayList;var TreeSet=javascript.util.TreeSet;var CoordinateFilter=jsts_old.geom.CoordinateFilter;jsts_old.util.UniqueCoordinateArrayFilter=function(){this.treeSet=new TreeSet();this.list=new ArrayList();};jsts_old.util.UniqueCoordinateArrayFilter.prototype=new CoordinateFilter();jsts_old.util.UniqueCoordinateArrayFilter.prototype.treeSet=null;jsts_old.util.UniqueCoordinateArrayFilter.prototype.list=null;jsts_old.util.UniqueCoordinateArrayFilter.prototype.getCoordinates=function(){return this.list.toArray();};jsts_old.util.UniqueCoordinateArrayFilter.prototype.filter=function(coord){if(!this.treeSet.contains(coord)){this.list.add(coord);this.treeSet.add(coord);}};})();(function(){var CGAlgorithms=jsts_old.algorithm.CGAlgorithms;var UniqueCoordinateArrayFilter=jsts_old.util.UniqueCoordinateArrayFilter;var Assert=jsts_old.util.Assert;var Stack=javascript.util.Stack;var ArrayList=javascript.util.ArrayList;var Arrays=javascript.util.Arrays;var RadialComparator=function(origin){this.origin=origin;};RadialComparator.prototype.origin=null;RadialComparator.prototype.compare=function(o1,o2){var p1=o1;var p2=o2;return RadialComparator.polarCompare(this.origin,p1,p2);};RadialComparator.polarCompare=function(o,p,q){var dxp=p.x-o.x;var dyp=p.y-o.y;var dxq=q.x-o.x;var dyq=q.y-o.y;var orient=CGAlgorithms.computeOrientation(o,p,q);if(orient==CGAlgorithms.COUNTERCLOCKWISE)
return 1;if(orient==CGAlgorithms.CLOCKWISE)
return-1;var op=dxp*dxp+dyp*dyp;var oq=dxq*dxq+dyq*dyq;if(op<oq){return-1;}
if(op>oq){return 1;}
return 0;};jsts_old.algorithm.ConvexHull=function(){if(arguments.length===1){var geometry=arguments[0];this.inputPts=jsts_old.algorithm.ConvexHull.extractCoordinates(geometry);this.geomFactory=geometry.getFactory();}else{this.pts=arguments[0];this.geomFactory=arguments[1];}};jsts_old.algorithm.ConvexHull.prototype.geomFactory=null;jsts_old.algorithm.ConvexHull.prototype.inputPts=null;jsts_old.algorithm.ConvexHull.extractCoordinates=function(geom){var filter=new UniqueCoordinateArrayFilter();geom.apply(filter);return filter.getCoordinates();};jsts_old.algorithm.ConvexHull.prototype.getConvexHull=function(){if(this.inputPts.length==0){return this.geomFactory.createGeometryCollection(null);}
if(this.inputPts.length==1){return this.geomFactory.createPoint(this.inputPts[0]);}
if(this.inputPts.length==2){return this.geomFactory.createLineString(this.inputPts);}
var reducedPts=this.inputPts;if(this.inputPts.length>50){reducedPts=this.reduce(this.inputPts);}
var sortedPts=this.preSort(reducedPts);var cHS=this.grahamScan(sortedPts);var cH=cHS.toArray();return this.lineOrPolygon(cH);};jsts_old.algorithm.ConvexHull.prototype.reduce=function(inputPts){var polyPts=this.computeOctRing(inputPts);if(polyPts==null)
return this.inputPts;var reducedSet=new javascript.util.TreeSet();for(var i=0;i<polyPts.length;i++){reducedSet.add(polyPts[i]);}
for(var i=0;i<inputPts.length;i++){if(!CGAlgorithms.isPointInRing(inputPts[i],polyPts)){reducedSet.add(inputPts[i]);}}
var reducedPts=reducedSet.toArray();if(reducedPts.length<3)
return this.padArray3(reducedPts);return reducedPts;};jsts_old.algorithm.ConvexHull.prototype.padArray3=function(pts){var pad=[];for(var i=0;i<pad.length;i++){if(i<pts.length){pad[i]=pts[i];}else
pad[i]=pts[0];}
return pad;};jsts_old.algorithm.ConvexHull.prototype.preSort=function(pts){var t;for(var i=1;i<pts.length;i++){if((pts[i].y<pts[0].y)||((pts[i].y==pts[0].y)&&(pts[i].x<pts[0].x))){t=pts[0];pts[0]=pts[i];pts[i]=t;}}
Arrays.sort(pts,1,pts.length,new RadialComparator(pts[0]));return pts;};jsts_old.algorithm.ConvexHull.prototype.grahamScan=function(c){var p;var ps=new Stack();p=ps.push(c[0]);p=ps.push(c[1]);p=ps.push(c[2]);for(var i=3;i<c.length;i++){p=ps.pop();while(!ps.empty()&&CGAlgorithms.computeOrientation(ps.peek(),p,c[i])>0){p=ps.pop();}
p=ps.push(p);p=ps.push(c[i]);}
p=ps.push(c[0]);return ps;};jsts_old.algorithm.ConvexHull.prototype.isBetween=function(c1,c2,c3){if(CGAlgorithms.computeOrientation(c1,c2,c3)!==0){return false;}
if(c1.x!=c3.x){if(c1.x<=c2.x&&c2.x<=c3.x){return true;}
if(c3.x<=c2.x&&c2.x<=c1.x){return true;}}
if(c1.y!=c3.y){if(c1.y<=c2.y&&c2.y<=c3.y){return true;}
if(c3.y<=c2.y&&c2.y<=c1.y){return true;}}
return false;};jsts_old.algorithm.ConvexHull.prototype.computeOctRing=function(inputPts){var octPts=this.computeOctPts(inputPts);var coordList=new jsts_old.geom.CoordinateList();coordList.add(octPts,false);if(coordList.length<3){return null;}
coordList.closeRing();return coordList;};jsts_old.algorithm.ConvexHull.prototype.computeOctPts=function(inputPts){var pts=[];for(var j=0;j<8;j++){pts[j]=inputPts[0];}
for(var i=1;i<inputPts.length;i++){if(inputPts[i].x<pts[0].x){pts[0]=inputPts[i];}
if(inputPts[i].x-inputPts[i].y<pts[1].x-pts[1].y){pts[1]=inputPts[i];}
if(inputPts[i].y>pts[2].y){pts[2]=inputPts[i];}
if(inputPts[i].x+inputPts[i].y>pts[3].x+pts[3].y){pts[3]=inputPts[i];}
if(inputPts[i].x>pts[4].x){pts[4]=inputPts[i];}
if(inputPts[i].x-inputPts[i].y>pts[5].x-pts[5].y){pts[5]=inputPts[i];}
if(inputPts[i].y<pts[6].y){pts[6]=inputPts[i];}
if(inputPts[i].x+inputPts[i].y<pts[7].x+pts[7].y){pts[7]=inputPts[i];}}
return pts;};jsts_old.algorithm.ConvexHull.prototype.lineOrPolygon=function(coordinates){coordinates=this.cleanRing(coordinates);if(coordinates.length==3){return this.geomFactory.createLineString([coordinates[0],coordinates[1]]);}
var linearRing=this.geomFactory.createLinearRing(coordinates);return this.geomFactory.createPolygon(linearRing,null);};jsts_old.algorithm.ConvexHull.prototype.cleanRing=function(original){Assert.equals(original[0],original[original.length-1]);var cleanedRing=new ArrayList();var previousDistinctCoordinate=null;for(var i=0;i<=original.length-2;i++){var currentCoordinate=original[i];var nextCoordinate=original[i+1];if(currentCoordinate.equals(nextCoordinate)){continue;}
if(previousDistinctCoordinate!=null&&this.isBetween(previousDistinctCoordinate,currentCoordinate,nextCoordinate)){continue;}
cleanedRing.add(currentCoordinate);previousDistinctCoordinate=currentCoordinate;}
cleanedRing.add(original[original.length-1]);var cleanedRingCoordinates=[];return cleanedRing.toArray(cleanedRingCoordinates);};})();(function(){var ArrayList=javascript.util.ArrayList;jsts_old.geomgraph.index.SegmentIntersector=function(li,includeProper,recordIsolated){this.li=li;this.includeProper=includeProper;this.recordIsolated=recordIsolated;};jsts_old.geomgraph.index.SegmentIntersector.isAdjacentSegments=function(i1,i2){return Math.abs(i1-i2)===1;};jsts_old.geomgraph.index.SegmentIntersector.prototype._hasIntersection=false;jsts_old.geomgraph.index.SegmentIntersector.prototype.hasProper=false;jsts_old.geomgraph.index.SegmentIntersector.prototype.hasProperInterior=false;jsts_old.geomgraph.index.SegmentIntersector.prototype.properIntersectionPoint=null;jsts_old.geomgraph.index.SegmentIntersector.prototype.li=null;jsts_old.geomgraph.index.SegmentIntersector.prototype.includeProper=null;jsts_old.geomgraph.index.SegmentIntersector.prototype.recordIsolated=null;jsts_old.geomgraph.index.SegmentIntersector.prototype.isSelfIntersection=null;jsts_old.geomgraph.index.SegmentIntersector.prototype.numIntersections=0;jsts_old.geomgraph.index.SegmentIntersector.prototype.numTests=0;jsts_old.geomgraph.index.SegmentIntersector.prototype.bdyNodes=null;jsts_old.geomgraph.index.SegmentIntersector.prototype.setBoundaryNodes=function(bdyNodes0,bdyNodes1){this.bdyNodes=[];this.bdyNodes[0]=bdyNodes0;this.bdyNodes[1]=bdyNodes1;};jsts_old.geomgraph.index.SegmentIntersector.prototype.getProperIntersectionPoint=function(){return this.properIntersectionPoint;};jsts_old.geomgraph.index.SegmentIntersector.prototype.hasIntersection=function(){return this._hasIntersection;};jsts_old.geomgraph.index.SegmentIntersector.prototype.hasProperIntersection=function(){return this.hasProper;};jsts_old.geomgraph.index.SegmentIntersector.prototype.hasProperInteriorIntersection=function(){return this.hasProperInterior;};jsts_old.geomgraph.index.SegmentIntersector.prototype.isTrivialIntersection=function(e0,segIndex0,e1,segIndex1){if(e0===e1){if(this.li.getIntersectionNum()===1){if(jsts_old.geomgraph.index.SegmentIntersector.isAdjacentSegments(segIndex0,segIndex1))
return true;if(e0.isClosed()){var maxSegIndex=e0.getNumPoints()-1;if((segIndex0===0&&segIndex1===maxSegIndex)||(segIndex1===0&&segIndex0===maxSegIndex)){return true;}}}}
return false;};jsts_old.geomgraph.index.SegmentIntersector.prototype.addIntersections=function(e0,segIndex0,e1,segIndex1){if(e0===e1&&segIndex0===segIndex1)
return;this.numTests++;var p00=e0.getCoordinates()[segIndex0];var p01=e0.getCoordinates()[segIndex0+1];var p10=e1.getCoordinates()[segIndex1];var p11=e1.getCoordinates()[segIndex1+1];this.li.computeIntersection(p00,p01,p10,p11);if(this.li.hasIntersection()){if(this.recordIsolated){e0.setIsolated(false);e1.setIsolated(false);}
this.numIntersections++;if(!this.isTrivialIntersection(e0,segIndex0,e1,segIndex1)){this._hasIntersection=true;if(this.includeProper||!this.li.isProper()){e0.addIntersections(this.li,segIndex0,0);e1.addIntersections(this.li,segIndex1,1);}
if(this.li.isProper()){this.properIntersectionPoint=this.li.getIntersection(0).clone();this.hasProper=true;if(!this.isBoundaryPoint(this.li,this.bdyNodes))
this.hasProperInterior=true;}}}};jsts_old.geomgraph.index.SegmentIntersector.prototype.isBoundaryPoint=function(li,bdyNodes){if(bdyNodes===null)
return false;if(bdyNodes instanceof Array){if(this.isBoundaryPoint(li,bdyNodes[0]))
return true;if(this.isBoundaryPoint(li,bdyNodes[1]))
return true;return false;}else{for(var i=bdyNodes.iterator();i.hasNext();){var node=i.next();var pt=node.getCoordinate();if(li.isIntersection(pt))
return true;}
return false;}};})();(function(){var Location=jsts_old.geom.Location;var Position=jsts_old.geomgraph.Position;var Assert=jsts_old.util.Assert;jsts_old.geomgraph.GeometryGraph=function(argIndex,parentGeom,boundaryNodeRule){jsts_old.geomgraph.PlanarGraph.call(this);this.lineEdgeMap=new javascript.util.HashMap();this.ptLocator=new jsts_old.algorithm.PointLocator();this.argIndex=argIndex;this.parentGeom=parentGeom;this.boundaryNodeRule=boundaryNodeRule||jsts_old.algorithm.BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;if(parentGeom!==null){this.add(parentGeom);}};jsts_old.geomgraph.GeometryGraph.prototype=new jsts_old.geomgraph.PlanarGraph();jsts_old.geomgraph.GeometryGraph.constructor=jsts_old.geomgraph.GeometryGraph;jsts_old.geomgraph.GeometryGraph.prototype.createEdgeSetIntersector=function(){return new jsts_old.geomgraph.index.SimpleEdgeSetIntersector();};jsts_old.geomgraph.GeometryGraph.determineBoundary=function(boundaryNodeRule,boundaryCount){return boundaryNodeRule.isInBoundary(boundaryCount)?Location.BOUNDARY:Location.INTERIOR;};jsts_old.geomgraph.GeometryGraph.prototype.parentGeom=null;jsts_old.geomgraph.GeometryGraph.prototype.lineEdgeMap=null;jsts_old.geomgraph.GeometryGraph.prototype.boundaryNodeRule=null;jsts_old.geomgraph.GeometryGraph.prototype.useBoundaryDeterminationRule=true;jsts_old.geomgraph.GeometryGraph.prototype.argIndex=null;jsts_old.geomgraph.GeometryGraph.prototype.boundaryNodes=null;jsts_old.geomgraph.GeometryGraph.prototype.hasTooFewPoints=false;jsts_old.geomgraph.GeometryGraph.prototype.invalidPoint=null;jsts_old.geomgraph.GeometryGraph.prototype.areaPtLocator=null;jsts_old.geomgraph.GeometryGraph.prototype.ptLocator=null;jsts_old.geomgraph.GeometryGraph.prototype.getGeometry=function(){return this.parentGeom;};jsts_old.geomgraph.GeometryGraph.prototype.getBoundaryNodes=function(){if(this.boundaryNodes===null)
this.boundaryNodes=this.nodes.getBoundaryNodes(this.argIndex);return this.boundaryNodes;};jsts_old.geomgraph.GeometryGraph.prototype.getBoundaryNodeRule=function(){return this.boundaryNodeRule;};jsts_old.geomgraph.GeometryGraph.prototype.findEdge=function(line){return this.lineEdgeMap.get(line);};jsts_old.geomgraph.GeometryGraph.prototype.computeSplitEdges=function(edgelist){for(var i=this.edges.iterator();i.hasNext();){var e=i.next();e.eiList.addSplitEdges(edgelist);}}
jsts_old.geomgraph.GeometryGraph.prototype.add=function(g){if(g.isEmpty()){return;}
if(g instanceof jsts_old.geom.MultiPolygon)
this.useBoundaryDeterminationRule=false;if(g instanceof jsts_old.geom.Polygon)
this.addPolygon(g);else if(g instanceof jsts_old.geom.LineString)
this.addLineString(g);else if(g instanceof jsts_old.geom.Point)
this.addPoint(g);else if(g instanceof jsts_old.geom.MultiPoint)
this.addCollection(g);else if(g instanceof jsts_old.geom.MultiLineString)
this.addCollection(g);else if(g instanceof jsts_old.geom.MultiPolygon)
this.addCollection(g);else if(g instanceof jsts_old.geom.GeometryCollection)
this.addCollection(g);else
throw new jsts_old.error.IllegalArgumentError('Geometry type not supported.');};jsts_old.geomgraph.GeometryGraph.prototype.addCollection=function(gc){for(var i=0;i<gc.getNumGeometries();i++){var g=gc.getGeometryN(i);this.add(g);}};jsts_old.geomgraph.GeometryGraph.prototype.addEdge=function(e){this.insertEdge(e);var coord=e.getCoordinates();this.insertPoint(this.argIndex,coord[0],Location.BOUNDARY);this.insertPoint(this.argIndex,coord[coord.length-1],Location.BOUNDARY);};jsts_old.geomgraph.GeometryGraph.prototype.addPoint=function(p){var coord=p.getCoordinate();this.insertPoint(this.argIndex,coord,Location.INTERIOR);};jsts_old.geomgraph.GeometryGraph.prototype.addLineString=function(line){var coord=jsts_old.geom.CoordinateArrays.removeRepeatedPoints(line.getCoordinates());if(coord.length<2){this.hasTooFewPoints=true;this.invalidPoint=coords[0];return;}
var e=new jsts_old.geomgraph.Edge(coord,new jsts_old.geomgraph.Label(this.argIndex,Location.INTERIOR));this.lineEdgeMap.put(line,e);this.insertEdge(e);Assert.isTrue(coord.length>=2,'found LineString with single point');this.insertBoundaryPoint(this.argIndex,coord[0]);this.insertBoundaryPoint(this.argIndex,coord[coord.length-1]);};jsts_old.geomgraph.GeometryGraph.prototype.addPolygonRing=function(lr,cwLeft,cwRight){if(lr.isEmpty())
return;var coord=jsts_old.geom.CoordinateArrays.removeRepeatedPoints(lr.getCoordinates());if(coord.length<4){this.hasTooFewPoints=true;this.invalidPoint=coord[0];return;}
var left=cwLeft;var right=cwRight;if(jsts_old.algorithm.CGAlgorithms.isCCW(coord)){left=cwRight;right=cwLeft;}
var e=new jsts_old.geomgraph.Edge(coord,new jsts_old.geomgraph.Label(this.argIndex,Location.BOUNDARY,left,right));this.lineEdgeMap.put(lr,e);this.insertEdge(e);this.insertPoint(this.argIndex,coord[0],Location.BOUNDARY);};jsts_old.geomgraph.GeometryGraph.prototype.addPolygon=function(p){this.addPolygonRing(p.getExteriorRing(),Location.EXTERIOR,Location.INTERIOR);for(var i=0;i<p.getNumInteriorRing();i++){var hole=p.getInteriorRingN(i);this.addPolygonRing(hole,Location.INTERIOR,Location.EXTERIOR);}};jsts_old.geomgraph.GeometryGraph.prototype.computeEdgeIntersections=function(g,li,includeProper){var si=new jsts_old.geomgraph.index.SegmentIntersector(li,includeProper,true);si.setBoundaryNodes(this.getBoundaryNodes(),g.getBoundaryNodes());var esi=this.createEdgeSetIntersector();esi.computeIntersections(this.edges,g.edges,si);return si;};jsts_old.geomgraph.GeometryGraph.prototype.computeSelfNodes=function(li,computeRingSelfNodes){var si=new jsts_old.geomgraph.index.SegmentIntersector(li,true,false);var esi=this.createEdgeSetIntersector();if(!computeRingSelfNodes&&(this.parentGeom instanceof jsts_old.geom.LinearRing||this.parentGeom instanceof jsts_old.geom.Polygon||this.parentGeom instanceof jsts_old.geom.MultiPolygon)){esi.computeIntersections(this.edges,si,false);}else{esi.computeIntersections(this.edges,si,true);}
this.addSelfIntersectionNodes(this.argIndex);return si;};jsts_old.geomgraph.GeometryGraph.prototype.insertPoint=function(argIndex,coord,onLocation){var n=this.nodes.addNode(coord);var lbl=n.getLabel();if(lbl==null){n.label=new jsts_old.geomgraph.Label(argIndex,onLocation);}else
lbl.setLocation(argIndex,onLocation);};jsts_old.geomgraph.GeometryGraph.prototype.insertBoundaryPoint=function(argIndex,coord){var n=this.nodes.addNode(coord);var lbl=n.getLabel();var boundaryCount=1;var loc=Location.NONE;if(lbl!==null)
loc=lbl.getLocation(argIndex,Position.ON);if(loc===Location.BOUNDARY)
boundaryCount++;var newLoc=jsts_old.geomgraph.GeometryGraph.determineBoundary(this.boundaryNodeRule,boundaryCount);lbl.setLocation(argIndex,newLoc);};jsts_old.geomgraph.GeometryGraph.prototype.addSelfIntersectionNodes=function(argIndex){for(var i=this.edges.iterator();i.hasNext();){var e=i.next();var eLoc=e.getLabel().getLocation(argIndex);for(var eiIt=e.eiList.iterator();eiIt.hasNext();){var ei=eiIt.next();this.addSelfIntersectionNode(argIndex,ei.coord,eLoc);}}};jsts_old.geomgraph.GeometryGraph.prototype.addSelfIntersectionNode=function(argIndex,coord,loc){if(this.isBoundaryNode(argIndex,coord))
return;if(loc===Location.BOUNDARY&&this.useBoundaryDeterminationRule)
this.insertBoundaryPoint(argIndex,coord);else
this.insertPoint(argIndex,coord,loc);};jsts_old.geomgraph.GeometryGraph.prototype.getInvalidPoint=function(){return this.invalidPoint;};})();